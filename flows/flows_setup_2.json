[
    {
        "id": "ac900a3fdc09a7bf",
        "type": "tab",
        "label": "Setup 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "97d4f0dbe521c35a",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1270,
        "y": 1420,
        "wires": []
    },
    {
        "id": "09c4bf47696ba509",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1090,
        "y": 1420,
        "wires": [
            [
                "97d4f0dbe521c35a"
            ]
        ]
    },
    {
        "id": "77f11d734a52178e",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "func": "//var cmd = \"curl http://localhost:5002/auth/token --data 'client_id=node-red-admin&grant_type=password&scope=*&username=admin&password=Duu1cahe'\";\n\nmsg.payload={};\nmsg.payload['client_id']=\"node-red-admin\";\nmsg.payload['grant_type']=\"password\";\nmsg.payload['scope']=\"*\";\nmsg.payload['username']=\"admin\";\nmsg.payload['password']=\"admin\";\n\n\nmsg.url = \"http://localhost:\" + msg.port + \"/auth/token\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 320,
        "wires": [
            [
                "e6bc002c7392e0dc"
            ]
        ]
    },
    {
        "id": "e6bc002c7392e0dc",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "7901b3b9835df8ba",
                "1461b78dcaf19c57"
            ]
        ]
    },
    {
        "id": "d5f3e40036a26a89",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1260,
        "y": 320,
        "wires": []
    },
    {
        "id": "8a6e146d074ff03f",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "auth",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "d5f3e40036a26a89"
            ]
        ]
    },
    {
        "id": "c197dad2e2a88b90",
        "type": "json",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "pretty": false,
        "x": 880,
        "y": 320,
        "wires": [
            [
                "8a6e146d074ff03f"
            ]
        ]
    },
    {
        "id": "8796446282db9c4e",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flow_mysql_influxdb.json",
        "filename": "/home/pi/plumbing-controller/flows/flow_mysql_influxdb.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 410,
        "y": 1420,
        "wires": [
            [
                "d99fe9fa0d42f1cf"
            ]
        ]
    },
    {
        "id": "7901b3b9835df8ba",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 260,
        "wires": []
    },
    {
        "id": "2833d5e736c34b2a",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 440,
        "wires": []
    },
    {
        "id": "bc2f0f01a91c72e4",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 440,
        "wires": [
            [
                "2833d5e736c34b2a",
                "fba270245f716790"
            ]
        ]
    },
    {
        "id": "1c52a518306f8854",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "aea492096a0be938"
            ]
        ]
    },
    {
        "id": "139f657b2eac6bf4",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 500,
        "wires": []
    },
    {
        "id": "fba270245f716790",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-mysql ",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-mysql\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "0d62659052a95287"
            ]
        ]
    },
    {
        "id": "0d62659052a95287",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 500,
        "wires": [
            [
                "139f657b2eac6bf4",
                "0d3fd0022e222db3"
            ]
        ]
    },
    {
        "id": "aea492096a0be938",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-influxdb",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-influxdb\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 440,
        "wires": [
            [
                "bc2f0f01a91c72e4"
            ]
        ]
    },
    {
        "id": "1461b78dcaf19c57",
        "type": "switch",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "access_token",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 320,
        "wires": [
            [
                "c197dad2e2a88b90"
            ]
        ]
    },
    {
        "id": "288eaef20e642ecb",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1130,
        "y": 1800,
        "wires": []
    },
    {
        "id": "15de0fd6f58a78be",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "flow",
        "func": "\nmsg.payload = JSON.stringify({\n   \"id\": \"91ad452.0000111\",\n   \"label\": \"Public MQTT\",\n   \"nodes\": JSON.parse(msg.payload),\n   \"configs\": []\n});\n\n\n\n\nmsg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/flow\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n\nif (global.get(\"noderedmqttpass\")) {\n\n   var cfrom = '\"broker\":\"localhost\"';\n   var cto = '\"broker\":\"localhost\", \"credentials\":{\"user\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n\n}\n\nif (global.get(\"settings.flow\")==\"flows_ihiu_setup\") {\n    \n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"setup\",\"password\":\"setup\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n} else {\n\n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\nvar cfrom = '\"broker\":\"192.168.0.3\"';\nvar cto = '\"broker\":\"192.168.0.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\nvar cfrom = '\"broker\":\"192.168.1.3\"';\nvar cto = '\"broker\":\"192.168.1.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1800,
        "wires": [
            [
                "032c14af78649f3b"
            ]
        ]
    },
    {
        "id": "b7bed141afd0d73b",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 950,
        "y": 1800,
        "wires": [
            [
                "288eaef20e642ecb"
            ]
        ]
    },
    {
        "id": "0fc04fa639364717",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "nodes_public_mqtt.json",
        "filename": "/home/pi/plumbing-controller/flows/nodes_public_mqtt.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 430,
        "y": 1800,
        "wires": [
            [
                "15de0fd6f58a78be"
            ]
        ]
    },
    {
        "id": "032c14af78649f3b",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "Credentials",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"MySQLdatabase\"",
                "fromt": "str",
                "to": "\"type\": \"MySQLdatabase\", \"credentials\":{\"user\":\"root\", \"password\":\"zccamei4ies@\"}",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"influxdb\"",
                "fromt": "str",
                "to": "\"type\": \"influxdb\", \"credentials\":{\"token\":\"oHyHPxoTEHQysurXl_4Kxbmj5EnpWtsg3RnSXoMnLeO01ICmIBUXIo3yXNEsLxMtPzTb9lwgzHDX5tL4ipOzjw==\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1800,
        "wires": [
            [
                "b7bed141afd0d73b"
            ]
        ]
    },
    {
        "id": "67c009f0411c8299",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1420,
        "wires": [
            [
                "8796446282db9c4e"
            ]
        ]
    },
    {
        "id": "85f6f1001955c4ee",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1800,
        "wires": [
            [
                "0fc04fa639364717"
            ]
        ]
    },
    {
        "id": "f6e133436ac4793a",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 560,
        "wires": []
    },
    {
        "id": "0d3fd0022e222db3",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-crypto-js",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-crypto-js\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 560,
        "wires": [
            [
                "9c0b93ed15db32a2"
            ]
        ]
    },
    {
        "id": "9c0b93ed15db32a2",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 560,
        "wires": [
            [
                "f6e133436ac4793a",
                "980f0f34f77b13b7"
            ]
        ]
    },
    {
        "id": "021aa70716465253",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Request for Authorisation where password is set",
        "info": "",
        "x": 230,
        "y": 220,
        "wires": []
    },
    {
        "id": "2c426c02c64b266c",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Install Nodes required for Flows",
        "info": "",
        "x": 180,
        "y": 380,
        "wires": []
    },
    {
        "id": "775445f28c7e016c",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Deploy Complete Flows",
        "info": "",
        "x": 160,
        "y": 1300,
        "wires": []
    },
    {
        "id": "753c89bda373e552",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Deploy Individual Tab",
        "info": "",
        "x": 160,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7db1854d246ef6bc",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "77f11d734a52178e"
            ]
        ]
    },
    {
        "id": "cd85c4a980403ed1",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d0d5d4dda1d26f70",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "flow",
        "func": "\n\nmsg.headers = {};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/flow\";\n\n\n// {\n//    \"id\": \"e090c99b.574098\",\n//       \"type\": \"tab\",\n//          \"label\": \"HIU\",\n//             \"disabled\": false,\n//                \"info\": \"\"\n// },\n\n\nfunction checkTab(nodeitem) {\n   return nodeitem.type == \"tab\";\n}\n\nfunction filterTab(nodeitem) {\n   return nodeitem.type != \"tab\";\n}\n\nmsg.payload = JSON.parse(msg.payload);\n\nvar tabf = msg.payload.filter(checkTab)[0];\n\ntabf.nodes = msg.payload.filter(filterTab);\n\n// msg.payload = JSON.stringify({\n//    \"id\": \"91ad452.0000112\",\n//    \"label\": \"HIU\",\n//    \"nodes\": JSON.parse(msg.payload),\n//    \"configs\": []\n// });\n\nmsg.payload = tabf;\nreturn msg;\n\n\n\n\n\n\nmsg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/flow\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n\nif (global.get(\"noderedmqttpass\")) {\n\n   var cfrom = '\"broker\":\"localhost\"';\n   var cto = '\"broker\":\"localhost\", \"credentials\":{\"user\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n\n}\n\nif (global.get(\"settings.flow\")==\"flows_ihiu_setup\") {\n    \n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"setup\",\"password\":\"setup\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n} else {\n\n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\nvar cfrom = '\"broker\":\"192.168.0.3\"';\nvar cto = '\"broker\":\"192.168.0.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\nvar cfrom = '\"broker\":\"192.168.1.3\"';\nvar cto = '\"broker\":\"192.168.1.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "cf586d4bd7f24034",
                "aca36bf3864cc267"
            ]
        ]
    },
    {
        "id": "be86f14993865fe2",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1030,
        "y": 1600,
        "wires": [
            [
                "cd85c4a980403ed1"
            ]
        ]
    },
    {
        "id": "aca36bf3864cc267",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "Credentials",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"MySQLdatabase\"",
                "fromt": "str",
                "to": "\"type\": \"MySQLdatabase\", \"credentials\":{\"user\":\"root\", \"password\":\"zccamei4ies@\"}",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"influxdb\"",
                "fromt": "str",
                "to": "\"type\": \"influxdb\", \"credentials\":{\"token\":\"oHyHPxoTEHQysurXl_4Kxbmj5EnpWtsg3RnSXoMnLeO01ICmIBUXIo3yXNEsLxMtPzTb9lwgzHDX5tL4ipOzjw==\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1600,
        "wires": [
            [
                "be86f14993865fe2"
            ]
        ]
    },
    {
        "id": "429afe0f293b591a",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1600,
        "wires": [
            [
                "fd0ab91fb5e3b28c"
            ]
        ]
    },
    {
        "id": "53e684ac2805fd16",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Deploy Individual Tab",
        "info": "",
        "x": 160,
        "y": 1540,
        "wires": []
    },
    {
        "id": "cf586d4bd7f24034",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1660,
        "wires": []
    },
    {
        "id": "fd0ab91fb5e3b28c",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flow_public_mqtt.json",
        "filename": "/home/pi/plumbing-controller/flows/flow_public_mqtt.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 420,
        "y": 1600,
        "wires": [
            [
                "d0d5d4dda1d26f70"
            ]
        ]
    },
    {
        "id": "d99fe9fa0d42f1cf",
        "type": "credentials",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "props": [
            {
                "value": "mqttpass",
                "type": "msg"
            },
            {
                "value": "mysqlpass",
                "type": "msg"
            },
            {
                "value": "influxdbpass",
                "type": "msg"
            },
            {
                "value": "emailuser",
                "type": "msg"
            },
            {
                "value": "emailpass",
                "type": "msg"
            }
        ],
        "x": 690,
        "y": 1420,
        "wires": [
            [
                "42bb74a741bba713"
            ]
        ]
    },
    {
        "id": "b25ce75334084ab2",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flow_hiu.json",
        "filename": "/home/pi/plumbing-controller/flows/flow_hiu.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 410,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "ec78d36e0893ad3e",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 620,
        "wires": []
    },
    {
        "id": "980f0f34f77b13b7",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-heatweb",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-heatweb\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 620,
        "wires": [
            [
                "91719cf724984c02"
            ]
        ]
    },
    {
        "id": "91719cf724984c02",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 620,
        "wires": [
            [
                "ec78d36e0893ad3e",
                "9004c86aa9528228"
            ]
        ]
    },
    {
        "id": "0253cc725be8d6da",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 680,
        "wires": []
    },
    {
        "id": "9004c86aa9528228",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-email",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-email\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 680,
        "wires": [
            [
                "87c8ca5dbc0f0e54"
            ]
        ]
    },
    {
        "id": "87c8ca5dbc0f0e54",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 680,
        "wires": [
            [
                "0253cc725be8d6da",
                "5affa22be9a8ea42"
            ]
        ]
    },
    {
        "id": "745d17b668022a10",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 740,
        "wires": []
    },
    {
        "id": "5affa22be9a8ea42",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-credentials",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-credentials\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 740,
        "wires": [
            [
                "5a15e7560b6938c7"
            ]
        ]
    },
    {
        "id": "5a15e7560b6938c7",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 740,
        "wires": [
            [
                "745d17b668022a10",
                "e55559ebb19b655d"
            ]
        ]
    },
    {
        "id": "d174518f0ceca3be",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 800,
        "wires": []
    },
    {
        "id": "e55559ebb19b655d",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-m-bus",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-m-bus\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "b0b26977e57af52c"
            ]
        ]
    },
    {
        "id": "b0b26977e57af52c",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 800,
        "wires": [
            [
                "d174518f0ceca3be",
                "a2ab75a409af4b07"
            ]
        ]
    },
    {
        "id": "79df35ef89cb3231",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 860,
        "wires": []
    },
    {
        "id": "a2ab75a409af4b07",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-ui-table",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-ui-table\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 860,
        "wires": [
            [
                "3c3483790635f883"
            ]
        ]
    },
    {
        "id": "3c3483790635f883",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 860,
        "wires": [
            [
                "79df35ef89cb3231",
                "caeb0452cc184a0c"
            ]
        ]
    },
    {
        "id": "bfe7b40b9bc0ae5d",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flows_original.json",
        "filename": "/home/pi/plumbing-controller/flows/flows_original.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "d99fe9fa0d42f1cf"
            ]
        ]
    },
    {
        "id": "3f0777a813e5c8b4",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1360,
        "wires": [
            [
                "bfe7b40b9bc0ae5d"
            ]
        ]
    },
    {
        "id": "93503b33a040d381",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 920,
        "wires": []
    },
    {
        "id": "caeb0452cc184a0c",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-ui-heatmap",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-ui-heatmap\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 920,
        "wires": [
            [
                "bb98a9859ea1de40"
            ]
        ]
    },
    {
        "id": "bb98a9859ea1de40",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 920,
        "wires": [
            [
                "93503b33a040d381",
                "72ff61cd5ce71926"
            ]
        ]
    },
    {
        "id": "db29ab794e937777",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 980,
        "wires": []
    },
    {
        "id": "72ff61cd5ce71926",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-arp",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-arp\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 980,
        "wires": [
            [
                "99fa154b867d42d8"
            ]
        ]
    },
    {
        "id": "99fa154b867d42d8",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 980,
        "wires": [
            [
                "db29ab794e937777",
                "e846ec7db8580e41"
            ]
        ]
    },
    {
        "id": "59d65667070c9b7d",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e846ec7db8580e41",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-daemon",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-daemon\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "f5373077fbede4c9"
            ]
        ]
    },
    {
        "id": "f5373077fbede4c9",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 1040,
        "wires": [
            [
                "59d65667070c9b7d",
                "0705d9ed15945849"
            ]
        ]
    },
    {
        "id": "9aaa500a77bee1ce",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0705d9ed15945849",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-smooth",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-smooth\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1100,
        "wires": [
            [
                "9f09fbf077ad0025"
            ]
        ]
    },
    {
        "id": "9f09fbf077ad0025",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 1100,
        "wires": [
            [
                "9aaa500a77bee1ce",
                "762835941708fda2"
            ]
        ]
    },
    {
        "id": "b24088e385540642",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 1160,
        "wires": []
    },
    {
        "id": "762835941708fda2",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-ip",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-ip\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "52a84060bfdc405a"
            ]
        ]
    },
    {
        "id": "52a84060bfdc405a",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720,
        "y": 1160,
        "wires": [
            [
                "b24088e385540642"
            ]
        ]
    },
    {
        "id": "92a11851fbdbc43f",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "df9db160fa189b93"
            ]
        ]
    },
    {
        "id": "df9db160fa189b93",
        "type": "exec",
        "z": "ac900a3fdc09a7bf",
        "command": "sudo docker rm --force mynodered2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "064b48217e68226b",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 100,
        "wires": [
            [
                "1b54f92a3bf37049"
            ]
        ]
    },
    {
        "id": "1b54f92a3bf37049",
        "type": "exec",
        "z": "ac900a3fdc09a7bf",
        "command": "sudo docker run -d -it -p 5002:1880 -p 8002:8000 --net mqtt --restart=always -v node_red_data_2:/data -v /boot/heatweb/:/boot/heatweb/ -v /home/pi/plumbing-controller/:/home/pi/plumbing-controller/ --add-host=host.docker.internal:host-gateway --privileged --device /dev/ttyAMA1 --device /dev/ttyAMA2 --device /dev/ttyAMA3 --device /dev/ttyAMA4 --name mynodered2 heatweb/plumbing-controller:latest",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1850,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "461cb2d1bf2ad801",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flows_setup_5002.json",
        "filename": "/home/pi/plumbing-controller/flows/flows_setup_5002.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 420,
        "y": 1480,
        "wires": [
            [
                "d99fe9fa0d42f1cf"
            ]
        ]
    },
    {
        "id": "0f215c25b8170f4f",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1480,
        "wires": [
            [
                "461cb2d1bf2ad801"
            ]
        ]
    },
    {
        "id": "42bb74a741bba713",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "flows",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/flows\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n\n\n//var ff = msg.payload;\nvar ff = JSON.parse(msg.payload);\n\nfor (var part in ff) {\n\n\n   if (msg.mqttpass) {\n\n      if (ff[part].type == \"mqtt-broker\" && ff[part].broker == \"mqtt\") { ff[part].credentials = { \"user\": \"admin\", \"password\": msg.mqttpass }; }\n    \n   }\n\n   if (msg.mysqlpass) {\n\n      if (ff[part].type == \"MySQLdatabase\" && ff[part].host == \"mysql\") { ff[part].credentials = { \"user\": \"root\", \"password\": msg.mysqlpass }; }\n\n   }\n\n   if (msg.influxdbpass) {\n\n      if (ff[part].type == \"influxdb\" && ff[part].hostname == \"27.0.0.1\") { ff[part].credentials = { \"token\": msg.influxdbpass }; }\n\n   }\n\n   if (msg.emailpass && msg.emailuser) {\n\n      if (ff[part].type == \"e-mail\") { ff[part].credentials = { \"userid\": msg.emailuser, \"password\": msg.emailpass }; }\n\n   }\n\n   \n\n// //testing\n// var str1 = '\"type\": \"credentials\"'\nvar creds = [{ \"value\": \"xxx\", \"type\": \"str\" }, { \"value\": \"ddddd\", \"type\": \"str\" }, { \"value\": \"fffff\", \"type\": \"str\" }];\nvar creds2 = JSON.stringify(creds) ;\n// creds2 = creds2.substr(1);\n// creds2 = creds2.substr(0, creds2.length - 1);\n// msg.payload = msg.payload.replace(str1, creds2);\n// // not working !!!\n\n   if (ff[part].type == \"credentials\") { ff[part].credentials = creds2; }\n\n\n}\n\nmsg.payload = JSON.stringify(ff);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1420,
        "wires": [
            [
                "09c4bf47696ba509"
            ]
        ]
    }
]