[
    {
        "id": "4b06df1842fffcc3",
        "type": "tab",
        "label": "Custom",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b7a4eb8c.aec2c8",
        "type": "tab",
        "label": "Front",
        "disabled": false,
        "info": ""
    },
    {
        "id": "580bb6a3.5dc1d",
        "type": "tab",
        "label": "Heatweb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b2bca411e4cdd603",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "315f0920.148fe6",
        "type": "tab",
        "label": "Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "78c26ef1.61809",
        "type": "tab",
        "label": "Desktop",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9ad9f74f.55ef58",
        "type": "tab",
        "label": "Screen",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16311b21.f27be5",
        "type": "tab",
        "label": "IO Select",
        "disabled": true,
        "info": ""
    },
    {
        "id": "e5ac7e17.ed588",
        "type": "tab",
        "label": "Modem",
        "disabled": true,
        "info": ""
    },
    {
        "id": "e090c99b.574098",
        "type": "tab",
        "label": "HIU",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b20313b.2bf7af",
        "type": "tab",
        "label": "Modbus Slave",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c7c5e263.50a89",
        "type": "tab",
        "label": "MQTT",
        "disabled": true,
        "info": ""
    },
    {
        "id": "543bdb0775b77d7e",
        "type": "tab",
        "label": "MQTT Connect",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d26c3be6.b5ef58",
        "type": "tab",
        "label": "Setup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "caf59ec6.61c85",
        "type": "tab",
        "label": "Software",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ac900a3fdc09a7bf",
        "type": "tab",
        "label": "Software 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cb3266cf.ceb2a",
        "type": "tab",
        "label": "Bluetooth",
        "disabled": true,
        "info": ""
    },
    {
        "id": "31a18cc4.31ff54",
        "type": "tab",
        "label": "Video",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c1c0e71a.90aae",
        "type": "tab",
        "label": "Mesh",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f0a27113.452c7",
        "type": "tab",
        "label": "WIFI Management",
        "disabled": false,
        "info": ""
    },
    {
        "id": "789aa767.91c36",
        "type": "tab",
        "label": "M-Bus_Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "84006830c8bcb952",
        "type": "tab",
        "label": "Sequent TI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5eef512bbec6c00c",
        "type": "tab",
        "label": "Operation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d74fbbb92887d522",
        "type": "tab",
        "label": "MLX90640 Thermal Camera",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9f18bf08.c2a65",
        "type": "tab",
        "label": "Sontay Modbus",
        "disabled": true,
        "info": "https://www.binaryconvert.com/convert_signed_int.html?hexadecimal=000019FD"
    },
    {
        "id": "d1f3d002.63ee48",
        "type": "subflow",
        "name": "rbe 1m",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "dd19c0de.9bebd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 160,
                "wires": [
                    {
                        "id": "29eae4ad.d68f2c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a8d56bd2.c3c6f",
        "type": "subflow",
        "name": "runScript",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 139,
                "y": 96,
                "wires": [
                    {
                        "id": "469bad72.0a7394"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 830,
                "y": 460,
                "wires": [
                    {
                        "id": "6b7c3cb6.c9c104",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "inputLabels": [
            "Script"
        ],
        "outputLabels": [
            "Completed",
            ""
        ]
    },
    {
        "id": "3d0a40a7.66aa4",
        "type": "subflow",
        "name": "html table",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "790d9c49.fccc04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 180,
                "wires": [
                    {
                        "id": "790d9c49.fccc04",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "1887c5fb483f5c64",
        "type": "subflow",
        "name": "sequent in",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d24aada4e721da07"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "6bb4ad03.4f4974",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 160,
                "wires": [
                    {
                        "id": "6bb4ad03.4f4974",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "channel",
                "type": "num",
                "value": "1"
            },
            {
                "name": "block",
                "type": "str",
                "value": "universal"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 500,
            "y": 220,
            "wires": [
                {
                    "id": "6bb4ad03.4f4974",
                    "port": 2
                }
            ]
        }
    },
    {
        "id": "b2d492ed.c4def",
        "type": "subflow",
        "name": "rbe 3min",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "ee023f13.5958c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 160,
                "wires": [
                    {
                        "id": "61b66a77.aec334",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "dadb5d41.655b1",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#1e7194",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#3037e8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#d91212",
                    "value": "#3037e8",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#282828",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#141414",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#757af0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#333333",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#454ae8",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 57,
                "sy": 52,
                "gx": 3,
                "gy": 2,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 5
            }
        }
    },
    {
        "id": "7aaf3d97.4092e4",
        "type": "ui_group",
        "name": "Dash1",
        "tab": "d81a7cb4.620e68",
        "order": 4,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d81a7cb4.620e68",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7ad2997b.42a908",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "550ec543.b55bc4",
        "type": "heatwebConfig",
        "name": "RPi Touchscreen",
        "description": "London Climate Hire Touchscreen Controller",
        "url": "https://hw3.ddns.net",
        "nodeId": "oawaiT3o",
        "networkId": "rAndD-lch",
        "localNetworkId": "local",
        "localDirectory": "/home/pi/node-hiu",
        "htmlDirectory": "/home/pi/.node-red/node_modules/node-red-contrib-heatweb/public",
        "httpPort": "8000",
        "httpsKey": "",
        "httpsCert": "",
        "deviceType": "",
        "adminPassword": "admin",
        "guestPassword": "",
        "loadBoot": true
    },
    {
        "id": "b7d47a6f.e1d278",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "2",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "888f4ceb.4b158",
        "type": "ui_tab",
        "name": "Setup",
        "icon": "fa-cog",
        "order": 23,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cb203bcb.f1ec68",
        "type": "ui_group",
        "name": "DefaultSetup",
        "tab": "888f4ceb.4b158",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false
    },
    {
        "id": "ee34b8ab.222b68",
        "type": "ui_group",
        "name": "MQTT Data ",
        "tab": "c6a43c18.30063",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "8ef017d0.9a0628",
        "type": "ui_group",
        "name": "MenuReadings",
        "tab": "c6a43c18.30063",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "43af1847.935fd8",
        "type": "ui_group",
        "name": "Default",
        "tab": "c6a43c18.30063",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c6a43c18.30063",
        "type": "ui_tab",
        "name": "Readings",
        "icon": "fa-table",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "31ddf4e3.0519dc",
        "type": "ui_group",
        "name": "Default",
        "tab": "4d7ab312.a67afc",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4d7ab312.a67afc",
        "type": "ui_tab",
        "name": "Graph",
        "icon": "fa-line-chart",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "31f8bc29.20af54",
        "type": "ui_tab",
        "name": "My Computer",
        "icon": "dashboard",
        "order": 14
    },
    {
        "id": "dc1f69fc.f0e588",
        "type": "ui_tab",
        "name": "Data Policy",
        "icon": "backup",
        "order": 13
    },
    {
        "id": "e3891c58.4b207",
        "type": "ui_tab",
        "name": "MQTT Network",
        "icon": "dashboard",
        "order": 15
    },
    {
        "id": "9afb722c.e8c9b",
        "type": "ui_tab",
        "name": "M-Bus",
        "icon": "plug",
        "order": 11
    },
    {
        "id": "20ea3dab.251582",
        "type": "ui_tab",
        "name": "Thermostat",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "db644eb4.b9d0a",
        "type": "ui_group",
        "name": "M",
        "tab": "ad9b32d2.b3054",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ad9b32d2.b3054",
        "type": "ui_tab",
        "name": "Browser",
        "icon": "fa-line-chart",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "902ffee.c2021",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "55240225.da318c",
        "type": "ui_tab",
        "name": "More",
        "icon": "dashboard",
        "order": 17,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7db8fbd.6047f",
        "type": "ui_group",
        "name": "Default",
        "tab": "55240225.da318c",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "36b47e47.04f1c2",
        "type": "ui_group",
        "name": "Buttons",
        "tab": "888f4ceb.4b158",
        "order": 2,
        "disp": false,
        "width": "3",
        "collapse": false
    },
    {
        "id": "4509e7eb.5ccb18",
        "type": "ui_group",
        "name": "Users",
        "tab": "82ab3134.d3b4f",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "5c04b019.69af5",
        "type": "ui_group",
        "name": "Add User",
        "tab": "82ab3134.d3b4f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8e7666d0.22279",
        "type": "ui_group",
        "name": "Permissions",
        "tab": "82ab3134.d3b4f",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "21a28cd2.45cda4",
        "type": "ui_group",
        "name": "Remove User",
        "tab": "82ab3134.d3b4f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ebbde0ed.5df038",
        "type": "ui_group",
        "name": "Config",
        "tab": "82ab3134.d3b4f",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "82ab3134.d3b4f",
        "type": "ui_tab",
        "name": "MQTT Network",
        "icon": "fa-cog",
        "order": 25,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6cb6f27e.dcf5fc",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "false",
        "responsetimeout": ""
    },
    {
        "id": "3ea80383.e1f8d4",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "7e0c6c31.8f0aa4",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB2",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "4e38699.f981018",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB3",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "dccd9d11.4e316",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB4",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "5374dd2d.431cd4",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB5",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "520dbe13.2a881",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB6",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "28c44052.d6082",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB7",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "c00ac9a8.47bd28",
        "type": "ui_group",
        "name": "Settings",
        "tab": "31d8777.fd68588",
        "order": 4,
        "disp": true,
        "width": "6"
    },
    {
        "id": "ebf0a5bd.363498",
        "type": "ui_group",
        "name": "System",
        "tab": "31d8777.fd68588",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "dd8470c4.5741b",
        "type": "ui_group",
        "name": "Statistics",
        "tab": "31d8777.fd68588",
        "order": 5,
        "disp": true,
        "width": "6"
    },
    {
        "id": "6b255050.f88d1",
        "type": "ui_group",
        "name": "Readings",
        "tab": "31d8777.fd68588",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "61c3bb9c.4cfc54",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "31d8777.fd68588",
        "type": "ui_tab",
        "name": "HIU Data",
        "icon": "fa-bath",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c982fbb8.1deb38",
        "type": "ui_group",
        "name": "hidden_group",
        "tab": "7c447e96.4b96a",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c447e96.4b96a",
        "type": "ui_tab",
        "name": "Zooland Sys",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "10aaba68.e21626",
        "type": "ui_tab",
        "name": "Browser",
        "icon": "fa-chrome",
        "order": 18,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e6210b42.32c588",
        "type": "ui_group",
        "name": "Browser",
        "tab": "10aaba68.e21626",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2908388b.8114b8",
        "type": "ui_group",
        "name": "Floorplan test",
        "tab": "a28ff08f.3a822",
        "order": 1,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a28ff08f.3a822",
        "type": "ui_tab",
        "name": "SVG",
        "icon": "dashboard",
        "order": 19,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "205cd0c0.838d9",
        "type": "ui_group",
        "name": "Simplify",
        "tab": "4d7ab312.a67afc",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "60681d0e.666ce4",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB2",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "c8185974.465238",
        "type": "ui_tab",
        "name": "Modem",
        "icon": "fa-signal",
        "order": 20,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b77843a6.57d18",
        "type": "ui_group",
        "name": "Modem AT Interface",
        "tab": "c8185974.465238",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d9e45e.bcd50ba",
        "type": "ui_group",
        "name": "Radial Gauges",
        "tab": "e625ce36.34cf3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e625ce36.34cf3",
        "type": "ui_tab",
        "name": "Widgets",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "84ad1d4c.e0002",
        "type": "ui_group",
        "name": "Head",
        "tab": "d81a7cb4.620e68",
        "order": 2,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b41f6501.8d6cb8",
        "type": "ui_group",
        "name": "Dash2",
        "tab": "d81a7cb4.620e68",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7224d05.8b248",
        "type": "ui_group",
        "name": "Head2",
        "tab": "d81a7cb4.620e68",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7bf4aae7.4ecf34",
        "type": "ui_tab",
        "name": "Inputs",
        "icon": "dashboard",
        "order": 22,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "514619f.2c33ae8",
        "type": "ui_group",
        "name": "NTC",
        "tab": "7bf4aae7.4ecf34",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7282e8c.f843",
        "type": "ui_group",
        "name": "Table",
        "tab": "7bf4aae7.4ecf34",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "69ef0a18.33f584",
        "type": "ui_group",
        "name": "Default",
        "tab": "c8185974.465238",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f32de2e7.2e4bb",
        "type": "ui_tab",
        "name": "IO Setup",
        "icon": "fa-cog",
        "order": 24,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f5804b9b.035d58",
        "type": "ui_group",
        "name": "Table of Inputs & Outputs",
        "tab": "f32de2e7.2e4bb",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b2547863.d066a8",
        "type": "ui_group",
        "name": "IO Settings",
        "tab": "f32de2e7.2e4bb",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b389df50.19473",
        "type": "ui_group",
        "name": "G_2",
        "tab": "12ba52b2.c0ce3d",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "12ba52b2.c0ce3d",
        "type": "ui_tab",
        "name": "Video",
        "icon": "fa-video-camera",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "94ca1edb.cfcae",
        "type": "ui_group",
        "name": "Control",
        "tab": "12ba52b2.c0ce3d",
        "order": 2,
        "disp": false,
        "width": "2",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4bc72fe7.4e718",
        "type": "ui_tab",
        "name": "Pumps",
        "icon": "fa-play-circle",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9367dce.2bc062",
        "type": "ui_group",
        "name": "Default",
        "tab": "4bc72fe7.4e718",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89988d0e.d0e61",
        "type": "ui_group",
        "name": "Control",
        "tab": "4bc72fe7.4e718",
        "order": 2,
        "disp": false,
        "width": "2",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8d3148e0.0eee88",
        "type": "ui_group",
        "name": "Floorplan test",
        "tab": "93e19e4f.b80ed",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "93e19e4f.b80ed",
        "type": "ui_tab",
        "name": "SVG",
        "icon": "dashboard",
        "order": 26,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "997e40da.b5acc",
        "type": "ui_group",
        "name": "Floorplan test",
        "tab": "95801a22.bd5f18",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "95801a22.bd5f18",
        "type": "ui_tab",
        "name": "SVG",
        "icon": "dashboard",
        "order": 27,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7d9e8a5a.4ae6c4",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "2",
        "waitfor": "0x11",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "25",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": ""
    },
    {
        "id": "24d3d755.7feff8",
        "type": "ui_group",
        "name": "Request",
        "tab": "f31f7b99.d7a6e8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "19b1379d.e23038",
        "type": "ui_group",
        "name": "Reponse",
        "tab": "f31f7b99.d7a6e8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f31f7b99.d7a6e8",
        "type": "ui_tab",
        "name": "Modbus",
        "icon": "dashboard",
        "order": 28
    },
    {
        "id": "1effca4f.9db4f6",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB5",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "20",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "844e6809.aedfb8",
        "type": "ui_group",
        "name": "Default",
        "tab": "f31f7b99.d7a6e8",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "71c1543469782501",
        "type": "mqtt-broker",
        "name": "local no connect",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b1aff57e760e2779",
        "type": "mqtt-broker",
        "name": "local secure",
        "broker": "localhost",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": false,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "66cec8f95229db4a",
        "type": "ui_tab",
        "name": "MQTT Connect",
        "icon": "dashboard",
        "order": 29,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "439b4e6d49601b9e",
        "type": "ui_group",
        "name": "Subscriptions",
        "tab": "66cec8f95229db4a",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "414e2a18d537ae1a",
        "type": "ui_group",
        "name": "MQTT Setup",
        "tab": "66cec8f95229db4a",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "97ad9f3642bf898c",
        "type": "ui_group",
        "name": "Server Details",
        "tab": "66cec8f95229db4a",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2991a148b11ce6e3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "kind-librarian.cloudmqtt.com",
        "port": "20031",
        "tls": "",
        "clientid": "dfggggafagagagf",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a06de9e4b9d03802",
        "type": "mqtt-broker",
        "name": "",
        "broker": "local secure 2",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": false,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0ac63dcd04f12b14",
        "type": "mqtt-broker",
        "name": "mqttBroker2",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4d0f060d.dee7e8",
        "type": "ui_group",
        "name": "Update",
        "tab": "907bbe60.b555f",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a1e7431b.229d5",
        "type": "ui_group",
        "name": "Settings",
        "tab": "907bbe60.b555f",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "907bbe60.b555f",
        "type": "ui_tab",
        "name": "Wifi",
        "icon": "wifi",
        "order": 21,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f405b29b0175ff69",
        "type": "ui_group",
        "name": "Default",
        "tab": "7700440dec525a5e",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7700440dec525a5e",
        "type": "ui_tab",
        "name": "Network",
        "icon": "dashboard",
        "order": 30,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "618faf057d845369",
        "type": "mbus-client",
        "name": "M_BUS",
        "clienttype": "serial",
        "tcpHost": "127.0.0.1",
        "tcpPort": "10001",
        "tcpTimeout": "4000",
        "serialPort": "/dev/serial0",
        "serialBaudrate": "9600",
        "reconnectTimeout": "10000",
        "autoScan": true,
        "storeDevices": false,
        "disableLogs": true
    },
    {
        "id": "5cc70f0836e6a358",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA4",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "9c55c5f781f252ee",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "91a47fab.74b8c",
        "type": "mbus-client",
        "name": "",
        "clienttype": "serial",
        "tcpHost": "127.0.0.1",
        "tcpPort": "10001",
        "tcpTimeout": "4000",
        "serialPort": "/dev/ttyO1",
        "serialBaudrate": "2400",
        "reconnectTimeout": "10000",
        "autoScan": true,
        "storeDevices": true,
        "disableLogs": true
    },
    {
        "id": "cbd3bd44.834398",
        "type": "ui_group",
        "name": "M-Bus Devices",
        "tab": "16de0243.87ddfe",
        "order": 3,
        "disp": true,
        "width": "14"
    },
    {
        "id": "fb0048e.a5eec38",
        "type": "ui_group",
        "name": "Data",
        "tab": "16de0243.87ddfe",
        "order": 4,
        "disp": true,
        "width": "14"
    },
    {
        "id": "de125633.ed6c5",
        "type": "ui_group",
        "name": "Commands",
        "tab": "16de0243.87ddfe",
        "order": 2,
        "disp": true,
        "width": "14"
    },
    {
        "id": "88aaec54.303928",
        "type": "ui_group",
        "name": "Status",
        "tab": "16de0243.87ddfe",
        "order": 1,
        "disp": true,
        "width": "14"
    },
    {
        "id": "16de0243.87ddfe",
        "type": "ui_tab",
        "name": "M-Bus",
        "icon": "plug",
        "order": 3
    },
    {
        "id": "10bc6f81737934b3",
        "type": "mqtt-broker",
        "name": "normal",
        "broker": "mqtt.heatweb.com",
        "port": "10031",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "08976719287806d2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "hw9.ddns.net",
        "port": "10031",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4b943d8a3af36042",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com\t",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "960bf2f131a4aebe",
        "type": "ui_group",
        "name": "Control",
        "tab": "d81a7cb4.620e68",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd415adc0e696213",
        "type": "ui_group",
        "name": "Graph",
        "tab": "d81a7cb4.620e68",
        "order": 6,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "09f0524558719a79",
        "type": "ui_group",
        "name": "IFrame",
        "tab": "7700440dec525a5e",
        "order": 2,
        "disp": true,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4dd4f99.74f6a8",
        "type": "ui_group",
        "name": "MLXHeatCam",
        "tab": "638b0699.8b44f8",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": true
    },
    {
        "id": "638b0699.8b44f8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3e483ad9b8798814",
        "type": "ui_tab",
        "name": "Heatmap",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a1ac88f20d07cec2",
        "type": "ui_group",
        "name": "Default",
        "tab": "3e483ad9b8798814",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "143de3c.3c1901c",
        "type": "ui_group",
        "name": "Heatmap",
        "tab": "4e49ccae.5e3364",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4e49ccae.5e3364",
        "type": "ui_tab",
        "name": "Heatmap",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2e442781.0c5608",
        "type": "ui_group",
        "name": "Default",
        "tab": "4779176.99cd2e8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4779176.99cd2e8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b8be9e6d.b7861",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "2",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "50",
        "bin": "bin",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "dd19c0de.9bebd",
        "type": "rbe",
        "z": "d1f3d002.63ee48",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "29eae4ad.d68f2c"
            ]
        ]
    },
    {
        "id": "8b22fc2a.83d07",
        "type": "inject",
        "z": "d1f3d002.63ee48",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "dd19c0de.9bebd"
            ]
        ]
    },
    {
        "id": "29eae4ad.d68f2c",
        "type": "switch",
        "z": "d1f3d002.63ee48",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "eb92fac.cb1f108",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo bash /home/pi/node-hiu/addmqttacl.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 246.2857208251953,
        "y": 418.28569984436035,
        "wires": [
            [
                "6b7c3cb6.c9c104"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef9bf9d9.e12f28",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo chown root:node-red /home/pi/node-hiu/addmqttacl.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 296.2857208251953,
        "y": 298.28569984436035,
        "wires": [
            [
                "47ddca7f.78036c"
            ],
            [],
            []
        ]
    },
    {
        "id": "47ddca7f.78036c",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo chmod 755 /home/pi/node-hiu/addmqttacl.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 266.2857208251953,
        "y": 358.28569984436035,
        "wires": [
            [
                "eb92fac.cb1f108"
            ],
            [],
            []
        ]
    },
    {
        "id": "6b7c3cb6.c9c104",
        "type": "exec",
        "z": "a8d56bd2.c3c6f",
        "command": "sudo mv /home/pi/node-hiu/addmqttacl.sh /home/pi/node-hiu/_lastrun.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 336.2857208251953,
        "y": 478.28569984436035,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5ee23677.67d8e",
        "type": "file",
        "z": "a8d56bd2.c3c6f",
        "name": "",
        "filename": "/home/pi/node-hiu/addmqttacl.sh",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "59609ed4.bee04",
        "type": "delay",
        "z": "a8d56bd2.c3c6f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 126.28572082519531,
        "y": 238.28569984436035,
        "wires": [
            [
                "ef9bf9d9.e12f28"
            ]
        ]
    },
    {
        "id": "469bad72.0a7394",
        "type": "trigger",
        "z": "a8d56bd2.c3c6f",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 279,
        "y": 96,
        "wires": [
            [
                "5ee23677.67d8e",
                "59609ed4.bee04"
            ]
        ]
    },
    {
        "id": "790d9c49.fccc04",
        "type": "function",
        "z": "3d0a40a7.66aa4",
        "name": "htmltable",
        "func": "var htmlt = '<table width=\"100%\">';\n\nfor (var key in msg.payload) {\n    \n    \n    htmlt += '<tr><td>' + key.replace(/_/g, ' ') + '</td><td align=\"right\">' + msg.payload[key] + '</td></tr>';\n}\n\nhtmlt += '<table>';\n\nmsg.payload=htmlt;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6bb4ad03.4f4974",
        "type": "function",
        "z": "1887c5fb483f5c64",
        "name": "",
        "func": "\nvar io = global.get(\"io\");\nio = io[msg.block+\"\"+msg.channel];\n\nvar msg1={\"payload\":\"1\"}\nif (!io) {\n    \n    return [null,msg1,msg3];\n}\n\nmsg.io = io;\n\nvar msg3 = {};\nmsg3.payload = msg.channel + \":  \" + io[\"type\"];\n\n\nif(io[\"type\"].indexOf(\"PULSE\")>-1) { msg.payload =  \"countrd\"; }\n\nelse if(io[\"type\"].indexOf(\"10K\")>-1) { \n    \n    if(msg.block==\"universal\") {   msg.payload =  \"r10krd\";  }\n    else {  msg.payload =  \"rthrd\";    msg.payload =  \"rthrd\"; }\n    \n}\n\nelse if(io[\"type\"].indexOf(\"10V\")>-1) { msg.payload =  \"adcrd\"; }\n\n\nelse { \n    \n    msg1={\"payload\":\"1\"}\n    return [null,msg1,msg3];\n    \n    \n}\n\n// address & channel\n//msg.payload =  msg.board + \" \" +  msg.payload + \" \" + msg.channel;\nmsg.payload =  msg.payload + \" \" + msg.channel;\n\nreturn [msg,null,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d24aada4e721da07",
        "type": "change",
        "z": "1887c5fb483f5c64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "channel",
                "pt": "msg",
                "to": "channel",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "block",
                "pt": "msg",
                "to": "block",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "6bb4ad03.4f4974"
            ]
        ]
    },
    {
        "id": "61b66a77.aec334",
        "type": "switch",
        "z": "b2d492ed.c4def",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "23f9ad60.8b4b82",
        "type": "change",
        "z": "b2d492ed.c4def",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "ee023f13.5958c"
            ]
        ]
    },
    {
        "id": "44580c0c.eb7c04",
        "type": "inject",
        "z": "b2d492ed.c4def",
        "name": "",
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "23f9ad60.8b4b82"
            ]
        ]
    },
    {
        "id": "ee023f13.5958c",
        "type": "rbe",
        "z": "b2d492ed.c4def",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "61b66a77.aec334"
            ]
        ]
    },
    {
        "id": "8f286d54970f8289",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "4bd9b75e2d21ced9"
            ]
        ]
    },
    {
        "id": "4bd9b75e2d21ced9",
        "type": "function",
        "z": "4b06df1842fffcc3",
        "name": "customerCode",
        "func": "msg.payload = (global.get(\"settings.customerCode.value\") || \"\");\nmsg.topic = \"set/customerCode\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "c1ee2789316ea580"
            ]
        ]
    },
    {
        "id": "c1ee2789316ea580",
        "type": "ui_text_input",
        "z": "4b06df1842fffcc3",
        "name": "",
        "label": "Customer Code",
        "tooltip": "",
        "group": "cb203bcb.f1ec68",
        "order": 10,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": "10000",
        "topic": "set/customerCode",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "d67f19132c83345d"
            ]
        ]
    },
    {
        "id": "d67f19132c83345d",
        "type": "change",
        "z": "4b06df1842fffcc3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/customerCode",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Customer Code",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "b83d0ee513ac196a"
            ]
        ]
    },
    {
        "id": "a70869c7c01cbeaf",
        "type": "link out",
        "z": "4b06df1842fffcc3",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1055,
        "y": 100,
        "wires": []
    },
    {
        "id": "1311d355aa67b402",
        "type": "trigger",
        "z": "4b06df1842fffcc3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 140,
        "wires": [
            [
                "181346a0ca3a95ca"
            ]
        ]
    },
    {
        "id": "181346a0ca3a95ca",
        "type": "change",
        "z": "4b06df1842fffcc3",
        "name": "post changes",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cmd/request",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local/+/+/settings/#",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "a70869c7c01cbeaf"
            ]
        ]
    },
    {
        "id": "dbc3fc97a4ee6d02",
        "type": "link in",
        "z": "4b06df1842fffcc3",
        "name": "",
        "links": [
            "b83d0ee513ac196a",
            "51cce9e3aa172d7d",
            "906eab4b14a3d44a"
        ],
        "x": 555,
        "y": 100,
        "wires": [
            [
                "1311d355aa67b402",
                "a70869c7c01cbeaf"
            ]
        ]
    },
    {
        "id": "b83d0ee513ac196a",
        "type": "link out",
        "z": "4b06df1842fffcc3",
        "name": "",
        "mode": "link",
        "links": [
            "dbc3fc97a4ee6d02"
        ],
        "x": 915,
        "y": 200,
        "wires": []
    },
    {
        "id": "9d4afe45dfb97666",
        "type": "change",
        "z": "4b06df1842fffcc3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/customerLogo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Customer Logo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 440,
        "wires": [
            [
                "51cce9e3aa172d7d"
            ]
        ]
    },
    {
        "id": "51cce9e3aa172d7d",
        "type": "link out",
        "z": "4b06df1842fffcc3",
        "name": "",
        "mode": "link",
        "links": [
            "dbc3fc97a4ee6d02",
            "2e0e5e775942b580"
        ],
        "x": 1215,
        "y": 440,
        "wires": []
    },
    {
        "id": "1ddeea5e8cf38853",
        "type": "ui_template",
        "z": "4b06df1842fffcc3",
        "group": "36b47e47.04f1c2",
        "name": "Logo",
        "order": 5,
        "width": "3",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "ea00c822d21d8ec7",
        "type": "function",
        "z": "4b06df1842fffcc3",
        "name": "",
        "func": "//msg.payload = '<img src=\"/node_modules/node-red-contrib-heatweb/public/files/images/heatweb.png\">';\n\nif (msg.payload.indexOf(\"http\")<0) { \n    \n    msg.payload = \"/files/images/\" + msg.payload;\n    \n}\n\nmsg.payload = '<table width=\"100%\" height=\"95%\"><tr><td align=\"center\" valign=\"middle\" width=\"100%\" height=\"100%\"><img src=\"' + msg.payload + '\" height=\"40px\"></td></tr></table>';\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "1ddeea5e8cf38853",
                "be08e2373620c747"
            ]
        ]
    },
    {
        "id": "2da7cfae9e2999c8",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "http://heatweb.co.uk/w/images/thumb/3/3f/G12749.png/120px-G12749.png",
        "payloadType": "str",
        "x": 240,
        "y": 540,
        "wires": [
            [
                "ea00c822d21d8ec7"
            ]
        ]
    },
    {
        "id": "7c20992e729fa762",
        "type": "trigger",
        "z": "4b06df1842fffcc3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "9d4afe45dfb97666"
            ]
        ]
    },
    {
        "id": "f9ec234135732e43",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "LCH",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "https://londonclimatehire.co.uk/wp-content/uploads/2021/08/logo-boiler-chiller-hire-1.png",
        "payloadType": "str",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "9d4afe45dfb97666"
            ]
        ]
    },
    {
        "id": "f0704133457a069b",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "Heatweb",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "http://heatweb.co.uk/w/images/thumb/3/3f/G12749.png/120px-G12749.png",
        "payloadType": "str",
        "x": 880,
        "y": 540,
        "wires": [
            [
                "9d4afe45dfb97666"
            ]
        ]
    },
    {
        "id": "900c16ab8e61bf63",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "63896fc306345bdd"
            ]
        ]
    },
    {
        "id": "320d99bc3f900145",
        "type": "function",
        "z": "4b06df1842fffcc3",
        "name": "",
        "func": "\n//msg.options = [ \"Choice 1\", \"Choice 2\", {\"Choice 3\":\"3\"} ]\n\n\nmsg.options = msg.payload.split(\", \");\n\nmsg.options.push({\"None\":\"\"});\n\nmsg.payload = (global.get(\"settings.customerLogo.value\") || \"\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "89f0fe6ecdda4e2e"
            ]
        ]
    },
    {
        "id": "63896fc306345bdd",
        "type": "template",
        "z": "4b06df1842fffcc3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "heatwebb.png, heatweb.png, heatwebsl.png, Ability.png, Alphamech.png, Aqua.png, Artic.jpg, CMMchugh.jpg, Elemc.png, FDHs.png, Gem.jpg, Key.png, LCH.png, Mulalleys.jpg, OCO.png, Pumpsandmotors.jpg, SJP.png, SmithByford.png, Southwark.jpg, Southwark.png, Southwark2.png, TBrown.jpg, TIL.jpg",
        "output": "str",
        "x": 320,
        "y": 380,
        "wires": [
            [
                "320d99bc3f900145"
            ]
        ]
    },
    {
        "id": "89f0fe6ecdda4e2e",
        "type": "ui_dropdown",
        "z": "4b06df1842fffcc3",
        "name": "",
        "label": "Logo",
        "tooltip": "",
        "place": "Select option",
        "group": "cb203bcb.f1ec68",
        "order": 9,
        "width": "8",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "set/customerLogo",
        "topicType": "str",
        "className": "",
        "x": 630,
        "y": 380,
        "wires": [
            [
                "7c20992e729fa762",
                "ea00c822d21d8ec7",
                "79ca83cfa39e3f4d"
            ]
        ]
    },
    {
        "id": "79ca83cfa39e3f4d",
        "type": "debug",
        "z": "4b06df1842fffcc3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 380,
        "wires": []
    },
    {
        "id": "be08e2373620c747",
        "type": "debug",
        "z": "4b06df1842fffcc3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 600,
        "wires": []
    },
    {
        "id": "b529d4318b910052",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "198aec3815ebc72a"
            ]
        ]
    },
    {
        "id": "198aec3815ebc72a",
        "type": "file in",
        "z": "4b06df1842fffcc3",
        "name": "",
        "filename": "/home/pi/.node-red/settings.js",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 460,
        "y": 940,
        "wires": [
            [
                "7ca9b5c93a633500",
                "6fb23bb26666dd54",
                "3be045da5310d145"
            ]
        ]
    },
    {
        "id": "7ca9b5c93a633500",
        "type": "debug",
        "z": "4b06df1842fffcc3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 880,
        "wires": []
    },
    {
        "id": "6fb23bb26666dd54",
        "type": "change",
        "z": "4b06df1842fffcc3",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "//httpStatic",
                "fromt": "str",
                "to": "httpStatic",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "/home/nol/node-red-static/",
                "fromt": "str",
                "to": "htmlDirectory",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "3be045da5310d145",
        "type": "function",
        "z": "4b06df1842fffcc3",
        "name": "",
        "func": "\nmsg.payload = msg.payload.replace(\"//httpStatic:\", \"httpStatic:\");\nmsg.payload = msg.payload.replace(\"/home/nol/node-red-static/\", global.get(\"htmlDirectory\") + \"/\");\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            [
                "807d75747480c672"
            ]
        ]
    },
    {
        "id": "807d75747480c672",
        "type": "file",
        "z": "4b06df1842fffcc3",
        "name": "",
        "filename": "/home/pi/.node-red/settings.js",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 940,
        "wires": [
            [
                "7ece07e83f4bc1f0"
            ]
        ]
    },
    {
        "id": "5ab50c9cec8678e6",
        "type": "exec",
        "z": "4b06df1842fffcc3",
        "command": "sudo node-red-restart",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1140,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7ece07e83f4bc1f0",
        "type": "delay",
        "z": "4b06df1842fffcc3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 940,
        "wires": [
            [
                "5ab50c9cec8678e6"
            ]
        ]
    },
    {
        "id": "fd559471853f32a7",
        "type": "ui_ui_control",
        "z": "4b06df1842fffcc3",
        "name": "",
        "events": "all",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "63896fc306345bdd"
            ]
        ]
    },
    {
        "id": "367e26156cba3412",
        "type": "function",
        "z": "4b06df1842fffcc3",
        "name": "Simplify readingsHistory",
        "func": "\n\nvar timin = new Date().getTime();\n\nvar otot = 0\nvar ntot=0;\n\nfor (var net in global.get(\"readingsHistory\")) {\n    \n    for (var dev in global.get(\"readingsHistory.\"+net)) {\n    \n        for (var grp in global.get(\"readingsHistory.\"+net+\".\"+dev)) {\n            \n            for (var key in global.get(\"readingsHistory.\"+net+\".\"+dev+\".\"+grp)) {\n                \n                //if (key==\"fC\") { continue; }\n                if (key.indexOf(\"24\")>-1) { continue; }\n                \n                var opoints = global.get(\"readingsHistory.\"+net+\".\"+dev+\".\"+grp+\".\"+key);\n                \n                 \n                if (opoints.length<1) { continue; }\n                if (isNaN(opoints[0].value)) { continue; }\n                \n                var npoints = simplify(opoints, 0.15, true);\n                \n                otot = otot + opoints.length;\n                ntot = ntot + npoints.length;\n                \n                global.set(\"readingsHistory.\"+net+\".\"+dev+\".\"+grp+\".\"+key, npoints);\n                \n            }\n        }\n    }\n    \n}\nmsg.payload = otot + \", \" + ntot;\n\n\nreturn msg;\n\n\n\n/*\n (c) 2013, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\nfunction scaleTime(p,direc) {\n\n    if(direc==1) {\n        \n        p.timestamp = (timin - p.timestamp) / 10000;\n        \n    } else {\n        \n        p.timestamp = timin - (10000 * p.timestamp)  ;\n    }\n    \n}\nfunction scaleT(t) {\n\n    \n    return ((timin - t) / 10000)\n    \n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    \n\n    var dx = scaleT(p1.timestamp) - scaleT(p2.timestamp),\n        dy = p1.value - p2.value;\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n\n    var x = scaleT(p1.timestamp),\n        y = p1.value,\n        dx = scaleT(p2.timestamp) - x,\n        dy = p2.value - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((scaleT(p.timestamp) - x) * dx + (p.value - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = scaleT(p2.timestamp);\n            y = p2.value;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = scaleT(p.timestamp) - x;\n    dy = p.value - y;\n\n    return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n\n\n// simplification using optimized Douglas-Peucker algorithm with recursion elimination\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n\n    var len = points.length,\n        MarkerArray = typeof Uint8Array !== 'undefined' ? Uint8Array : Array,\n        markers = new MarkerArray(len),\n        first = 0,\n        last = len - 1,\n        stack = [],\n        newPoints = [],\n        i, maxSqDist, sqDist, index;\n\n    markers[first] = markers[last] = 1;\n\n    while (last) {\n\n        maxSqDist = 0;\n\n        for (i = first + 1; i < last; i++) {\n            sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n            if (sqDist > maxSqDist) {\n                index = i;\n                maxSqDist = sqDist;\n            }\n        }\n\n        if (maxSqDist > sqTolerance) {\n            markers[index] = 1;\n            stack.push(first, index, index, last);\n        }\n\n        last = stack.pop();\n        first = stack.pop();\n    }\n\n    for (i = 0; i < len; i++) {\n        if (markers[i]) {\n            newPoints.push(points[i]);\n        }\n    }\n\n    return newPoints;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    //points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n\n    return points;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 280,
        "wires": [
            [
                "438482958cc1219e"
            ]
        ]
    },
    {
        "id": "d174dd0ba750fa79",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "367e26156cba3412"
            ]
        ]
    },
    {
        "id": "438482958cc1219e",
        "type": "debug",
        "z": "4b06df1842fffcc3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "655bf29e6b83d415",
        "type": "inject",
        "z": "4b06df1842fffcc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"default\":{\"system\":{\"serialTIL\":{\"title\":\"Contract serial number\"},\"serialHIU\":{\"title\":\"HIU serial number\"},\"serialController\":{\"title\":\"HIU controller serial number\"},\"serialHeatMeter\":{\"title\":\"Heat meter serial number\"},\"plot\":{\"title\":\"Plot identity\"},\"timestamp\":{\"title\":\"Time of last data received\"},\"node\":{\"title\":\"Communications node serial number\"},\"nodeId\":{\"title\":\"Communications node identity\",\"topicId\":2},\"networkId\":{\"title\":\"Communications network identity\",\"topicId\":1},\"deviceType\":{\"title\":\"Type of device, space seperated\",\"topicId\":3,\"examples\":[\"node\",\"hiu\",\"hiu-group\",\"substation\",\"dp temp sensor\",\"pump-group\"]},\"Firmware\":{\"title\":\"HIU firmware version\"},\"network\":{\"title\":\"Network identity\"},\"Serial\":{\"title\":\"HIU controller serial number\"},\"lastcontact\":{\"title\":\"Time of last data from device\"},\"time\":{\"title\":\"Timestamp of last data from device\"},\"Nodeware\":{\"title\":\"Node firmware firsion\"},\"usb\":{\"title\":\"USB port for HIU\"},\"property\":{\"title\":\"Property identity\"},\"tempid\":{\"title\":\"Temporary identity\"}},\"stat\":{\"state\":{\"title\":\"Device state\",\"default\":\"ok\",\"examples\":[\"on\",\"off\",\"ok\",\"warning\",\"alarm\"],\"topicId\":5},\"alarms\":{\"title\":\"Number of current alarms\",\"default\":0},\"beacon\":{\"title\":\"Communications heart-beat\"},\"warnings\":{\"title\":\"Number of warnings\"},\"vHDHW24\":{\"title\":\"Volume drawn today from network for hot water\",\"units\":\"litres\"},\"vHStanby24\":{\"title\":\"Volume drawn today from network for keep-warm\",\"units\":\"litres\"},\"vHCH24\":{\"title\":\"Volume drawn today from network for central heating\",\"units\":\"litres\"},\"vH24\":{\"title\":\"Total volume drawn today from network\",\"units\":\"litres\"},\"vwatH24\":{\"title\":\"Volume weighted network flow temperature for today\",\"units\":\"°C\"},\"vwatHoDHW24\":{\"title\":\"Volume weighted network return temperature for hot water today\",\"units\":\"°C\"},\"vwatHoStanby24\":{\"title\":\"Volume weighted network return temperature for keep-warm today\",\"units\":\"°C\"},\"vwatHoCH24\":{\"title\":\"Volume weighted network return temperature for central heating today\",\"units\":\"°C\"},\"vwatHo24\":{\"title\":\"Volume weighted network return temperature for today\",\"units\":\"°C\"},\"vC\":{\"title\":\"Total volume of hot water drawn through HIU\",\"units\":\"litres\"},\"DHWCount\":{\"title\":\"Number of hot water deliveries\"},\"e_TEMPERATURESENSORS\":{\"title\":\"Error on tempweature sensor\"},\"e_FLOWSENSOR\":{\"title\":\"Error on flow temperature\"},\"e_PRIMARYCONTROL\":{\"title\":\"Error with primary control\"},\"e_DISTRICTHEATING\":{\"title\":\"Error on heat network\"},\"e_CHRETURNTEMP\":{\"title\":\"Error on heating return\"},\"e_DHWTEMP\":{\"title\":\"Error on hot water temperature\"},\"e_DISTRICTHEATINGTEMP\":{\"title\":\"Error on network supply temperature\"},\"e_DHRETURNTEMP\":{\"title\":\"Error on network return temperature\"},\"e_CENTRALHEATING\":{\"title\":\"Error on central heating\"},\"e_WARMUPTIMER\":{\"title\":\"Error on heat-up\"},\"e_CHTEMPWARNING\":{\"title\":\"Warning on central heating temperature\"},\"e_CHTEMPERROR\":{\"title\":\"Error on central heating temperature\"},\"lastvCrun\":{\"title\":\"Volume drawn during last hot water delivery\",\"units\":\"litres\"},\"lastvClen\":{\"title\":\"Duration of last hot water delivery\",\"units\":\"seconds\"},\"lasttCo\":{\"title\":\"Temperature of last hot water delivery\",\"units\":\"°C\"},\"lasttH\":{\"title\":\"Primary temperature for last hot water delivery\",\"units\":\"°C\"},\"lasttHoDHW\":{\"title\":\"Primary return temperature for last hot water delivery\",\"units\":\"°C\"},\"lastvCavr\":{\"title\":\"Average flow rate of last hot water delivery\",\"units\":\"ltr/min\"},\"lastchBal\":{\"title\":\"Balancing of last central heating delivery\"},\"last_vCrun\":{\"title\":\"Volume drawn during last hot water delivery\",\"units\":\"litres\"},\"last_vClen\":{\"title\":\"Duration of last hot water delivery\",\"units\":\"seconds\"},\"last_vCavr\":{\"title\":\"Average flow rate of last hot water delivery\",\"units\":\"ltr/min\"},\"last_chBal\":{\"title\":\"Balancing of last central heating delivery\"},\"tis\":{\"title\":\"Time in current HIU state\",\"units\":\"seconds\"}},\"dat\":{\"tH\":{\"title\":\"Primary hot supply temperature\",\"units\":\"°C\"},\"tHo\":{\"title\":\"Primary return temperature\",\"units\":\"°C\"},\"tC\":{\"title\":\"DHW cold in temperature\",\"units\":\"°C\"},\"tCo\":{\"title\":\"DHW hot out temperature\",\"units\":\"°C\"},\"tIn\":{\"title\":\"Input temperature\",\"units\":\"°C\"},\"tOut\":{\"title\":\"Output temperature\",\"units\":\"°C\"},\"tF\":{\"title\":\"Flow temperature\",\"units\":\"°C\"},\"tR\":{\"title\":\"Return temperature\",\"units\":\"°C\"},\"tRC\":{\"title\":\"Common return temperature\",\"units\":\"°C\"},\"tHeader\":{\"title\":\"Header output temperature\",\"units\":\"°C\"},\"tCylT\":{\"title\":\"Cylinder temperature (top)\",\"units\":\"°C\"},\"fC\":{\"title\":\"Flow rate to hot water\",\"units\":\"ltr/min\"},\"dpH\":{\"title\":\"Differential pressure on network\",\"units\":\"bar\"},\"runtimeDHW\":{\"title\":\"Current hot water duration\",\"units\":\"seconds\"},\"pCH\":{\"title\":\"Central heating pressure\",\"units\":\"bar\"},\"stat\":{\"title\":\"Room thermostat demand\"},\"st\":{\"title\":\"HIU state\"},\"tHoCH\":{\"title\":\"Network return temperature from central heating\",\"units\":\"°C\"},\"xDHW\":{\"title\":\"Hot water valve steps\",\"units\":\"/270\"},\"fHDHW\":{\"title\":\"Network flow rate for hot water\"},\"eT\":{\"title\":\"Error temperature\",\"units\":\"°C\"},\"TTdhw\":{\"title\":\"Hot water target temperature\",\"units\":\"°C\"},\"eS\":{\"title\":\"Error state\"},\"tHoDHW\":{\"title\":\"Network return temperature from hot water\",\"units\":\"°C\"},\"tCHo\":{\"title\":\"Central heating supply temperature\",\"units\":\"°C\"},\"pump\":{\"title\":\"Central heating pump on\"},\"xCH\":{\"title\":\"Central heating valve steps\",\"units\":\"/270\"},\"fHCH\":{\"title\":\"Network flow rate for central heating\",\"units\":\"ltr/min\"},\"vH\":{\"title\":\"Network volume drawn in total\"}},\"settings\":{\"magic\":{\"title\":\"Magic spell\"},\"title\":{\"title\":\"Device name\",\"topicId\":4},\"setpoint\":{\"title\":\"Hot water setpoint temperature\",\"units\":\"°C\"},\"WarmupBoost\":{\"title\":\"Warm-up boost flow rate\",\"units\":\"ltr/min\"},\"EcoMode\":{\"title\":\"Keep-warm mode\"},\"PressureMode\":{\"title\":\"Differential pressure calculation mode\"},\"PowerUpCounter\":{\"title\":\"Power-up counter\"},\"ErrorCounter\":{\"title\":\"Error counter\"},\"DHReturnLimit\":{\"title\":\"Network return limit temperature\",\"units\":\"°C\"},\"HESupply\":{\"title\":\"Central heating setpoint temperature\",\"units\":\"°C\"},\"PumpTimeout\":{\"title\":\"Central heating pump time-out\",\"units\":\"seconds\"},\"PumpProtection\":{\"title\":\"Pump protection enabled\"},\"HEProtectionMode\":{\"title\":\"Network return limit enabled\"},\"DHWExchangerAntiLegionella\":{\"title\":\"Legionella cycle enabled\"},\"DHWExchangerEcoHeatTemperature\":{\"title\":\"Keep-warm temperature\",\"units\":\"°C\"},\"DHWExchangerEcoHeatTime\":{\"title\":\"Keep-warm time-out\",\"units\":\"minutes\"},\"CHHeaterCurveSlope\":{\"title\":\"Weather compensation curve\"},\"CHHeaterCurveDisplacement\":{\"title\":\"Weather compensation displacement\"},\"CentralHeatingControl\":{\"title\":\"Central heating enabled\"},\"PrePayShutOff\":{\"title\":\"Services enabled\"},\"pFill\":{\"title\":\"System fill pressure\",\"units\":\"bar\",\"min\":1.5,\"max\":6,\"default\":2.2}},\"property\":{\"plot\":{\"title\":\"Plot identity\"},\"class\":{\"title\":\"Plot classes\"},\"plotCount\":{\"title\":\"Plot index\"},\"block\":{\"title\":\"Block identity\"},\"core\":{\"title\":\"Core identity\"},\"floor\":{\"title\":\"Floor\"},\"floorArea\":{\"title\":\"Floor area\",\"units\":\"m2\"},\"postCode\":{\"title\":\"Post code\"},\"occupancy\":{\"title\":\"Occupancy, bedrooms and peaople\"},\"kwCH\":{\"title\":\"Peak central heating power\",\"units\":\"kW\"},\"kwDHW\":{\"title\":\"Peak hot water power\",\"units\":\"kW\"},\"transferTypeCH\":{\"title\":\"Central heating connection type\"},\"emitterTypeCH\":{\"title\":\"Central heating emitter type\"},\"transferTypeDHW\":{\"title\":\"Hot water connection type\"},\"vStoreDHW\":{\"title\":\"Volume of hot water cylinder\",\"units\":\"litres\"}},\"meter\":{\"tF\":{\"title\":\"Flow temperature\",\"units\":\"°C\"},\"tR\":{\"title\":\"Return temperature\",\"units\":\"°C\"},\"fR\":{\"title\":\"Flow rate\",\"units\":\"litres/minute\"},\"m3\":{\"title\":\"Volume\",\"units\":\"m3\"},\"m3h\":{\"title\":\"Flow rate\",\"units\":\"m3/h\"},\"kw\":{\"title\":\"Power\",\"units\":\"kW\"},\"kwh\":{\"title\":\"Energy\",\"units\":\"kWh\"},\"tDiff\":{\"title\":\"Temperature difference\",\"units\":\"°C\"},\"tErrorHM\":{\"title\":\"Tempreature sensor error\",\"units\":\"°C\"}},\"alarm\":{\"relay\":{\"title\":\"Fault relay alarm\"},\"mcb\":{\"title\":\"Circuit breaker trip alarm\"}}}}",
        "payloadType": "json",
        "x": 270,
        "y": 740,
        "wires": [
            [
                "8ac637bee82a417e"
            ]
        ]
    },
    {
        "id": "8ac637bee82a417e",
        "type": "function",
        "z": "4b06df1842fffcc3",
        "name": "function 3",
        "func": "\nvar oot = [];\n\nfor (var grp in msg.payload[\"default\"]) {\n\n    for (var k in msg.payload[\"default\"][grp]) {\n\n        var kline = { \"vargroup\": grp, \"varkey\": k, \"title\": msg.payload[\"default\"][grp][k][\"title\"], \"units\": msg.payload[\"default\"][grp][k][\"units\"] || \"\" };\n        \n        oot.push(kline);\n\n    }\n}\n\nmsg.payload = {\"default\":oot};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 740,
        "wires": [
            [
                "65f57a05e018974e",
                "b5005e537f17889b"
            ]
        ]
    },
    {
        "id": "65f57a05e018974e",
        "type": "debug",
        "z": "4b06df1842fffcc3",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 740,
        "wires": []
    },
    {
        "id": "8a93bec2a72ca69c",
        "type": "file",
        "z": "4b06df1842fffcc3",
        "name": "",
        "filename": "/home/pi/topics.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 720,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "b5005e537f17889b",
        "type": "json",
        "z": "4b06df1842fffcc3",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 550,
        "y": 800,
        "wires": [
            [
                "8a93bec2a72ca69c"
            ]
        ]
    },
    {
        "id": "6129542c.75c96c",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "msg.topic2 = \"DHW Temperature\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 720,
        "wires": [
            [
                "b3113831.83c8b8",
                "16545db5.a1289a"
            ]
        ]
    },
    {
        "id": "3eefcd4f.bd3522",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "msg.topic2 = \"Return Temperature\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 800,
        "wires": [
            [
                "b3113831.83c8b8",
                "ffc6c523.b47708"
            ]
        ]
    },
    {
        "id": "b3113831.83c8b8",
        "type": "change",
        "z": "b7a4eb8c.aec2c8",
        "name": "t2",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topic2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 760,
        "wires": [
            [
                "61cbc5f5.22dbbc"
            ]
        ]
    },
    {
        "id": "16545db5.a1289a",
        "type": "ui_gauge",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "group": "7aaf3d97.4092e4",
        "order": 1,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "DHW Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": "-1",
        "max": "100",
        "colors": [
            "#0080ff",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "65",
        "seg2": "83",
        "className": "",
        "x": 1030,
        "y": 720,
        "wires": []
    },
    {
        "id": "ffc6c523.b47708",
        "type": "ui_gauge",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "group": "7aaf3d97.4092e4",
        "order": 3,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "Return Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": "-1",
        "max": "100",
        "colors": [
            "#0080ff",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "65",
        "x": 1040,
        "y": 800,
        "wires": []
    },
    {
        "id": "61cbc5f5.22dbbc",
        "type": "ui_chart",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "group": "b41f6501.8d6cb8",
        "order": 2,
        "width": "8",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#fb5050",
            "#568cd2",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "c24f70d0.17a83",
        "type": "ui_template",
        "z": "b7a4eb8c.aec2c8",
        "group": "b7224d05.8b248",
        "name": "Heatweb",
        "order": 2,
        "width": "8",
        "height": "2",
        "format": "<p align=\"center \" style=\"padding-top: 10px\">\n    <b><big>HEATWEB</big></b>\n</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1180,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ef81efb5.e9264",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "15",
        "topic": "",
        "payload": "nodeDescription",
        "payloadType": "global",
        "x": 600,
        "y": 180,
        "wires": [
            [
                "2c0af4c069cbdcab"
            ]
        ]
    },
    {
        "id": "35167232.7ce0ae",
        "type": "template",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{payload}}}",
        "output": "str",
        "x": 1020,
        "y": 40,
        "wires": [
            [
                "c24f70d0.17a83"
            ]
        ]
    },
    {
        "id": "6cce1b9.af560e4",
        "type": "link in",
        "z": "b7a4eb8c.aec2c8",
        "name": "screenmessage",
        "links": [
            "51e62b0a.b42434",
            "12978bf48632b4a5"
        ],
        "x": 915,
        "y": 40,
        "wires": [
            [
                "35167232.7ce0ae"
            ]
        ]
    },
    {
        "id": "51e62b0a.b42434",
        "type": "link out",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "links": [
            "6cce1b9.af560e4"
        ],
        "x": 1155,
        "y": 180,
        "wires": []
    },
    {
        "id": "5e26c129.76b25",
        "type": "ui_template",
        "z": "b7a4eb8c.aec2c8",
        "d": true,
        "group": "84ad1d4c.e0002",
        "name": "Virtual Keyboard",
        "order": 3,
        "width": "1",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none;\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 320,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "496c2344.872eec",
        "type": "ui_text_input",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "84ad1d4c.e0002",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": "1000",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 630,
        "y": 420,
        "wires": [
            [
                "72569eb3.4a338",
                "7a3c23dbc8ac810b"
            ]
        ]
    },
    {
        "id": "d2461055.3396d",
        "type": "trigger",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "op1": "",
        "op2": "0000",
        "op1type": "nul",
        "op2type": "num",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "496c2344.872eec"
            ]
        ]
    },
    {
        "id": "72569eb3.4a338",
        "type": "switch",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "d2461055.3396d"
            ]
        ]
    },
    {
        "id": "8aa44365.1d51e",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "settings.title",
        "func": "\nmsg.payload = \"<p><small>\" + global.get(\"networkId\") + \" / \" +  global.get(\"node\") + \"</small></p>\";\nmsg.payload += \"<p><big>\" + global.get(\"settings.title.value\") || global.get(\"nodeDescription\") + \"</big></p>\";\n\nvar state = global.get(\"readings.\"+global.get(\"localNetworkId\")+\".\"+global.get(\"node\")+\".stat.state.value\");\nif (state!==\"ok\") {\n    msg.payload += '<p><small><span style=\"color:#ff0000\">' + state + \"</span></small></p>\";\n}\n\nvar logo  = global.get(\"settings.customerLogo.value\") || \"http://heatweb.co.uk/w/images/thumb/3/3f/G12749.png/120px-G12749.png\";\nif (logo) {\n    \n    if (logo.indexOf(\"http\")<0) { \n        \n        logo = \"/files/images/\" + logo;\n        \n    }\n\n\n    msg.payload = '<table align=\"center\" width=\"94%\" height=\"100%\"><tr><td align=\"left\" valign=\"middle\" height=\"100%\"><img style=\"border-radius: 5px; max-height: 90px\" src=\"' + logo + '\"></td><td align=\"right\" valign=\"middle\" height=\"100%\">' + msg.payload + '</td></tr></table>';\n   //msg.payload = '<img src=\"' + logo + '\" height=\"40px\"> ' + msg.payload;\n} else {\n    \n    msg.payload = '<table width=\"100%\" height=\"100%\"><tr><td align=\"center\" valign=\"middle\" height=\"100%\"><big>' + msg.payload + '</big>&nbsp;&nbsp;</td></tr></table>';\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "51e62b0a.b42434"
            ]
        ]
    },
    {
        "id": "1c3a8014.569f2",
        "type": "link out",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "links": [
            "560266b59151de97"
        ],
        "x": 255,
        "y": 100,
        "wires": []
    },
    {
        "id": "cd1a965f.793808",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "HELLO",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<font color=\"red\">HELLO</font>",
        "payloadType": "str",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "1c3a8014.569f2"
            ]
        ]
    },
    {
        "id": "cfd7f87bee217367",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "msg.topic = \"user/pin\" ;\nmsg.title = \"User Keypad PIN Input\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 540,
        "wires": [
            [
                "08d37f854e265fcf",
                "805efecb490b4df6"
            ]
        ]
    },
    {
        "id": "08d37f854e265fcf",
        "type": "link out",
        "z": "b7a4eb8c.aec2c8",
        "name": "microReadings",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1215,
        "y": 540,
        "wires": []
    },
    {
        "id": "f507145e54d36ba5",
        "type": "trigger",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 900,
        "y": 540,
        "wires": [
            [
                "cfd7f87bee217367"
            ]
        ]
    },
    {
        "id": "7a3c23dbc8ac810b",
        "type": "switch",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 540,
        "wires": [
            [
                "f507145e54d36ba5"
            ]
        ]
    },
    {
        "id": "805efecb490b4df6",
        "type": "debug",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 620,
        "wires": []
    },
    {
        "id": "325cdb6c00699fdb",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "\n    msg.payload = '<table width=\"100%\" height=\"100%\"><tr><td align=\"center\" valign=\"middle\" height=\"100%\"><big>' + msg.payload + '</big>&nbsp;&nbsp;</td></tr></table>';\n   //msg.payload = '<img src=\"' + logo + '\" height=\"40px\"> ' + msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 60,
        "wires": [
            [
                "12978bf48632b4a5",
                "331e45622632db48"
            ]
        ]
    },
    {
        "id": "560266b59151de97",
        "type": "link in",
        "z": "b7a4eb8c.aec2c8",
        "name": "screenmessage",
        "links": [
            "95021fa6.c07ad",
            "c6795c09.62ef3",
            "56c8d73d.1343a8",
            "f8cf6b65.bb9ba8",
            "ff736c77.6acb8",
            "36b4f9a2.c3f566",
            "32ca6594.2d003a",
            "1c3a8014.569f2",
            "f6d473f40db484d1",
            "2b0fd762d5e46184"
        ],
        "x": 335,
        "y": 60,
        "wires": [
            [
                "325cdb6c00699fdb"
            ]
        ]
    },
    {
        "id": "12978bf48632b4a5",
        "type": "link out",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "mode": "link",
        "links": [
            "6cce1b9.af560e4"
        ],
        "x": 575,
        "y": 60,
        "wires": []
    },
    {
        "id": "9e639d5d0411a444",
        "type": "ui_ui_control",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "events": "all",
        "x": 640,
        "y": 240,
        "wires": [
            [
                "2c0af4c069cbdcab"
            ]
        ]
    },
    {
        "id": "331e45622632db48",
        "type": "trigger",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 120,
        "wires": [
            [
                "2c0af4c069cbdcab"
            ]
        ]
    },
    {
        "id": "6ebae845212cc6e0",
        "type": "mqtt in",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "topic": "",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "fe2923186b3864c7"
            ]
        ]
    },
    {
        "id": "fe2923186b3864c7",
        "type": "trigger",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": " ",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "1c3a8014.569f2"
            ]
        ]
    },
    {
        "id": "f8ead591d73bf192",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "284040cf162eee02"
            ]
        ]
    },
    {
        "id": "284040cf162eee02",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "\nvar topic = global.get(\"localNetworkId\") + \"/+/\" + global.get(\"node\") + \"/cmd/displayMessage\";\nmsg.topic = [];\nmsg.topic.push({\"topic\":topic, \"qos\":0});\nmsg.action=\"subscribe\"\nmsg.payload = null;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 280,
        "wires": [
            [
                "6ebae845212cc6e0"
            ]
        ]
    },
    {
        "id": "bbc59cb783396ce7",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": " ",
        "payloadType": "str",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "fe2923186b3864c7"
            ]
        ]
    },
    {
        "id": "2c0af4c069cbdcab",
        "type": "trigger",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": " ",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            [
                "8aa44365.1d51e"
            ]
        ]
    },
    {
        "id": "c1bf15b755cc2165",
        "type": "debug",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 660,
        "wires": []
    },
    {
        "id": "2f9dba58d22dc166",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "6ce6de74ec15dcd3"
            ]
        ]
    },
    {
        "id": "6ce6de74ec15dcd3",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "\nvar topic = global.get(\"localNetworkId\") + \"/+/DHW/dat/tCo\";\nmsg.topic = [];\nmsg.topic.push({\"topic\":topic, \"qos\":0});\nmsg.action=\"subscribe\"\nmsg.payload = null;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 720,
        "wires": [
            [
                "567cfc25d683ae00"
            ]
        ]
    },
    {
        "id": "12cd1b8e22ad5a37",
        "type": "mqtt in",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "topic": "",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 410,
        "y": 800,
        "wires": [
            [
                "3eefcd4f.bd3522"
            ]
        ]
    },
    {
        "id": "3aa7ae8680fba7c7",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "aa2119ed755b3403"
            ]
        ]
    },
    {
        "id": "aa2119ed755b3403",
        "type": "function",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "func": "\nvar topic = global.get(\"localNetworkId\") + \"/+/\" + global.get(\"node\") + \"/dat/tR\";\nmsg.topic = [];\nmsg.topic.push({\"topic\":topic, \"qos\":0});\nmsg.action=\"subscribe\"\nmsg.payload = null;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 800,
        "wires": [
            [
                "12cd1b8e22ad5a37"
            ]
        ]
    },
    {
        "id": "2a33f13c34b9f316",
        "type": "inject",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 810,
        "y": 900,
        "wires": [
            [
                "61cbc5f5.22dbbc"
            ]
        ]
    },
    {
        "id": "567cfc25d683ae00",
        "type": "mqtt in",
        "z": "b7a4eb8c.aec2c8",
        "name": "",
        "topic": "",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 430,
        "y": 720,
        "wires": [
            [
                "6129542c.75c96c"
            ]
        ]
    },
    {
        "id": "c4ae8968.68a538",
        "type": "heatwebNode",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "nodeConfig": "550ec543.b55bc4",
        "proxy1Name": "",
        "proxy1Address": "",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "e2a5359d.ef1ea"
            ]
        ]
    },
    {
        "id": "81452df3.f1e0b8",
        "type": "heatwebRemote",
        "z": "580bb6a3.5dc1d",
        "d": true,
        "name": "",
        "nodeConfig": "550ec543.b55bc4",
        "timeout": "720",
        "remotePassword": "letmein",
        "x": 910,
        "y": 60,
        "wires": [
            [
                "e2a5359d.ef1ea",
                "89ecbd8f.a8aed"
            ]
        ]
    },
    {
        "id": "6db74d6.e025e34",
        "type": "heatwebFilter",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "nodeConfig": "550ec543.b55bc4",
        "resetEvery": "60",
        "defaultGroup": "dat",
        "defaultPoints": "10",
        "deadband": "",
        "storeHistoricEx": "",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "94b9e1d9.4a7a6",
                "ebec191eb32eee17",
                "8b488cbb14b093cb",
                "5794e74d.4504f8"
            ],
            [
                "f7abd73e.da268",
                "16d3ed6.1101e13",
                "6ed780fa.52d71"
            ]
        ]
    },
    {
        "id": "72fc070f.39dd8",
        "type": "link in",
        "z": "580bb6a3.5dc1d",
        "name": "handler",
        "links": [
            "e2a5359d.ef1ea",
            "296debf8.d54624",
            "dccb789b.a3499",
            "a8d7bac.0f6fbc8",
            "ae865c20.2fec3",
            "cfc9202e.f210d8",
            "acd796d4.015d48",
            "491f0ea6.f770b",
            "9a1d4893.b22ed8",
            "32f9b18e.982aee",
            "25d0fd81.1972e2",
            "c7f36015.8ce9f",
            "e44a91c9.939dc",
            "54651d5b.108064",
            "ed0a2c14.1c501",
            "6ce87828.9e4298",
            "d30d586c.915748",
            "c0a0bdc5.f60f3",
            "a1c82691.72a528",
            "9abe6fd2.97b23",
            "4383d483.c5616c",
            "2b500c07ee3ffae7",
            "4a837d4dcc6ad59d",
            "4c2623596b85456b",
            "1e2c3dc4f1a6d2b4",
            "c7c3bbe3c8fd890c",
            "1e7605b26f46c401",
            "08d37f854e265fcf",
            "3b8abba47b97affa",
            "a70869c7c01cbeaf",
            "bd7d48d62f53c173",
            "c319a36a810036dd",
            "392d126135d185ae",
            "0a7561544c78863d",
            "e162d709.82b3",
            "c52dea4958c2f7ea",
            "110e496a3bb255d1",
            "1dab6e911927df71"
        ],
        "x": 315,
        "y": 340,
        "wires": [
            [
                "6db74d6.e025e34"
            ]
        ]
    },
    {
        "id": "e2a5359d.ef1ea",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1095,
        "y": 100,
        "wires": []
    },
    {
        "id": "602219a.4904268",
        "type": "mqtt out",
        "z": "580bb6a3.5dc1d",
        "name": "Retain",
        "topic": "",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7ad2997b.42a908",
        "x": 1130,
        "y": 460,
        "wires": []
    },
    {
        "id": "5794e74d.4504f8",
        "type": "mqtt out",
        "z": "580bb6a3.5dc1d",
        "name": "No Retain",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7ad2997b.42a908",
        "x": 1140,
        "y": 360,
        "wires": []
    },
    {
        "id": "de5cbb28.0bca7",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/cmd/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/set/",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "5794e74d.4504f8"
            ],
            [
                "5794e74d.4504f8"
            ],
            [
                "602219a.4904268",
                "311e9db6.ba1b82"
            ]
        ]
    },
    {
        "id": "f7abd73e.da268",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/xnode",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/cmd/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/set/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "json/sync",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 730,
        "y": 580,
        "wires": [
            [],
            [],
            [],
            [
                "4a7695e79d88af15"
            ],
            [
                "adae7e8a.85a74",
                "4a7695e79d88af15"
            ]
        ]
    },
    {
        "id": "adae7e8a.85a74",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "fbed7ee4.d7e658"
        ],
        "x": 875,
        "y": 660,
        "wires": []
    },
    {
        "id": "32f9b18e.982aee",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 455,
        "y": 820,
        "wires": []
    },
    {
        "id": "4a7b0367.1dda1c",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/net_1_ip4",
        "payloadType": "str",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "16d3ed6.1101e13",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "10199216.12d03e",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/net_2_ip4",
        "payloadType": "str",
        "x": 220,
        "y": 940,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "db6ad2fe.19c03",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/mem_total",
        "payloadType": "str",
        "x": 220,
        "y": 980,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "68804932.313de8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/mem_free",
        "payloadType": "str",
        "x": 220,
        "y": 1020,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "6ed780fa.52d71",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "Only Requests",
        "property": "mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "request",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 700,
        "y": 760,
        "wires": [
            [
                "69cac137.62091"
            ]
        ]
    },
    {
        "id": "69cac137.62091",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 840,
        "wires": []
    },
    {
        "id": "ed00b81b.500ff8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/dat/#",
        "payloadType": "str",
        "x": 240,
        "y": 660,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "170c616c.8b5bef",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/fs_0_use",
        "payloadType": "str",
        "x": 220,
        "y": 1060,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "ba62991c.c36168",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "400",
        "topic": "cmd/request",
        "payload": "local/+/+/system/#",
        "payloadType": "str",
        "x": 230,
        "y": 700,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "30eb37b6.547d88",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/upTime",
        "payloadType": "str",
        "x": 220,
        "y": 780,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "679a6694.f7bfc8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/upTimeH",
        "payloadType": "str",
        "x": 220,
        "y": 820,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "bb65f185.3adab",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "216000",
        "crontab": "",
        "once": true,
        "onceDelay": "180",
        "topic": "cmd/request",
        "payload": "local/+/+/+/os_hostname",
        "payloadType": "str",
        "x": 250,
        "y": 860,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "51318833.c258d8",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "36000",
        "crontab": "",
        "once": true,
        "onceDelay": "450",
        "topic": "cmd/request",
        "payload": "local/+/+/settings/#",
        "payloadType": "str",
        "x": 220,
        "y": 740,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "311e9db6.ba1b82",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "66c2e225.64a90c"
        ],
        "x": 1095,
        "y": 520,
        "wires": []
    },
    {
        "id": "7109deeb.a22d3",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "900",
        "topic": "cmd/request",
        "payload": "local/+/+/cpu/#",
        "payloadType": "str",
        "x": 240,
        "y": 1140,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "94b9e1d9.4a7a6",
        "type": "switch",
        "z": "580bb6a3.5dc1d",
        "name": "set",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/set/",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "2dde7725.9f7118"
            ]
        ]
    },
    {
        "id": "2dde7725.9f7118",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "254c663c.1890fa"
        ],
        "x": 895,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd49d580.483498",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "USERS",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"admin\":{\"networks\":[{\"networkId\":\"local\",\"server\":\"192.168.0.250\",\"port\":8080,\"secure\":false,\"user\":\"admin\",\"password\":\"12345678\"}]},\"guest\":{\"networks\":[{\"networkId\":\"local\",\"server\":\"192.168.0.250\",\"port\":8080,\"secure\":false,\"user\":\"guest\",\"password\":\"guest\"}]}}",
        "payloadType": "json",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "94ba0d3d.e77e1"
            ]
        ]
    },
    {
        "id": "94ba0d3d.e77e1",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "users",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "89ecbd8f.a8aed",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 60,
        "wires": []
    },
    {
        "id": "5679869b.3f7e98",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Sheets\",\"body\":\"\"}",
        "payloadType": "json",
        "x": 290,
        "y": 1200,
        "wires": [
            [
                "f2b8df74.df24a"
            ]
        ]
    },
    {
        "id": "f2b8df74.df24a",
        "type": "template",
        "z": "580bb6a3.5dc1d",
        "name": "editor",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<script src=\"https://bossanova.uk/jspreadsheet/v4/jexcel.js\"></script>\n<link rel=\"stylesheet\" href=\"https://bossanova.uk/jspreadsheet/v4/jexcel.css\" type=\"text/css\" />\n \n<script src=\"https://jsuites.net/v4/jsuites.js\"></script>\n<link rel=\"stylesheet\" href=\"https://jsuites.net/v4/jsuites.css\" type=\"text/css\" />\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://fonts.googleapis.com/css?family=Material+Icons\" />\n\n\n<style>\n    /*.jexcel_content {*/\n    /*    font-size: 15px;*/\n    /*}*/\n    \n    .jexcel {\n        white-space: normal;\n    }\n</style>\n\n\n<section>\n<div id=\"mytit\" name=\"mytit\"><h1>Sheets</h1></div>\n<br>\n\n<div id=\"metasec\">        \n<div id=\"spreadsheetmeta\"></div>\n<br><br> \n</div>\n\n<div id=\"spreadsheet\"></div>\n \n\n<br><br>\n\n\n\n<script>\n\n function camelize(str) {\n      return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n        return index === 0 ? word.toLowerCase() : word.toUpperCase();\n      }).replace(/\\s+/g, '');\n    }\n    \n    function but() {\n        \n        \n        console.log(myspreadsheet.getJson());\n        console.log(myspreadsheet.getConfig());\n        \n        var mydata = myspreadsheet.getJson();\n        var myconfig = myspreadsheet.getConfig();\n        \n        \n        \n        var urlParams = new URLSearchParams(window.location.search);\n\n        var saveas = urlParams.get('sheet') || \"\"; \n        if (saveas==\"null\") { saveas=\"\"; }\n            \n        if (docType.value == \"array\") {\n            \n            var nn = prompt(\"Fileame\", urlParams.get('json'));\n            if(nn.indexOf(\" \")>-1) { nn = camelize(nn); }\n            if(nn==null) { return null; }\n            if(nn.indexOf(\".json\")<1) { nn += \".json\"; }\n            if(nn.indexOf(\"/files/json/\")<0) { nn = \"/files/json/\" + nn; }\n            var msg = [];\n            \n            for(var ar in mydata) {\n                \n                msg.push(mydata[ar][0]); \n            }\n            \n            \n            \n            $(\"#svgtext\").val(JSON.stringify(msg));\n            $(\"#svgfile\").val(nn ); \n            \n        } else if (docType.value == \"object\") {\n            \n            var nn = prompt(\"Fileame\", urlParams.get('json'));\n            if(nn==null) { return null; }\n            if(nn.indexOf(\" \")>-1) { nn = camelize(nn); }\n            if(nn.indexOf(\".json\")<1) { nn += \".json\"; }\n            if(nn.indexOf(\"/files/json/\")<0) { nn = \"/files/json/\" + nn; }\n            \n            var msg = mydata;\n            \n            $(\"#svgtext\").val(JSON.stringify(msg));\n            $(\"#svgfile\").val(nn); \n            \n        } else {\n            \n            var nn = prompt(\"Sheet Name\", saveas);\n            if(nn==null||nn==\"\"||nn==\"null\") { return null; }\n            if(nn.indexOf(\" \")>-1) { nn = camelize(nn); }\n            \n            var msg = {\"data\":mydata,\"config\":myconfig};\n        \n            var mymeta = myspreadsheetmeta.getJson();\n            for (var mtd in mymeta) {\n                if (mymeta[mtd].key!== \"data\" && mymeta[mtd].key!== \"config\") {\n                    var nk = mymeta[mtd].key;\n                    if(nk.indexOf(\" \")>-1) { nk = camelize(nk); }\n                    msg[nk] = mymeta[mtd].value;\n                }\n            }\n            if (!msg.created && !msg.updated) { msg.created = (new Date().toLocaleString()); }\n            else  { msg.updated = (new Date().toLocaleString()); }\n            \n            \n            // remove imported options from url dropdowns  -- why is this working its after the msg \n            for (var cc in myconfig.columns) {\n                if (myconfig.columns[cc].url && myconfig.columns[cc].source) {\n                    myconfig.columns[cc].source = [];\n                }\n            }\n            \n            \n            // html table\n            var n = myspreadsheet.getColumnData(0).length;\n            //alert(n);\n            var htmlout=\"<table>\";\n            var calculated = [];\n            \n            htmlout += \"<thead>\";\n            for (var cc in myspreadsheet.getRowData(0)) {\n                htmlout += \"<th>\";\n                //var rc = String.fromCharCode(parseInt(cc)+65) + (parseInt(rr)+1);\n                //alert(rc);\n                htmlout += myspreadsheet.getHeader(parseInt(cc));\n                htmlout += \"</th>\";\n            }\n            \n            htmlout += \"</thead>\";\n            \n            for (var rr in myspreadsheet.getColumnData(0)) {\n                \n                vdat={}; \n                htmlout += \"<tr>\";\n                for (var cc in myspreadsheet.getRowData(0)) {\n                    htmlout += \"<td>\";\n                    var rc = String.fromCharCode(parseInt(cc)+65) + (parseInt(rr)+1);\n                    //alert(rc);\n                    htmlout += myspreadsheet.getLabel(rc);\n                    htmlout += \"</td>\";\n                    \n                     // myconfig.columns[cc].name;\n                    if (myspreadsheet.getValue(rc) && isNaN(myspreadsheet.getValue(rc)) && myspreadsheet.getValue(rc).indexOf(\"=\")===0) { vdat[myconfig.columns[cc].name] = myspreadsheet.getLabel(rc); }\n                }\n                htmlout += \"</tr>\";\n                calculated.push(vdat);\n            }\n            htmlout += \"</table>\";\n            //alert(htmlout);\n            \n            msg.html = htmlout;\n            msg.calculated= calculated;\n            \n            //save\n            $(\"#svgtext\").val(JSON.stringify(msg));\n            $(\"#svgfile\").val(\"/files/json/sheet_\" + nn + \".json\");  //  + (new Date().getTime()) +\n    \n        }\n        \n        \n        \n        \n        $(\"#nextform\").submit(); \n        \n        // post full json\n        var mqttmsg = {};\n        mqttmsg.topic = document.getElementById(\"svgfile\").value;\n        \n        if (metadata[\"network\"].indexOf(\" \")>0) { alert(\"Network names cannot contain spaces. \"); }\n        else if (metadata[\"device\"].indexOf(\" \")>0) { alert(\"Device names cannot contain spaces. \"); }\n        else if (mqttmsg.topic.indexOf(\"/files/json/\")===0) {\n        \n            mqttmsg.topic = \"json/\" + mqttmsg.topic.replace(\"/files/json/\",\"\").replace(\".json\",\"\").replace(\"/\",\"_\");\n            \n            if(metadata[\"device\"] && metadata[\"network\"]) { mqttmsg.topic = metadata[\"network\"] + \"/\" + (metadata[\"author\"]||\"spreadsheet\").replace(/ /g,\"_\") + \"/\" + metadata[\"device\"] + \"/\" + mqttmsg.topic; }\n            else if(metadata[\"device\"]) { mqttmsg.topic = metadata[\"device\"] + \"/\" + mqttmsg.topic; }\n            else if(metadata[\"network\"]) { mqttmsg.topic = metadata[\"network\"] + \"/\" + (metadata[\"author\"]||\"spreadsheet\").replace(/ /g,\"_\") + \"/network/\" + mqttmsg.topic; }\n            \n            mqttmsg.payload =  document.getElementById(\"svgtext\").value;\n            \n            $.ajax({\n                url: \"/api/msg\", \n                type: \"POST\",      \n                data: mqttmsg,     \n                cache: false,\n                success: function(returnhtml){   \n                    \n                    alert(\"JSON posted successfully to \" + mqttmsg.topic); \n                         \n                },\n                error: function(XMLHttpRequest, textStatus, errorThrown) { \n                    \n                    alert(\"Failed to post JSON.\");\n                }            \n            }); \n        }       \n        \n            \n        \n    }\n    function fullscreen(mode) {\n    \n        myspreadsheet.fullscreen(mode);\n        \n    }\n    \n    function getmeta(txt) {\n        \n        var txtout = \"\" + txt;\n        \n        txtout = txtout.replace(\"{\"+\"{json}\"+\"}\", myfilename);    \n        \n        var metat = \"\";\n        for (var mt in metadata) {\n            //if (key!== \"data\" && key!== \"config\" && key!== \"sheet\" && key!== \"json\") { }\n            txtout = txtout.replace(\"{\"+\"{meta.\"+mt+\"}\"+\"}\", metadata[mt]);\n            txtout = txtout.replace(\"{\"+\"{\"+mt+\"}\"+\"}\", metadata[mt]);\n            if (mt!== \"next\" && mt!== \"created\"  && mt!== \"updated\" && metadata[mt]) { \n                 metat = metat + (metat==\"\"?\"\":\"&\") + mt + \"=\" + metadata[mt];\n            }\n        }\n        txtout = txtout.replace(\"{\"+\"{meta}\"+\"}\", metat);    \n        txtout = txtout.replace(\"{\"+\"{metadata}\"+\"}\", metat);    \n        \n        metat=\"\";\n        \n        //if (selectedColumnName == \"selection\") { selectionData = myspreadsheet.getJson()[selectedRow];  console.log(selectionData);   }\n        var temp = myspreadsheet.getJson();\n        for (var v in temp) {\n            if(temp[v].selection) { selectionData = temp[v];  break;}\n        }\n        \n        \n        for (var mt in selectionData) {\n            txtout = txtout.replace(\"{\"+\"{selection.\"+mt+\"}\"+\"}\", selectionData[mt]); \n            if (mt!== \"selection\" && selectionData[mt]) { \n                 metat = metat + (metat==\"\"?\"\":\"&\") + mt + \"=\" + selectionData[mt];\n            }\n        }\n        txtout = txtout.replace(\"{\"+\"{selection}\"+\"}\", metat);   \n        \n        \n        return txtout;\n    }\n    \n    \n    function run() {\n        \n      \n            // document.getElementById(\"results1\").location  = metadata.run.replace(\"{\"+\"{json}\"+\"}\", myfilename);\n            \n            var url = getmeta(metadata.run); \n            \n            window.open(url)  ;\n                \n          \n        \n    }\n    \n    \n    function next() {\n        \n      \n            // document.getElementById(\"results1\").location  = metadata.run.replace(\"{\"+\"{json}\"+\"}\", myfilename);\n                \n            //window.location.href = (metadata.next.replace(\"{\"+\"{json}\"+\"}\", myfilename))  ;\n            \n            var url = getmeta(metadata.next); \n            window.location.href = url  ;\n        \n    }\n    \n    \n    function postmqtt() {\n        \n        \n        var mydata = myspreadsheet.getJson();\n        \n        var successful = 0;\n        \n        if (1==1) {\n        \n            for(var lne in mydata) {\n                \n                if (!mydata[lne].key) { continue; }\n                //if (!mydata[lne].device) { continue; }\n                if (!mydata[lne].value===null) { continue; }\n                \n                var mqttmsg = {};\n                mqttmsg.topic = \"\"\n                if (mydata[lne].network) { mqttmsg.topic = mydata[lne].network  + \"/\" +  (sheetname||\"sheet\") +  \"/\" ; }\n                else if (metadata.network) { mqttmsg.topic = metadata.network  + \"/\" +  (sheetname||\"sheet\") +  \"/\" ; }\n                \n                \n                \n                if (mydata[lne].device) {  mqttmsg.topic += mydata[lne].device + \"/\"; }\n                else if (metadata.device) {  mqttmsg.topic += metadata.device + \"/\"; }\n                else if (mqttmsg.topic !== \"\") { continue; }\n                \n                mqttmsg.topic +=   (mydata[lne].group || metadata.group || \"stat\") + \"/\" +  mydata[lne].key;\n                mqttmsg.payload = mydata[lne].value;\n                if (mydata[lne].title) { mqttmsg.title = mydata[lne].title; }\n                if (mydata[lne].units) { mqttmsg.units = mydata[lne].units; }\n                if (mydata[lne].attributes) { mqttmsg.attributes = mydata[lne].attributes; }\n                \n                console.log(mqttmsg);\n                \n                  // erm not really need to delay and wait for responses\n                \n                \n                $.ajax({\n                    url: \"/api/msg\", \n                    type: \"POST\",      \n                    data: mqttmsg,     \n                    cache: false,\n                    success: function(returnhtml){   \n                        \n                        console.log(returnhtml);\n                        successful++;\n                        clearTimeout(suc);\n                        suc = setTimeout(function(){ alert(successful + \" messages sent.\"); }, 1000);\n                             \n                    },\n                    error: function(XMLHttpRequest, textStatus, errorThrown) { \n                        \n                        \n                    }            \n                }); \n                \n                \n                \n                \n                \n                \n            }\n        }\n        \n        \n        \n    }\n    \n    \n    \n</script>  \n\n<select style=\"display:none\" id=\"docType\" name=\"docType\"><option selected value=\"sheet\">Spreadsheet</option><option value=\"object\">Object Array</option><option value=\"array\">Basic Array</option></select>\n\n<span style=\"display:none\"  id=\"runsec\">\n<input type=\"button\" onClick=\"run()\" value=\"Run\">     \n</span>\n\n\n<span style=\"display:none\"  id=\"nextsec\">\n<input type=\"button\" onClick=\"next()\" value=\"Next\">     \n</span>\n\n<span id=\"savesec\">   \n    \n    <input type=\"button\" onClick=\"postmqtt()\" value=\"Post\">    \n    \n    <input type=\"button\" onClick=\"but()\" value=\"Save\"> \n    \n</span>     \n<span id=\"editsec\">\n \n    \n    <span id=\"columnsec\">\n        &nbsp;&nbsp;&nbsp; Add Column: \n         \n        {{!--<input type=\"button\" onClick=\"fullscreen(true)\" value=\"Full Screen\">--}}\n        \n        <input type=\"button\" onClick=\"addCol('text')\" value=\"Text\">\n        <input type=\"button\" onClick=\"addCol('html')\" value=\"HTML\">\n        <input type=\"button\" onClick=\"addCol('number')\" value=\"Number\">\n        <input type=\"button\" onClick=\"addCol('currency')\" value=\"Currency\">\n        <input type=\"button\" onClick=\"addCol('check')\" value=\"Check\">\n        <input type=\"button\" onClick=\"addCol('radio')\" value=\"Radio\">\n        <input type=\"button\" onClick=\"addCol('select')\" value=\"Dropdown\">\n        <input type=\"button\" onClick=\"addCol('image')\" value=\"Image\">\n        \n        {{!--<input type=\"button\" onClick=\"addCol('colour')\" value=\"Colour\">--}}\n        {{!--<input type=\"button\" onClick=\"myspreadsheet.insertColumn(1,,0,{type: 'checkbox',title:'Enabled',width:80})\" value=\"Add Check\">--}}\n        \n        \n        &nbsp;&nbsp;&nbsp;\n        <input type=\"button\" onClick=\"addOption()\" value=\"Add Option\">\n        <input type=\"button\" onClick=\"moveColumn(-1)\" value=\"<\">\n        <input type=\"button\" onClick=\"moveColumn(1)\" value=\">\">\n          \n         &nbsp;&nbsp;&nbsp; \n        <input type=\"button\" onClick=\"test()\" value=\"Test\">\n        <input type=\"button\" onclick=\"mergecells()\" value=\"Merge\">\n        <input type=\"button\" onclick=\"unmergecells()\" value=\"Split\">\n        \n    </span>\n\n</span>      \n\n<script>\n\nfunction test() {\n    alert(myspreadsheet.getLabel(\"F1\"));\n    \n}\n\nfunction addCol(ctype) {\n    \n    var cc = myspreadsheet.getConfig().columns.length;\n    \n    ntit = prompt(\"Please enter the column Title\", \"\") ;\n    if (!ntit) { return null; }\n    \n    nid = prompt(\"Please confirm Key\", camelize(ntit)) ;\n    if (!nid) { return null; }\n    \n    if (ctype==\"text\") { myspreadsheet.insertColumn(1,cc,0,{type: 'text',title:ntit, name:nid, width:150}); }\n    else if (ctype==\"html\") { myspreadsheet.insertColumn(1,cc,0,{type: 'html',title:ntit, name:nid, width:400}); }\n    else if (ctype==\"date\") { myspreadsheet.insertColumn(1,cc,0,{type: 'calendar',title:ntit, name:nid, width:80}); }\n    else if (ctype==\"check\") { myspreadsheet.insertColumn(1,cc,0,{type: 'checkbox',title:ntit, name:nid, width:80}); }\n    else if (ctype==\"radio\") { myspreadsheet.insertColumn(1,cc,0,{type: 'radio',title:ntit, name:nid, width:80}); }\n    else if (ctype==\"image\") { myspreadsheet.insertColumn(1,cc,0,{type: 'image',title:ntit, name:nid, width:120}); }\n    else if (ctype==\"number\") { myspreadsheet.insertColumn(1,cc,0,{type: 'numeric',title:ntit, name:nid, mask:'#,##,00',width:80,decimal:'.'}); }\n    else if (ctype==\"currency\") { myspreadsheet.insertColumn(1,cc,0,{type: 'numeric',title:ntit, name:nid, mask:'£ #,##,00',width:80,decimal:'.'}); }\n    else if (ctype==\"colour\") { myspreadsheet.insertColumn(1,cc,0,{type: 'color',title:ntit, name:nid, width:80,render:'square'}); }\n    else if (ctype==\"select\") { \n        \n        var nv=\"Option\";\n        var optslist = [];\n        while(nv!==\"\" && nv!==null) {\n            \n            nv=\"\"; \n            nv = prompt(\"Add an option (leave blank or press cancel to finish)\", nv);\n            if (nv !== \"\" && nv!==null) { optslist.push(nv); }\n            \n        }\n        \n        \n        var opts = {\n            type: 'dropdown',\n            title:ntit,\n            name:nid,\n            width:175,\n            source:optslist\n        };\n            \n        if (optslist.length==1 && optslist[0].indexOf(\".json\")>0) {\n          \n          opts.url = optslist[0];\n          if (opts.url.indexOf(\"http\")<0) { opts.url = \"/files/json/\" + opts.url; }\n          opts.source=[];\n            \n            \n        } \n        \n        myspreadsheet.insertColumn(1,cc,0, opts); \n        \n        if (opts.url) {\n            //seems long way to refresh but works....\n            initialiseSheet(myspreadsheet.getJson(),myspreadsheet.getConfig().columns,myspreadsheet.getConfig().comments,myspreadsheet.getConfig().mergeCells);\n        }\n        \n    }\n    \n    \n}\n\n\n\nvar metadata = {};\nvar tim;\nvar suc;\nvar sheetname = \"new\";\nvar docType = document.getElementById(\"docType\");\n\nvar myspreadsheet = {};\n\nvar selectedColumn = \"\";\nvar selectedColumnName = \"\";\nvar selectionData;\nvar selectedRow;\nvar selectedRange;\n\n\nvar selectionActive = function(instance, x1, y1, x2, y2, origin) {\n    //var cellName1 = jexcel.getColumnNameFromId([x1, y1]);\n    //var cellName2 = jexcel.getColumnNameFromId([x2, y2]);\n    //console.log(instance);\n    console.log(x1, x2);\n    selectedRange = \"\";\n    \n    if (x1==x2 && y1==y2) {\n        \n        selectedColumn = x1;\n        selectedRow = y1;\n        \n        selectedColumnName = myspreadsheet.getConfig().columns[x1].name;\n        \n        console.log(myspreadsheet.getHeader(x1));\n        console.log(myspreadsheet.getConfig().columns[x1]);\n        \n        \n        \n        \n    } else { \n        \n        selectedColumn = \"\"; \n        selectedColumnName=\"\";\n        \n        selectedRange = x1 + \",\" + y1 + \",\" + x2 + \",\" + y2;\n    \n    }\n    \n}\n\n\nfunction addOption() {\n    \n    \n    if (!selectedColumn) { return null; }\n    \n     \n    //var mydata = myspreadsheet.getJson();\n    \n    var cdat = myspreadsheet.getConfig().columns;\n    if (!cdat[selectedColumn].source) { return null; }\n    \n    var nn = prompt(\"New option for \" + myspreadsheet.getHeader(selectedColumn), \"\");\n    if (nn==null || nn == \"\") { return null; }\n    \n    cdat[selectedColumn].source.push(nn);\n    \n    var coms = myspreadsheet.getConfig().comments;\n    \n    initialiseSheet(myspreadsheet.getJson(),cdat,coms,myspreadsheet.getConfig().mergeCells);\n    \n}\n\n\nfunction moveColumn(plus) {\n    \n    \n    if (!selectedColumn) { return null; }\n    \n    \n    myspreadsheet.moveColumn(selectedColumn,selectedColumn + plus);\n    selectedColumn = selectedColumn + plus;\n}\n\n\n\n function mergecells() {\n    \n    if (selectedRange && selectedRange!==\"\") {\n        \n        var rc = String.fromCharCode(parseInt(selectedRange.split(\",\")[0])+65) + (parseInt(selectedRange.split(\",\")[1])+1);\n        var w = 1 + parseInt(selectedRange.split(\",\")[2]) - parseInt(selectedRange.split(\",\")[0]);\n        var h = 1 + parseInt(selectedRange.split(\",\")[3]) - parseInt(selectedRange.split(\",\")[1]);\n        myspreadsheet.setMerge(rc, w, h);\n    }\n    \n }\n\n\n\n function unmergecells() {\n    \n    if (selectedRange && selectedRange!==\"\") {\n        \n        var rc = String.fromCharCode(parseInt(selectedRange.split(\",\")[0])+65) + (parseInt(selectedRange.split(\",\")[1])+1);\n        //var w = 1 + parseInt(selectedRange.split(\",\")[2]) - parseInt(selectedRange.split(\",\")[0]);\n        //var h = 1 + parseInt(selectedRange.split(\",\")[3]) - parseInt(selectedRange.split(\",\")[1]);\n        myspreadsheet.removeMerge(rc);\n    }\n    \n }\n\n        \n        \nfunction initialiseSheet(data,columns,comments,mergeCells) {\n    \n    document.getElementById('spreadsheet').innerHTML = \"\";\n                         \n                         \n                    var xtras = docType.value == \"array\" ? false:true;\n                       \n                    myspreadsheet = jspreadsheet(document.getElementById('spreadsheet'), {\n                        data:data,\n                        columns: columns,\n                        allowComments: true,              \n                        updateTable: function (instance, cell, col, row, val, id) {\n                            \n                            if ((\"\"+val).indexOf(\"<\")<0 && (\"\"+val).indexOf(\" \")<0) {\n                                if ((\"\"+val).indexOf(\".jp\")>0 || (\"\"+val).indexOf(\".png\")>0) {\n                                    \n                                    if (val.indexOf(\"http\")<0 && val.indexOf(\"/\")<0) { val = \"/files/images/\" + val; }\n                                        \n                                    cell.innerHTML = '<img src=\"' + val + '\" style=\"max-width:100px;\">';\n                                    \n                                    \n                                }\n                                else if ((\"\"+val).indexOf(\".svg\")>0) {\n                                    \n                                    if (val.indexOf(\"http\")<0 && val.indexOf(\"/\")<0) { val = \"/files/svg/\" + val; }    \n                                        \n                                    cell.innerHTML = '<img src=\"' + val + '\" style=\"max-width:100px;\">';\n                                    \n                                }\n                            }\n                            \n                        },\n                        onchange: function (instance, cell, col, row, val, id) { \n                            \n                            \n                            console.log(\"selectedRow = \"+selectedRow);\n                            //if (selectedColumnName == \"selection\") { selectionData = myspreadsheet.getJson()[selectedRow];  console.log(selectionData);   }\n                        },\n                        onselection: selectionActive,\n                        wordWrap: true,\n                        columnDrag: true,\n                        rowDrag: true,\n                        rowResize: true,\n                        allowInsertColumn: xtras,\n                        allowDeleteColumn: xtras,\n                        allowRenameColumn: xtras,\n                        mergeCells: mergeCells\n                    }); \n                    \n                    \n                    for (var com in comments) {\n                        \n                        \n                        \n                        try {\n                          myspreadsheet.setComments(com, comments[com]); \n                        }\n                        catch(err) {\n                          \n                        }\n                    }\n                    \n}\n\n\n////////////////////////////////// Custom Functions\n\nvar META= function(v) {\n    v = metadata[v] || 0;\n    return v;\n}\n\nvar CEIL= function(v) {\n    v = Math.ceil(v);\n    return v;\n}\n\nvar FLOOR= function(v) {\n    v = Math.floor(v);\n    return v;\n}\n\n\nvar refreshMeta = function() {\n    \n    // if (!myspreadsheetmeta) { return null; }\n    // alert(\"refresh\");\n    metadata = {};\n                                \n    var mymeta = myspreadsheetmeta.getJson();\n    for (var mtd in mymeta) {\n        if (mymeta[mtd].key!== \"data\" && mymeta[mtd].key && mymeta[mtd].value && mymeta[mtd].key!== \"config\") {\n            var nk = mymeta[mtd].key;\n            if(nk.indexOf(\" \")>-1) { nk = camelize(nk); }\n            metadata[nk] = mymeta[mtd].value;\n        }\n    }\n     \n     \n    //seems long way to refresh but works....\n    initialiseSheet(myspreadsheet.getJson(),myspreadsheet.getConfig().columns,myspreadsheet.getConfig().comments);\n                                \n}\n\nvar upgradeMeta = function() {\n\n    var urlParams = new URLSearchParams(window.location.search);\n    \n    urlParams.forEach(function(value, key) {\n      console.log(value, key);\n      if (key!== \"data\" && key!== \"config\" && key!== \"sheet\" && key!== \"json\"  && key!== \"edit\") {\n            metadata[key] = value;\n        }\n    });\n    \n\n}\n\nvar myfilename = \"\";\nvar form_url;\n\n// #################################################################################### START\n\n$(document).ready(function () {\n\n      var urlParams = new URLSearchParams(window.location.search);\n\n        if (urlParams.get('sheet')) {\n            \n            sheetname = urlParams.get('sheet');\n            form_url = \"sheet_\" + sheetname;\n            \n        } else if (urlParams.get('json')) {\n            \n            sheetname = urlParams.get('json').replace(\".json\",\"\").replace(\"/files/json/\",\"\");\n            form_url = sheetname; \n            \n        } else {\n            \n            sheetname = \"new\"; \n            form_url = \"sheet_\" + sheetname;\n            \n        }\n\n      if (sheetname) {\n          \n            var form_data = {};\n            \n            \n            \n            if (form_url.indexOf(\"/\")<0) { form_url = \"/files/json/\" + form_url; }  \n            if (form_url.indexOf(\".json\")<0 && form_url.indexOf(\"/api/\")<0) { form_url += \".json\" ; } \n            \n            myfilename = form_url;\n            \n            document.getElementById('mytit').innerHTML = \"<h2>\" + sheetname + \"</h2>\";\n            \n            \n            //var form_target = $(this).attr(\"target\") || \"result\";\n            //var ftarget = \"#\" + form_target;\n            \n            var form_method = \"GET\";\n            \n            //$(\"#loadingimg\").show();\n            \n            $.ajax({\n                url: form_url, \n                type: form_method,      \n                data: form_data,     \n                cache: false,\n                success: function(returnhtml){   \n                    \n                    console.log(returnhtml);\n                    \n                    //userdata = JSON.parse(returnhtml);\n                    \n                    var data = returnhtml.data || returnhtml; \n                    \n                    \n                    var metad = [];\n                    var columns =  []; \n                    var comments = []; \n                    var mystyle={};\n                    var mergeCells;\n                    \n                    if (returnhtml.config) {   // if a sheet\n                    \n                        docType.value = \"sheet\";\n                    \n                        columns = returnhtml.config.columns || []; \n                        comments = returnhtml.config.comments || []; \n                        mystyle = returnhtml.config.style || []; \n                        mergeCells = returnhtml.config.mergeCells || null; \n                        \n                        console.log(data);\n                    \n                    \n                        for (var mtd in returnhtml) {\n                            if (mtd!== \"data\" && mtd!== \"config\" && mtd!== \"html\" && mtd!== \"calculated\") {\n                                //metad.push({\"key\":mtd,\"value\":returnhtml[mtd]});\n                                metadata[mtd]=returnhtml[mtd];\n                            }\n                        }\n                        \n                        upgradeMeta();\n                        \n                        for (var mtd in metadata) {\n                            if (mtd!== \"data\" && mtd!== \"config\" && mtd!== \"html\") {\n                                metad.push({\"key\":mtd,\"value\":metadata[mtd]});\n                                //metadata[mtd]=returnhtml[mtd];\n                            }\n                        }\n                        \n                        \n                        if (metadata.run) { \n                            document.getElementById(\"runsec\").style.display=\"inline\"; \n                            if (!urlParams.get('edit') && !metadata['edit']) { \n                                document.getElementById(\"editsec\").style.display=\"none\"; \n                                document.getElementById(\"savesec\").style.display=\"none\"; \n                                document.getElementById(\"metasec\").style.display=\"none\"; \n                            }\n                        }\n                        \n                        if (metadata.basic || urlParams.get('basic')) { \n                            \n                            document.getElementById(\"editsec\").style.display=\"none\"; \n                            document.getElementById(\"metasec\").style.display=\"none\"; \n                            \n                        }\n                        \n                        if (metadata[\"next\"]) { \n                            document.getElementById(\"nextsec\").style.display=\"inline\"; \n                            if (!urlParams.get('edit') && !metadata['edit']) {\n                                document.getElementById(\"editsec\").style.display=\"none\"; \n                                document.getElementById(\"savesec\").style.display=\"none\"; \n                                document.getElementById(\"metasec\").style.display=\"none\"; \n                            }\n                        }\n                        \n                    } else { \n                        \n                        \n                        document.getElementById('metasec').style.display=\"none\";\n                        document.getElementById('columnsec').style.display=\"none\";\n                        \n                        \n                        if (returnhtml[0] && typeof returnhtml[0] === 'object' && returnhtml[0] !== null) {\n                        \n                            docType.value = \"object\";\n                            \n                            for (var alin in data[0]) {\n                                \n                                var ob = {\n                                    type: 'text',\n                                    title: alin,\n                                    width: 150\n                                }\n                                columns.push(ob);\n                            }\n                            \n                            \n                            \n                            \n                            \n                        } else {\n                        \n                            docType.value = \"array\";\n                            \n                            for (var alin in data) {\n                                data[alin] = [data[alin]];\n                            }\n                            \n                            var ob = {\n                                type: 'text',\n                                title: 'Values',\n                                width: 700,\n                                align:'left'\n                            }\n                            columns.push(ob);\n                        }\n                        \n                    }  \n                    \n                    initialiseSheet(data,columns,comments,mergeCells);\n                    \n                    console.log(mystyle);\n                    if (mystyle) { myspreadsheet.setStyle(mystyle); }\n                    \n                    \n                    if (metad.length<1) { metad=[{\"key\":\"title\",\"value\":sheetname||\"My new workbook\"},{\"key\":\"author\",\"value\":\"\"}]; }\n                    myspreadsheetmeta = jspreadsheet(document.getElementById('spreadsheetmeta'), {\n                            data:metad,\n                            columns:[{\n                                type: 'text',\n                                name:'key',\n                                title:'Key',\n                                width:200,\n                                align:'left'\n                            },{\n                                type: 'text',\n                                name:'value',\n                                title:'Value',\n                                width:800,\n                                align:'left'\n                            }],\n                            allowInsertColumn: false,\n                            allowDeleteColumn: false,\n                            allowRenameColumn: false,              \n                            onchange: function (instance, cell, col, row, val, id) {\n                                \n                                clearTimeout(tim);\n                                tim = setTimeout(function(){ refreshMeta(); }, 250);\n                                \n                                \n                            }\n                        }); \n                  \n                    \n                    //$(ftarget).html(returnhtml);               \n                },\n                error: function(XMLHttpRequest, textStatus, errorThrown) { \n                    \n                    \n                    //alert(\"Status: \" + textStatus); alert(\"Error: \" + errorThrown); \n                    \n                    if (errorThrown==\"Not Found\") {\n                        \n                        alert(\"NEW SHEET CREATED\"); \n                        \n                        myspreadsheet = jspreadsheet(document.getElementById('spreadsheet'), {\n                            data:[{\"network\":\"\",\"device\":\"\",\"group\":\"\"}],\n                            columns:[{\n                                type: 'text',\n                                name:'network',\n                                title:'Network',\n                                width:150\n                            },{\n                                type: 'text',\n                                name:'device',\n                                title:'Device',\n                                width:250\n                            },{\n                                type: 'text',\n                                name:'group',\n                                title:'Group',\n                                width:200\n                            },{\n                                type: 'text',\n                                name:'key',\n                                title:'Key',\n                                width:150\n                            },{\n                                type: 'text',\n                                name:'value',\n                                title:'Value',\n                                width:150\n                            },{\n                                type: 'text',\n                                name:'units',\n                                title:'Units',\n                                width:100\n                            },{\n                                type: 'text',\n                                name:'title',\n                                title:'Title',\n                                width:300\n                            }]\n                        }); \n                        \n                        myspreadsheetmeta = jspreadsheet(document.getElementById('spreadsheetmeta'), {\n                            data:[{\"key\":\"title\",\"value\":urlParams.get('sheet')||\"My new spreadsheet\"},{\"key\":\"description\",\"value\":\"\"},{\"key\":\"author\",\"value\":\"\"},{\"key\":\"created\",\"value\":(new Date().toLocaleString())}],\n                            columns:[{\n                                type: 'text',\n                                name:'key',\n                                title:'Key',\n                                width:200,\n                                align:'left'\n                            },{\n                                type: 'text',\n                                name:'value',\n                                title:'Value',\n                                width:500,\n                                align:'left'\n                            }],\n                            allowInsertColumn: false,\n                            allowDeleteColumn: false,\n                            allowRenameColumn: false,              \n                            onchange: function (instance, cell, col, row, val, id) {\n                                \n                                clearTimeout(tim);\n                                tim = setTimeout(function(){ refreshMeta(); }, 250);\n                                \n                                \n                            }\n                        }); \n                        \n                    }\n                }            \n            });    \n            \n          \n          \n          \n          \n          \n          \n      }\n      \n      \n      \n      \n      \n\n});\n</script>\n\n \n\n    <form id=\"nextform\" name=\"nextform\" method=\"post\" action=\"/api/files/save\" ajax=\"true\" target=\"result1\">\n    <input type=\"hidden\" id=\"svgtext\" name=\"svgtext\" value=\"\">\n    <input type=\"hidden\" id=\"svgfile\" name=\"svgfile\" value=\"\">\n    <input type=\"hidden\" id=\"show\" name=\"show\" value=\"\">\n    </form>\n    <iframe width=\"100%\" frameborder=\"0\" id=\"result1\" name=\"result1\" ></iframe>\n    \n    <div id=\"runresults\"></div>\n    \n</section>\n\n",
        "output": "str",
        "x": 450,
        "y": 1200,
        "wires": [
            [
                "1ea99348.4a6ebd",
                "ac369b44.bec8a8"
            ]
        ],
        "info": "https://bossanova.uk/jspreadsheet/v4/"
    },
    {
        "id": "1ea99348.4a6ebd",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "sheet",
        "rules": [
            {
                "t": "set",
                "p": "sections.sheet",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "ac369b44.bec8a8",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "func": "msg.filename = global.get(\"htmlDirectory\") + \"/sections/sheet.html\";\nmsg.payload = msg.payload.body;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1240,
        "wires": [
            [
                "d339e015.ed455"
            ]
        ]
    },
    {
        "id": "d339e015.ed455",
        "type": "file",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 780,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "fefc5fee.1b973",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1400,
        "y": 100,
        "wires": [
            [
                "b20198e3.859378"
            ]
        ]
    },
    {
        "id": "b20198e3.859378",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "settings.label_tF",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "settings.label_tR",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "settings.label_tCpu",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ebec191eb32eee17",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "only local",
        "func": "\nif (msg.topic.split(\"/\")[0]==global.get(\"networkId\")) { msg.topic = msg.topic.replace(global.get(\"networkId\"),global.get(\"localNetworkId\")); }\n\nif (msg.topic.split(\"/\")[0]!==global.get(\"localNetworkId\")) { return null; }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 400,
        "wires": [
            [
                "de5cbb28.0bca7"
            ]
        ]
    },
    {
        "id": "4a7695e79d88af15",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "mode": "link",
        "links": [
            "3a197b072de52765",
            "03eda15622c029f1"
        ],
        "x": 915,
        "y": 600,
        "wires": []
    },
    {
        "id": "8b488cbb14b093cb",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "bfed0a27b4c87767",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "about",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 940,
        "y": 720,
        "wires": [
            [
                "5591a77bf54b568e"
            ]
        ]
    },
    {
        "id": "fb19782f815bcb84",
        "type": "http response",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 720,
        "wires": []
    },
    {
        "id": "5591a77bf54b568e",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "func": "msg.payload = JSON.stringify({\"node\":global.get(\"node\"),\"networkId\":global.get(\"networkId\"),\"nodeDescription\":global.get(\"nodeDescription\"),\"nodeName\":global.get(\"nodeName\")})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 720,
        "wires": [
            [
                "fb19782f815bcb84"
            ]
        ]
    },
    {
        "id": "b13ead5bbc6447d5",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 980,
        "wires": [
            [
                "8a91817c8f410e98"
            ]
        ]
    },
    {
        "id": "8a91817c8f410e98",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "readings.local.shedNode1.system.upTimeH.topic",
                "pt": "global",
                "to": "rAndD-shed/shedNode1/shedNode1/system/upTimeH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "readings.local.shedNode1.system.upTime.topic",
                "pt": "global",
                "to": "rAndD-shed/shedNode1/shedNode1/system/upTime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "ff28800e4bbba1c7",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "Clear Alarms & Sync",
        "func": "\n\n\n//for (var net in global.get(\"readings\")) {\nvar net = global.get(\"localNetworkId\");\n\n    for (var dev in global.get(\"readings.\"+net)) {\n    \n            if (global.get(\"readings.\"+net+\".\"+dev+\".alarm\")) {\n                \n                global.set(\"readings.\"+net+\".\"+dev+\".alarm\", {});\n                \n            }\n        \n    }\n    \n//}\n\nmsg.topic = \"cmd/sync\"\nmsg.payload = net + \"/#\";\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 520,
        "wires": [
            [
                "0a7561544c78863d"
            ]
        ]
    },
    {
        "id": "f8a586463e821247",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "ff28800e4bbba1c7"
            ]
        ]
    },
    {
        "id": "0a7561544c78863d",
        "type": "link out",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 495,
        "y": 520,
        "wires": []
    },
    {
        "id": "78d6fbafd103f379",
        "type": "ui_button",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Clear Alarms",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "cmd:clearalarms",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "ff28800e4bbba1c7"
            ]
        ]
    },
    {
        "id": "0916c03a0c141250",
        "type": "inject",
        "z": "580bb6a3.5dc1d",
        "name": "local/+/+/+/cpu_currentload",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "cmd/request",
        "payload": "local/+/+/+/cpu_currentload",
        "payloadType": "str",
        "x": 240,
        "y": 1100,
        "wires": [
            [
                "32f9b18e.982aee"
            ]
        ]
    },
    {
        "id": "518305dd1d973895",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/readings/:vargroup",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "1c09662af1958f62",
                "dd20e9fca3781c4c"
            ]
        ]
    },
    {
        "id": "1c09662af1958f62",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "Metrics",
        "func": "\nvar metrics = global.get(\"readings.local\")||{};\n\n\nvar net = global.get(\"config.networkId\") || \"local\";\n\nvar oot = {readings:[]};\n//oot = 'stat_state {network=\"local\", node=\"mynodered1\", device=\"prometheus\", vargroup=\"stat\", varkey=\"state\"} 1\\n';\n\nfor (var dev in metrics) {\nfor (var grp in metrics[dev]) {\n\n    if (msg.req.params.vargroup && grp != msg.req.params.vargroup) { continue; }    \n    \n    for (var m in metrics[dev][grp]) {\n\n        var tline = {};\n        if (metrics[dev][grp][m].topic) {\n\n            tline.value = metrics[dev][grp][m].value;\n            tline.time = metrics[dev][grp][m].timestamp;\n            tline.title = metrics[dev][grp][m].title || \"\";\n            tline.units = metrics[dev][grp][m].units || \"\";\n            tline.network = net;\n            tline.node = metrics[dev][grp][m].topic.split(\"/\")[1];\n            tline.device = dev;\n            tline.vargroup = grp;\n            tline.varkey = m;\n\n            if (msg.payload.select) {\n\n                tline = tline[msg.payload.select];\n\n            }         \n     \n\n            oot.readings.push(tline);\n        }  \n        //oot += tops[3] + '_' + tops[4] + '{network=\"' + net + '\",node=\"' + tops[1] + '\",device=\"' + tops[2] + '\",vargroup=\"' + tops[3] + '\",varkey=\"' + tops[4] + '\"} ' + metrics[m].payload + \"\\n\";\n    }\n}\n}\n\nmsg.payload = oot;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 40,
        "wires": [
            [
                "de79189b967c2492",
                "303547d4871dc1e6"
            ]
        ]
    },
    {
        "id": "f4cec4c48cb94a38",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/readings",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "1c09662af1958f62"
            ]
        ]
    },
    {
        "id": "de79189b967c2492",
        "type": "http response",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "303547d4871dc1e6",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 100,
        "wires": []
    },
    {
        "id": "7622ca4aa75d6b27",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/cmd",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "37ee9ad397338449",
                "5fd1baeb1c818156"
            ]
        ]
    },
    {
        "id": "37ee9ad397338449",
        "type": "function",
        "z": "580bb6a3.5dc1d",
        "name": "Metrics",
        "func": "msg.payload={\"data\":[{return:\"ok\"}]};\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 180,
        "wires": [
            [
                "859484ecdc7e8eff",
                "449a3389bd406444"
            ]
        ]
    },
    {
        "id": "859484ecdc7e8eff",
        "type": "http response",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "5fd1baeb1c818156",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 140,
        "wires": []
    },
    {
        "id": "247724fd2c92998a",
        "type": "http in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "url": "/cmd",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "37ee9ad397338449",
                "08df032ed7de4560"
            ]
        ]
    },
    {
        "id": "449a3389bd406444",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 220,
        "wires": []
    },
    {
        "id": "08df032ed7de4560",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd20e9fca3781c4c",
        "type": "debug",
        "z": "580bb6a3.5dc1d",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 100,
        "wires": []
    },
    {
        "id": "2cc170705ae25adc",
        "type": "mqtt in",
        "z": "580bb6a3.5dc1d",
        "name": "",
        "topic": "_/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "7ad2997b.42a908",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "8aa46b4ede182d15"
            ]
        ]
    },
    {
        "id": "8aa46b4ede182d15",
        "type": "change",
        "z": "580bb6a3.5dc1d",
        "name": "remove _/",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "_/",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "6db74d6.e025e34"
            ]
        ]
    },
    {
        "id": "63209b3d832ab1c5",
        "type": "http in",
        "z": "b2bca411e4cdd603",
        "name": "",
        "url": "/settingsapi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "aa0e54d823be4b74",
                "0463ae15a1aa7563",
                "9da1affa83043392"
            ]
        ]
    },
    {
        "id": "0bc413acc4e44582",
        "type": "http response",
        "z": "b2bca411e4cdd603",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "aa0e54d823be4b74",
        "type": "debug",
        "z": "b2bca411e4cdd603",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 360,
        "wires": []
    },
    {
        "id": "9da1affa83043392",
        "type": "template",
        "z": "b2bca411e4cdd603",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ok",
        "output": "str",
        "x": 580,
        "y": 200,
        "wires": [
            [
                "0bc413acc4e44582"
            ]
        ]
    },
    {
        "id": "7d4d106f64feea48",
        "type": "http in",
        "z": "b2bca411e4cdd603",
        "name": "",
        "url": "/settingsapi",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "07039b7cfc9ff55d"
            ]
        ]
    },
    {
        "id": "b46b090bc6759d6b",
        "type": "http response",
        "z": "b2bca411e4cdd603",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "db9e8e37622b437c",
        "type": "template",
        "z": "b2bca411e4cdd603",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{ \"tSet\": \"15\", \"tSet2\": 10.5 }",
        "output": "str",
        "x": 520,
        "y": 60,
        "wires": [
            [
                "e69556b50bdf776e"
            ]
        ]
    },
    {
        "id": "e69556b50bdf776e",
        "type": "debug",
        "z": "b2bca411e4cdd603",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "07039b7cfc9ff55d",
        "type": "function",
        "z": "b2bca411e4cdd603",
        "name": "fetch settings",
        "func": "\nvar settings = global.get(\"settings\");\nvar oot = {};\n\noot.title = \"\";\noot.email = \"\";\noot.postCode = \"\";\n\nfor (var sett in settings) {\n\n    oot[sett] = settings[sett].value;\n}\n\nmsg.payload = JSON.stringify(oot);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "b46b090bc6759d6b",
                "e69556b50bdf776e"
            ]
        ]
    },
    {
        "id": "0463ae15a1aa7563",
        "type": "function",
        "z": "b2bca411e4cdd603",
        "name": "function 2",
        "func": "\nvar settings = global.get(\"settings\");\nvar oot = {};\n\nfor (var sett in msg.payload) {\n\n    oot.topic = \"set/\" + sett;\n    oot.payload = msg.payload[sett];\n    node.send(oot);\n}\n\n\n\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "6da8fb130fa1df87",
                "1dab6e911927df71"
            ]
        ]
    },
    {
        "id": "1dab6e911927df71",
        "type": "link out",
        "z": "b2bca411e4cdd603",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 885,
        "y": 280,
        "wires": []
    },
    {
        "id": "6da8fb130fa1df87",
        "type": "debug",
        "z": "b2bca411e4cdd603",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 400,
        "wires": []
    },
    {
        "id": "bbcda2730195f64e",
        "type": "inject",
        "z": "b2bca411e4cdd603",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "set/title",
        "payload": "Test",
        "payloadType": "str",
        "x": 730,
        "y": 360,
        "wires": [
            [
                "1dab6e911927df71"
            ]
        ]
    },
    {
        "id": "8884059720507654",
        "type": "inject",
        "z": "b2bca411e4cdd603",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "set/tSet",
        "payload": "51",
        "payloadType": "num",
        "x": 760,
        "y": 420,
        "wires": [
            [
                "1dab6e911927df71"
            ]
        ]
    },
    {
        "id": "4743f19e.7ea99",
        "type": "inject",
        "z": "315f0920.148fe6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 280,
        "y": 260,
        "wires": [
            [
                "5cd1868334baa89e"
            ]
        ]
    },
    {
        "id": "825b5c40.cd4e7",
        "type": "http request",
        "z": "315f0920.148fe6",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 690,
        "y": 260,
        "wires": [
            [
                "88b5f71b.5b44f8"
            ]
        ]
    },
    {
        "id": "4878e15c.186e1",
        "type": "debug",
        "z": "315f0920.148fe6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 340,
        "wires": []
    },
    {
        "id": "32d2b528.4b81aa",
        "type": "change",
        "z": "315f0920.148fe6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "weather",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 340,
        "wires": [
            [
                "4878e15c.186e1",
                "492fd41d.a85bac"
            ]
        ]
    },
    {
        "id": "88b5f71b.5b44f8",
        "type": "json",
        "z": "315f0920.148fe6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 490,
        "y": 340,
        "wires": [
            [
                "32d2b528.4b81aa"
            ]
        ]
    },
    {
        "id": "9b35836c.4a76b",
        "type": "comment",
        "z": "315f0920.148fe6",
        "name": "https://www.weatherapi.com/api-explorer.aspx",
        "info": "",
        "x": 280,
        "y": 100,
        "wires": []
    },
    {
        "id": "9ba78b73.1c0a18",
        "type": "function",
        "z": "315f0920.148fe6",
        "name": "",
        "func": "if (msg.key==\"condition\") { msg.payload = msg.payload.text; }\n\nmsg.topic = msg.group + \"/\" + msg.key;\n\nmsg.topic = msg.topic.replace(\"current/\",\"weather/\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 500,
        "wires": [
            [
                "e7ba0320.e7cfd",
                "82b97d51.e500a"
            ]
        ]
    },
    {
        "id": "492fd41d.a85bac",
        "type": "split",
        "z": "315f0920.148fe6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "group",
        "x": 440,
        "y": 500,
        "wires": [
            [
                "faf41964.e94708"
            ]
        ]
    },
    {
        "id": "faf41964.e94708",
        "type": "split",
        "z": "315f0920.148fe6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "key",
        "x": 570,
        "y": 500,
        "wires": [
            [
                "9ba78b73.1c0a18"
            ]
        ]
    },
    {
        "id": "e7ba0320.e7cfd",
        "type": "debug",
        "z": "315f0920.148fe6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 807,
        "y": 579,
        "wires": []
    },
    {
        "id": "82b97d51.e500a",
        "type": "link out",
        "z": "315f0920.148fe6",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 915,
        "y": 500,
        "wires": []
    },
    {
        "id": "b6634d9f.cf671",
        "type": "comment",
        "z": "315f0920.148fe6",
        "name": "Needs settings.postCode set",
        "info": "",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "5cd1868334baa89e",
        "type": "function",
        "z": "315f0920.148fe6",
        "name": "",
        "func": "\nvar postcode = global.get(\"settings.postCode.value\");\n\nif (!postcode) { return null; }\n\nmsg.url = \"http://api.weatherapi.com/v1/current.json?key=2853c9a1a6664114a28160251211912&q=\" + postcode + \"&aqi=no\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "825b5c40.cd4e7"
            ]
        ]
    },
    {
        "id": "cfacc0f6dd03c829",
        "type": "inject",
        "z": "315f0920.148fe6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 760,
        "wires": [
            [
                "046cf324e42cf1ad"
            ]
        ]
    },
    {
        "id": "046cf324e42cf1ad",
        "type": "function",
        "z": "315f0920.148fe6",
        "name": "tAlarm",
        "func": "msg.payload = parseFloat(global.get(\"settings.postCode.value\") || \"\");\nmsg.topic = \"set/postCode\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 760,
        "wires": [
            [
                "39a09f6863de5477"
            ]
        ]
    },
    {
        "id": "39a09f6863de5477",
        "type": "ui_text_input",
        "z": "315f0920.148fe6",
        "name": "",
        "label": "Post Code",
        "tooltip": "",
        "group": "cb203bcb.f1ec68",
        "order": 10,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": "5000",
        "topic": "set/postCode",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 760,
        "wires": [
            [
                "0f74b5403472ab59"
            ]
        ]
    },
    {
        "id": "0f74b5403472ab59",
        "type": "change",
        "z": "315f0920.148fe6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/postCode",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Post Code",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 760,
        "wires": [
            [
                "3b8abba47b97affa",
                "4768f72745c3e936"
            ]
        ]
    },
    {
        "id": "3b8abba47b97affa",
        "type": "link out",
        "z": "315f0920.148fe6",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1055,
        "y": 760,
        "wires": []
    },
    {
        "id": "4768f72745c3e936",
        "type": "trigger",
        "z": "315f0920.148fe6",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "8413e0de1af3e39d"
            ]
        ]
    },
    {
        "id": "8413e0de1af3e39d",
        "type": "change",
        "z": "315f0920.148fe6",
        "name": "post changes",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cmd/request",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local/+/+/settings/#",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 840,
        "wires": [
            [
                "3b8abba47b97affa"
            ]
        ]
    },
    {
        "id": "13fb193b.b62177",
        "type": "template",
        "z": "78c26ef1.61809",
        "name": "desktop",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<script src=\"https://kit.fontawesome.com/c6b21b7a8f.js\" crossorigin=\"anonymous\"></script>\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto\">\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Lato\">\n    <style>\n\n\n.scaledframe {\n    \n    width: 133.34%;\n    height: 133.34%;\n    overflow: hidden;\n    border: 0;\n    -ms-transform: scale(0.75);\n    -moz-transform: scale(0.75);\n    -o-transform: scale(0.75);\n    -webkit-transform: scale(0.75);\n    transform: scale(0.75);\n    \n    -ms-transform-origin: 0 0;\n    -moz-transform-origin: 0 0;\n    -o-transform-origin: 0 0;\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0;\n}\n\n.wbutt {\n    padding: 3px;\n    font-size: 14px;\n}\n\nsection {\n    /* border-bottom: 1px solid rgb(255, 255, 255); */\n    padding: 20px 50px;\n    /* height: 100vh; */\n    scroll-snap-align: start;\n    /* text-align: center; */\n    position: relative;\n    /* background: #ffffff; */\n    font-size: 18px;\n    background:none;\n    border-bottom: none;\n}\n\nbody  {\n    margin: 0px;\n}\n\nbody , textarea , input , select {\n\tfont-family: 'Roboto', sans-serif;\n}\n\nh1 {\n    \n    font-family: 'Lato', sans-serif;\n    font-size: 38px;\n    font-weight: 650;\n    line-height: 1.2;\n}\n\nsmall {\n    \n    font-size: 80%;\n    font-weight: 400;\n}\n\nbody {\n        background-color: #cccfd3;\n        /*  background-image: url('{{{wallpaper}}}'); */\n        background-repeat: no-repeat;\n        background-attachment: fixed;\n        background-size: cover;\n        line-height: 25px;\n}\n.popup {\n  z-index: 9;\n  background-color: #f1f1f1;\n  border: 1px solid #d3d3d3;\n  text-align: center;\n  min-height: 150px;\n  min-width: 300px;\n  border-radius: 3px;\n  box-shadow: 2px 3px 3px -1px darkgrey\n}\n\n.help {\n  padding: 50px;\n  text-align: left;\n}\n\n/*Drgable */\n\n.popup {\n  position: absolute;\n  /*resize: both; !*enable this to css resize*! */\n  overflow: hidden;\n}\n\n.popup-header {\n  padding: 2px;\n  z-index: 10;\n  background-color: #303c43;\n  color: #fff;\n}\n\n\n.popup-drag {\n  cursor: move;\n}\n\ntable {\n  color: #fff;\n}\n\n/*Resizeable*/\n\n.popup .resizer-right {\n  width: 5px;\n  height: 100%;\n  background: transparent;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  cursor: e-resize;\n}\n\n.popup .resizer-bottom {\n  width: 100%;\n  height: 5px;\n  background: transparent;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  cursor: n-resize;\n}\n\n.popup .resizer-both {\n  width: 5px;\n  height: 5px;\n  background: transparent;\n  z-index: 10;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  cursor: nw-resize;\n}\n\n.ifr {\n  width: 100%;\n  height: calc(100% - 28px);\n}\n\n/*NOSELECT*/\n\n.popup * {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome and Opera */\n}\n\n    \n</style>\n\n<script>\n    \n    \n\n    \n var dlayout = \"\"; \n var currentp;\n var currentpstyle;\n\n var desktopjson = {{{desktopjson}}};\n\n    \n  window.onload = function() {\n        \n      initDragElement();\n      initResizeElement();\n      initButtons();\n  \n      if (desktopjson.backgroundimage) {\n          \n          document.body.style.backgroundImage=\"url(\" + desktopjson.backgroundimage + \")\";\n          \n      } else {  changeBG(); }\n      \n      \n      if (desktopjson.expires) { checkTime(); var chktimer = setInterval(function () { checkTime(); }, 60000); }\n      //alert(document.cookie);\n};\n\nvar hasexpired = false;\nfunction checkTime() {\n    \n    if (!desktopjson.expires) { return null; }\n    if ( (new Date().getTime()) >  desktopjson.expires) {  \n        if (hasexpired!==true) {\n            alert(\"Access Expired !\"); \n            hasexpired = true;\n            //var hgjh=  \"<p><b>Access Expired !</b></p>\\n\"; \n        }\n        \n        \n    }\n      \n}\n\nfunction initDragElement() {\n  var pos1 = 0,\n    pos2 = 0,\n    pos3 = 0,\n    pos4 = 0;\n  var popups = document.getElementsByClassName(\"popup\");\n  var elmnt = null;\n  var currentZIndex = 100; //TODO reset z index when a threshold is passed\n\n  for (var i = 0; i < popups.length; i++) {\n    var popup = popups[i];\n    var header = getHeader(popup);\n\n    popup.onmousedown = function() {\n      this.style.zIndex = \"\" + ++currentZIndex;\n    };\n\n    if (header) {\n      header.parentPopup = popup;\n      header.onmousedown = dragMouseDown;\n    }\n  }\n\n  function dragMouseDown(e) {\n    elmnt = this.parentPopup;\n    elmnt.style.zIndex = \"\" + ++currentZIndex;\n\n    e = e || window.event;\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onmousemove = elementDrag;\n  }\n\n  function elementDrag(e) {\n    if (!elmnt) {\n      return;\n    }\n\n    e = e || window.event;\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\n    elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\n    \n    currentpstyle = elmnt.style.cssText;\n    currentp = elmnt.id;\n    \n  }\n\n  function closeDragElement() {\n    /* stop moving when mouse button is released:*/\n    document.onmouseup = null;\n    document.onmousemove = null;\n    \n    console.log(currentp);\n    console.log(currentpstyle);\n    \n    for (var w in desktopjson.windows) {\n        \n        if (desktopjson.windows[w].id == currentp) {\n            \n            if (desktopjson.windows[w][\"laststyle\"]) {  desktopjson.windows[w][desktopjson.windows[w][\"laststyle\"]] = currentpstyle; }\n            desktopjson.windows[w][\"style\"] = currentpstyle; \n            \n            \n            console.log(desktopjson);\n            console.log(JSON.stringify(desktopjson));\n            \n            \n            break;\n        }\n    }\n    \n  }\n\n  function getHeader(element) {\n    var headerItems = element.getElementsByClassName(\"popup-drag\");\n\n    if (headerItems.length === 1) {\n      return headerItems[0];\n    }\n\n    return null;\n  }\n}\n\nfunction initResizeElement() {\n  var popups = document.getElementsByClassName(\"popup\");\n  var element = null;\n  var startX, startY, startWidth, startHeight;\n\n  for (var i = 0; i < popups.length; i++) {\n    var p = popups[i];\n\n    var right = document.createElement(\"div\");\n    right.className = \"resizer-right\";\n    p.appendChild(right);\n    right.addEventListener(\"mousedown\", initDrag, false);\n    right.parentPopup = p;\n\n    var bottom = document.createElement(\"div\");\n    bottom.className = \"resizer-bottom\";\n    p.appendChild(bottom);\n    bottom.addEventListener(\"mousedown\", initDrag, false);\n    bottom.parentPopup = p;\n\n    var both = document.createElement(\"div\");\n    both.className = \"resizer-both\";\n    p.appendChild(both);\n    both.addEventListener(\"mousedown\", initDrag, false);\n    both.parentPopup = p;\n  }\n\n  function initDrag(e) {\n    element = this.parentPopup;\n\n    startX = e.clientX;\n    startY = e.clientY;\n    startWidth = parseInt(\n      document.defaultView.getComputedStyle(element).width,\n      10\n    );\n    startHeight = parseInt(\n      document.defaultView.getComputedStyle(element).height,\n      10\n    );\n    document.documentElement.addEventListener(\"mousemove\", doDrag, false);\n    document.documentElement.addEventListener(\"mouseup\", stopDrag, false);\n  }\n\n  function doDrag(e) {\n    element.style.width = startWidth + e.clientX - startX + \"px\";\n    element.style.height = startHeight + e.clientY - startY + \"px\";\n    \n    currentpstyle = element.style.cssText;\n    currentp = element.id;\n  }\n\n  function stopDrag() {\n    document.documentElement.removeEventListener(\"mousemove\", doDrag, false);\n    document.documentElement.removeEventListener(\"mouseup\", stopDrag, false);\n    \n    console.log(currentp);\n    console.log(currentpstyle);\n    \n    for (var w in desktopjson.windows) {\n        \n        if (desktopjson.windows[w].id == currentp) {\n            \n            if (desktopjson.windows[w][\"laststyle\"]) {  desktopjson.windows[w][desktopjson.windows[w][\"laststyle\"]] = currentpstyle; }\n            desktopjson.windows[w][\"style\"] = currentpstyle; \n            \n            \n            console.log(desktopjson);\n            console.log(JSON.stringify(desktopjson));\n            \n            \n            break;\n        }\n    }\n  }\n}\n\nfunction initButtons() {\n    \n  var butts = document.getElementsByClassName(\"closex\");\n  \n  for (var i = 0; i < butts.length; i++) {\n    var butt = butts[i];\n    butt.onmousedown = function() {\n      closePanel(this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id);\n    };\n  }\n  \n  var butts = document.getElementsByClassName(\"minb\");\n  \n  for (var i = 0; i < butts.length; i++) {\n    var butt = butts[i];\n    butt.onmousedown = function() {\n      resizePanel(this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id,\"m\");\n    };\n  }\n  \n  var butts = document.getElementsByClassName(\"maxb\");\n  \n  for (var i = 0; i < butts.length; i++) {\n    var butt = butts[i];\n    butt.onmousedown = function() {\n      resizePanel(this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id,\"M\");\n    };\n  }\n  \n  var butts = document.getElementsByClassName(\"opennb\");\n  \n  for (var i = 0; i < butts.length; i++) {\n    var butt = butts[i];\n    butt.onmousedown = function() {\n      openPanel(this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.id);\n    };\n  }\n  \n  \n  \n  var butts = document.getElementsByClassName(\"changebgimage\");\n   for (var i = 0; i < butts.length; i++) {\n    var butt = butts[i];\n    butt.onmousedown = function() {\n      \n      changeBG();\n      \n    };\n  }\n  \n  \n  \n  var dlinks = document.getElementsByClassName(\"dlink\");\n  //alert(butts.length);\n  for (var i = 0; i < dlinks.length; i++) {\n    var dlink = dlinks[i];\n    //butt.addEventListener(\"mouseup\", closePanel(this), false);\n    \n    dlink.onmousedown = function() {\n      //this.style.zIndex = \"\" + ++currentZIndex;\n      //var url = this.id.replace(\"dlink-\",\"\");\n      //alert(url);\n      var p = document.getElementById(this.id.replace(\"dlink-\",\"\"));\n      p.style.display=\"inline\";\n      \n      \n        for (var w in desktopjson.windows) {\n            \n            if (desktopjson.windows[w].id == p.id) {\n                \n                \n                \n                var frcon = '<div class=\"popup-header\" title=\"' + (desktopjson.windows[w][\"description\"] || desktopjson.windows[w][\"title\"]) + '\"><table width=\"100%\"><tr><td width=\"20%\"align=\"left\">';\n                frcon += '<span class=\"wbutt refreshb\"><i class=\"fas fa-redo\"></i></span>';\n                frcon += '';\n                frcon += '</td><td width=\"60%\" align=\"center\" class=\"popup-drag\">' + desktopjson.windows[w][\"title\"] + '</td><td width=\"20%\" align=\"right\" valign=\"middle\">'\n                frcon += '<span class=\"wbutt minb\"><i class=\"fas fa-window-minimize\"></i></span><span class=\"wbutt maxb\"><i class=\"far fa-window-maximize\"></i></span><span class=\"wbutt opennb\"><i class=\"fas fa-external-link-alt\"></i></span><span class=\"wbutt closex\"><i class=\"fas fa-times\"></i></span>';\n                frcon += '</td></tr></table></div>';\n                \n                \n                if (desktopjson.windows[w][\"src\"]) {\n                    var src = desktopjson.windows[w][\"src\"];\n                    \n                    if (desktopjson.windows[w][\"root\"] && src.indexOf(\"http\")<0) {\n                        \n                        src = desktopjson[desktopjson.windows[w][\"root\"]] + src;\n                    }\n                    //src = src.replace('src=\"/','src=\"https://hw7.ddns.net/');\n                    //src = src.replace(\"src='/\",\"src='https://hw7.ddns.net/\");\n                    frcon += '<iframe class=\"' + desktopjson.windows[w][\"class\"] + '\" frameBorder=\"0\" src=\"' + src + '\"></iframe>\\n';\n                \n                    \n                }\n                \n                \n                if(desktopjson.windows[w][\"body\"]) { frcon += desktopjson.windows[w][\"body\"]; }\n                \n                \n                \n                p.innerHTML = frcon;\n                \n                initDragElement();\n                initResizeElement();\n                initButtons();\n      \n                console.log(desktopjson);\n                console.log(JSON.stringify(desktopjson));\n                \n                break;\n            }\n        }\n      \n      \n      \n    };\n  }\n    \n}   \n\nfunction closePanel(id) {\n    \n    var p = document.getElementById(id);\n    //alert(p.id);\n    p.style.display=\"none\";\n    p.innerHTML =\"\";\n    //var f = p.getElementsByTagName(\"IFRAME\")[0];\n    //f.innerHTML = \n    \n    \n}    \n\nfunction openPanel(id) {\n    \n    var p = document.getElementById(id);\n    //alert(p.id);\n    //p.style.display=\"none\";\n    //p.innerHTML =\"\";\n    var f = p.getElementsByTagName(\"IFRAME\")[0].src;\n    window.open(f);\n    \n    \n} \n\nfunction resizePanel(id,m) {\n    \n    //alert(id + \" \" + m);\n    \n    var p = document.getElementById(id);\n    \n    \n    for (var w in desktopjson.windows) {\n            \n            if (desktopjson.windows[w].id == p.id) {\n                \n                var nst = \"\";\n                \n                if (m==\"m\") { \n                    \n                    desktopjson.windows[w][\"laststyle\"] = \"stylesmall\"; \n                    nst = desktopjson.windows[w][\"stylesmall\"]||\"left: 50px; width: 500px; height: 400px; top: 50px;\";\n                    \n                }\n                else if (m==\"M\") { \n                    \n                    if(desktopjson.windows[w][\"laststyle\"] == \"stylebig\") { \n                        \n                        desktopjson.windows[w][\"laststyle\"] = \"fullscreen\"; \n                        nst = \"right: 0px; width: 100%; height: 100vh; top: 0px;\";\n                        \n                    }\n                    else { \n                        \n                        desktopjson.windows[w][\"laststyle\"] = \"stylebig\"; \n                        nst = desktopjson.windows[w][desktopjson.windows[w][\"laststyle\"]]||\"right: 30px; width: 1500px; height: 700px; top: 50px; right: 50px;\";\n                        \n                    }\n                    \n                }\n                \n                //var nst = m==\"m\" ? (desktopjson.windows[w][\"stylesmall\"]||desktopjson.windows[w][\"style\"]) : (desktopjson.windows[w][\"stylebig\"]||\"right: 30px; width: 1500px; height: 700px; top: 50px; right: 50px;\");\n                \n                if (nst!==\"\") { p.style=nst; }\n                else if (m==\"m\") { p.style.width=\"300px\"; p.style.height=\"150px\"; }\n                else  { p.style.width=\"1500px\"; p.style.height=\"700px\"; p.style.top=\"50px\"; p.style.right=\"50px\"; }\n                \n                \n                break;\n            }\n        }\n}    \n  \nfunction changeBG() {\n    \n    \n      \n      var url = \"https://picsum.photos/seed/\" + new Date().getTime() + \"/1800/1000\"\n      document.body.style = \"background-image: url(\" + url + \");\"\n      var tags = document.getElementsByClassName(\"bgimageurl\");\n        for (var j = 0; j < tags.length; j++) {\n            var tag = tags[j];\n            tag.innerHTML = url;\n        }\n        \n}    \n\n  \nfunction submitdesktop() {\n    \n\n      var dform = document.getElementById(\"dform\");\n      dform.setAttribute(\"action\", desktopjson.tunnel + \"/api/settings\");\n      document.getElementById(\"settings.desktopjson\").setAttribute(\"value\",JSON.stringify(desktopjson));\n      dform.submit();\n      \n        // var xhr = new XMLHttpRequest();\n        // xhr.open(\"POST\", desktopjson.tunnel + \"/api/settings\", true);\n        // xhr.setRequestHeader('Content-Type', 'application/json');\n        // xhr.send(JSON.stringify({\n        //     value: desktopjson\n        // }));\n        \n}    \n\nvar newdivc = 0; \nfunction newitem() {\n    \n    \n    var newurl = prompt(\"Please enter window URL\",\"https://\");\n    if (!newurl || newurl==\"https://\") { return null; }\n\n    var newtit = prompt(\"Please enter window TITLE\",newurl);\n    \n    var panels = document.getElementById(\"panels\");\n    var div = document.createElement(\"DIV\");  \n    newdivc++;\n    \n    var nn = \"w\" + new Date().getTime();\n    \n    div.setAttribute(\"id\", nn);            \n    div.setAttribute(\"name\", nn);          \n    div.setAttribute(\"class\", \"popup\");  \n    div.setAttribute(\"style\", \"width: 1160px; height: 826px; top: 44px; right: 50px;\"); \n    div.style.display=\"none\";\n    panels.appendChild(div);    \n \n    var links = document.getElementById(\"links\");\n    var span = document.createElement(\"SPAN\");  \n    var br = document.createElement(\"BR\"); \n    span.setAttribute(\"id\", \"dlink-\" + nn);            \n    span.setAttribute(\"class\", \"dlink\");  \n    span.innerHTML = '<small>' + (newtit || newurl) + '</small>';\n    \n    links.appendChild(br); \n    links.appendChild(span); \n    \n    var nw = {\n            \"title\": newtit || newurl,\n            \"root\": \"tunnel\",\n            \"src\": newurl,\n            \"laststyle\": \"stylebig\",\n            \"style\": \"width: 1160px; height: 826px; top: 44px; right: 50px;\",\n            \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px;\",\n            \"stylesmall\": \"left: 535px; width: 466px; height: 276px; top: 287px;\",\n            \"class\": \"ifr\",\n            \"name\": nn,\n            \"id\": nn\n        }\n        \n    desktopjson.windows.push(nw);\n    initDragElement();\n    initResizeElement();\n    initButtons();\n        \n}    \n\n</script>\n\n\n\n{{{panels}}}\n\n<button onclick=\"newitem()\">New</button> <button onclick=\"submitdesktop()\">Save</button>\n<form  id=\"dform\" name=\"dform\" style=\"display:none;\" method=\"POST\" action=\"/api/settings\" target=\"dpostframe\">\n    <input type=\"hidden\" name=\"network\" id=\"network\" value=\"{{{dsktp.localNetworkId}}}\">\n    <input type=\"hidden\" name=\"node\" id=\"node\" value=\"{{{dsktp.node}}}\">\n    <input type=\"hidden\" name=\"settings.desktopjson\" id=\"settings.desktopjson\" value=\"{}\"><br /><br /><p align=\"right\">\n    <input  class=\"btn btn-primary\" type=\"submit\"></p></form>\n<iframe style=\"display:none;\" frameborder=\"0\" id=\"dpostframe\" name=\"dpostframe\"></iframe>\n\n\n",
        "output": "str",
        "x": 600,
        "y": 460,
        "wires": [
            [
                "198abef2.524a21"
            ]
        ],
        "info": "https://codepen.io/jkasun/pen/QrLjXP"
    },
    {
        "id": "ca53db4c.98b818",
        "type": "file",
        "z": "78c26ef1.61809",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1030,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "748146bc.c571e8",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.body",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 540,
        "wires": [
            [
                "ca53db4c.98b818",
                "2d34e5ca.70aa1a"
            ]
        ]
    },
    {
        "id": "fc131be4.773ec8",
        "type": "function",
        "z": "78c26ef1.61809",
        "name": "",
        "func": "msg.payload.body = \"<section><h1>\" + msg.dsktp.title.replace(/_/g, \" \") + \"</h1>\\n<p>\" + msg.links + \"</p>\" + msg.payload.body + \"</section>\";\n\n\n\n\n\n\nmsg.filename = \"/home/pi/\" + msg.desktop + \".html\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 460,
        "wires": [
            [
                "3c2485d.05a8d7a",
                "748146bc.c571e8"
            ]
        ]
    },
    {
        "id": "3c2485d.05a8d7a",
        "type": "function",
        "z": "78c26ef1.61809",
        "name": "",
        "func": "\nglobal.set(\"sections.\" + msg.desktop, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "807a2b06.54df68",
        "type": "function",
        "z": "78c26ef1.61809",
        "name": "attach",
        "func": "msg.payload= msg.desktop + \" Screen from \"+global.get(\"node\");\nmsg.topic=  msg.desktop + \" Screen from  \"+global.get(\"node\");\nmsg.attachments = [{   // utf-8 string as an attachment \n            filename:  msg.desktop + '.html',\n            path: msg.filename\n        }];\n\n//msg.to=\"admin@heatweb.com,jason.lawrence@thermalintegration.com\";\nmsg.to=\"setup@heatweb.com\";\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 640,
        "wires": [
            [
                "330292c9.7440ae"
            ]
        ]
    },
    {
        "id": "330292c9.7440ae",
        "type": "link out",
        "z": "78c26ef1.61809",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 935,
        "y": 640,
        "wires": []
    },
    {
        "id": "2d34e5ca.70aa1a",
        "type": "delay",
        "z": "78c26ef1.61809",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 640,
        "y": 640,
        "wires": [
            [
                "807a2b06.54df68"
            ]
        ]
    },
    {
        "id": "92e9a8ee.3622a8",
        "type": "function",
        "z": "78c26ef1.61809",
        "name": "PREPARE",
        "func": "\n\nmsg.dsktp.node = global.get(\"node\");\nmsg.dsktp.localNetworkId = global.get(\"localNetworkId\");\n\n// msg.dsktp.tunnel = global.get(\"readings.\" + msg.dsktp.localNetworkId + \".\" + msg.dsktp.node + \".system.tunnel.value\") || \"\";\n// msg.dsktp.tunnelNR = global.get(\"readings.\" + msg.dsktp.localNetworkId + \".\" + msg.dsktp.node + \".system.tunnelNR.value\") || \"\";\n\nmsg.dsktp.tunnel = \"http://\" + global.get(\"readings.\" + msg.dsktp.localNetworkId + \".\" + msg.dsktp.node + \".cpu.net_1_ip4.value\") + \":8000\";\nmsg.dsktp.tunnelNR = \"http://\" + global.get(\"readings.\" + msg.dsktp.localNetworkId + \".\" + msg.dsktp.node + \".cpu.net_1_ip4.value\") + \":1880\";\n\n\nmsg.dsktp.expires = new Date().getTime() + (1000 * 60 * 720); \nmsg.dsktp.ip = global.get(\"readings.\" + msg.dsktp.localNetworkId + \".\" + msg.dsktp.node + \".system.ipWan.value\") || \"\";\n\n\nmsg.panels=\"\";\nmsg.links=\"<small><b><span class='bgimageurl'></span></b></small><br>\";\n\nvar c=0;\n\nvar lastgrp = \"zxzxz\";\nvar lastd = \"zxzxz\";\nfor (var p in msg.dsktp.windows) {\n    \n    c++;\n    if (!msg.dsktp.windows[p][\"id\"]) { msg.dsktp.windows[p][\"id\"] = \"frame\" + c; }\n    \n    \n    // msg.panels += '<div id=\"' + msg.dsktp.windows[p][\"id\"] + '\" name=\"' + msg.dsktp.windows[p][\"id\"] + '\" class=\"popup\" style=\"' + msg.dsktp.windows[p][\"style\"] + '\">';\n    // msg.panels += '<div class=\"popup-header\" title=\"' + (msg.dsktp.windows[p][\"description\"] || msg.dsktp.windows[p][\"title\"]) + '\"><table width=\"100%\"><tr><td></td><td align=\"center\" class=\"popup-drag\">' + msg.dsktp.windows[p][\"title\"] + '</td><td align=\"right\"><span class=\"wbutt closex\">X</span> </td></tr></table></div>';\n    // msg.panels += '<iframe class=\"' + msg.dsktp.windows[p][\"class\"] + '\" frameBorder=\"0\" src=\"' + msg.dsktp.windows[p][\"src\"] + '\"></iframe>';\n    // msg.panels += '</div>\\n';\n    \n    msg.panels += '<div id=\"' + msg.dsktp.windows[p][\"id\"] + '\" name=\"' + msg.dsktp.windows[p][\"id\"] + '\" class=\"popup\" style=\"' + (msg.dsktp.windows[p][\"style\"]||msg.dsktp.windows[p][\"stylebig\"]||msg.dsktp.windows[p][\"stylesmall\"]) + ' display: none;\">';\n    //msg.panels += '<div class=\"popup-header\" title=\"' + (msg.dsktp.windows[p][\"description\"] || msg.dsktp.windows[p][\"title\"]) + '\"><table width=\"100%\"><tr><td></td><td align=\"center\" class=\"popup-drag\">' + msg.dsktp.windows[p][\"title\"] + '</td><td align=\"right\"><span class=\"wbutt closex\">X</span> </td></tr></table></div>';\n    //msg.panels += '<iframe class=\"' + msg.dsktp.windows[p][\"class\"] + '\" frameBorder=\"0\" src=\"' + msg.dsktp.windows[p][\"src\"] + '\"></iframe>';\n    msg.panels += '</div>\\n';\n    \n    if (lastgrp && lastgrp!==\"x\" && lastgrp == msg.dsktp.windows[p][\"group\"]) { msg.links += ' &nbsp;<small><small><i class=\"fas fa-grip-lines-vertical\"></i></small></small>&nbsp; '; } \n    else if (lastgrp!==\"zxzxz\") { msg.links += \"<br>\\n\";  if (lastgrp==\"nodered\") { msg.links += \"<br>\\n\"; }   }\n    \n    // remove repeated device ids in group listings\n    var tit = msg.dsktp.windows[p][\"title\"];\n    var ifd = tit.split(\" - \")[1];\n    if (ifd == lastd) {  tit = tit.split(\" - \")[0]; }\n    lastd = ifd;\n    \n    msg.links += '<span class=\"dlink\" id=\"dlink-' + msg.dsktp.windows[p][\"id\"] + '\" title=\"' + (msg.dsktp.windows[p][\"description\"]||msg.dsktp.windows[p][\"src\"]) + '\"><small>' + tit + '</small></span>';\n    \n    \n    \n    lastgrp = msg.dsktp.windows[p][\"group\"] || \"x\";\n    \n}\n\nmsg.desktopjson = JSON.stringify(msg.dsktp);\n\nif(msg.dsktp.expires) {\n    \n    var dd = new Date(msg.dsktp.expires);\n    msg.links =  \"<p><b>Remote access expires at \" + dd.toLocaleTimeString() + \" on \" + dd.toLocaleDateString() + \"</b></p>\\n\" + msg.links;\n}\n\n\nmsg.panels = '<div id=\"panels\">' + msg.panels + '</div>';\nmsg.links = '<div id=\"links\">' + msg.links + '</div>';\n\n//msg.wallpaper = \"https://picsum.photos/seed/\" + msg.dsktp.title.split(\" \")[0] + \",\" + (msg.dsktp.title.split(\" \")[1]||\"\") + \"/1800/1000\"\n//msg.wallpaper = \"https://picsum.photos/seed/\" + new Date().getDate() + \"/1800/1000\"\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 460,
        "wires": [
            [
                "13fb193b.b62177"
            ]
        ]
    },
    {
        "id": "198abef2.524a21",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload.body",
                "pt": "msg",
                "from": "src=\"/",
                "fromt": "str",
                "to": "src=\"https://hw7.ddns.net/",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.body",
                "pt": "msg",
                "from": "/files/images/wallpaper3.jpg",
                "fromt": "str",
                "to": "http://heatweb.co.uk/w/images/d/da/wallpaper1.jpg",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.body",
                "pt": "msg",
                "from": "/files/images/wallpaper1.jpg",
                "fromt": "str",
                "to": "http://heatweb.co.uk/w/images/d/da/wallpaper1.jpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 460,
        "wires": [
            [
                "fc131be4.773ec8"
            ]
        ]
    },
    {
        "id": "1077e46d.46683c",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "images",
        "rules": [
            {
                "t": "set",
                "p": "imagelist",
                "pt": "msg",
                "to": "[{\"url\":\"https://picsum.photos/seed/1640365663978/1800/1000\",\"tage\":\"city\"},{\"url\":\"https://picsum.photos/seed/1640365868818/1800/1000\",\"tage\":\"mountain\"},{\"url\":\"https://picsum.photos/seed/1640365934969/1800/1000\",\"tage\":\"coast\"},{\"url\":\"https://picsum.photos/seed/1640366025137/1800/1000\",\"tage\":\"beach\"},{\"url\":\"https://picsum.photos/seed/1640366151185/1800/1000\",\"tage\":\"grey hill\"},{\"url\":\"https://picsum.photos/seed/1640372092567/1800/1000\",\"tage\":\"mountains\"},{\"url\":\"https://picsum.photos/seed/1640373094872/1800/1000\",\"tage\":\"desk\"},{\"url\":\"https://picsum.photos/seed/1640387049834/1800/1000\",\"tage\":\"bridge\"},{\"url\":\"https://picsum.photos/seed/1640389328524/1800/1000\",\"tage\":\"mountains\"},{\"url\":\"https://picsum.photos/seed/1640389643432/1800/1000\",\"tage\":\"city\"},{\"url\":\"https://bridgesandballoons.com/Images/2017/08/Isle-of-Mull-and-Oban-56.jpg\",\"tage\":\"oban boats\"},{\"url\":\"https://picsum.photos/seed/1640365934969/1800/1000\",\"tage\":\"z\"},{\"url\":\"https://picsum.photos/seed/1640365934969/1800/1000\",\"tage\":\"z\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ca1b3492.cfbd88",
        "type": "inject",
        "z": "78c26ef1.61809",
        "name": "Design",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "desktop",
                "v": "desktop_design",
                "vt": "str"
            },
            {
                "p": "dsktp",
                "v": "{\"title\":\"Heatweb Design Desktop\",\"backgroundimage1\":\"https://picsum.photos/seed/1640459184546/1800/1000\",\"windows\":[{\"title\":\"Schematic Designer\",\"src\":\"https://hw7.ddns.net/section/svgexplode?svg=HeatNetwork6.svg&basic=1\",\"style\":\"width: 1497px; height: 897px; top: 25px; right: 50px; z-index: 125; left: 409px;\",\"z-order\":1,\"class\":\"scaledframe\",\"id\":\"schematicdesigner\",\"laststyle\":\"stylebig\",\"stylebig\":\"width: 1497px; height: 897px; top: 25px; right: 50px; z-index: 125; left: 409px;\",\"stylesmall\":\"width: 431px; height: 238px; top: 698px; right: 50px; z-index: 120; left: 446px;\"},{\"title\":\"Heat Network Calculator 2021\",\"src\":\"https://hw7.ddns.net/section/hncalc?basic=1\",\"style\":\"width: 1290px; height: 923px; top: 19px; z-index: 135; left: 612px; display: inline;\",\"z-order\":1,\"class\":\"scaledframe\",\"id\":\"calculator2021\",\"laststyle\":\"stylebig\",\"stylebig\":\"width: 1290px; height: 923px; top: 19px; z-index: 135; left: 612px; display: inline;\",\"stylesmall\":\"width: 418px; height: 167px; top: 510px; right: 50px; z-index: 122; left: 46px;\"},{\"title\":\"3D Network\",\"src\":\"https://hw3.ddns.net/index.php?page=3D\",\"style\":\"width: 1525px; height: 923px; top: 27px; right: 50px; z-index: 102; left: 366px; display: inline;\",\"z-order\":1,\"class\":\"ifr\",\"id\":\"3d1\",\"laststyle\":\"stylebig\",\"stylebig\":\"width: 1525px; height: 923px; top: 27px; right: 50px; z-index: 102; left: 366px; display: inline;\",\"stylesmall\":\"width: 364px; height: 177px; top: 584px; right: 50px; z-index: 113; left: 39px;\"},{\"title\":\"Heat Network Calculator 2018\",\"src\":\"http://www.systemdesigner.co.uk/heatnetwork3.php\",\"style\":\"width: 948px; height: 819px; top: 107px; right: 50px; z-index: 129; left: 74px;\",\"z-order\":1,\"class\":\"scaledframe\",\"id\":\"heatnetwork3\",\"laststyle\":\"stylebig\",\"stylebig\":\"width: 948px; height: 819px; top: 107px; right: 50px; z-index: 129; left: 74px;\",\"stylesmall\":\"width: 579px; height: 179px; top: 319px; right: 50px; z-index: 120; left: 46px;\"},{\"title\":\"Heat Network Calculator - 3D Output\",\"src\":\"https://hw3.ddns.net/index.php?page=3D&&startp=heatnetcalc\",\"style\":\"width: 836px; height: 839px; top: 81px; right: 50px; z-index: 138; left: 1046px; display: inline;\",\"z-order\":1,\"class\":\"ifr\",\"id\":\"heatnetwork3d\",\"laststyle\":\"stylebig\",\"stylebig\":\"width: 836px; height: 839px; top: 81px; right: 50px; z-index: 138; left: 1046px; display: inline;\",\"stylesmall\":\"width: 394px; height: 180px; top: 535px; right: 50px; z-index: 132; left: 32px; display: inline;\"}]}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Desktop\",\"subtitle\":\"Heatweb Desktop\",\"body\":\"\"}",
        "payloadType": "json",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "92e9a8ee.3622a8"
            ]
        ]
    },
    {
        "id": "eea52537.8e4428",
        "type": "link in",
        "z": "78c26ef1.61809",
        "name": "",
        "links": [
            "72953705.597f08"
        ],
        "x": 195,
        "y": 240,
        "wires": [
            [
                "be82bcaf.62b3c"
            ]
        ]
    },
    {
        "id": "918b13f2.3a278",
        "type": "function",
        "z": "78c26ef1.61809",
        "name": "desktopremote",
        "func": "\nvar dev = global.get(\"node\");\nvar net = global.get(\"localNetworkId\");\n// var tunnel = global.get(\"readings.\" + net + \".\" + dev + \".system.tunnel.value\") || \"\";\n// var tunnelNR = global.get(\"readings.\" + net + \".\" + dev + \".system.tunnelNR.value\") || \"\";\n\nvar tunnel = \"http://\" + global.get(\"readings.\" + net + \".\" + dev + \".cpu.net_1_ip4.value\") + \":8000\";\nvar tunnelNR = \"http://\" + global.get(\"readings.\" + net + \".\" + dev + \".cpu.net_1_ip4.value\") + \":1880\";\n\n\nvar exptime = new Date().getTime() + (1000 * 60 * 720); \nvar ip = global.get(\"readings.\" + net + \".\" + dev + \".system.ipWan.value\") || \"\";\n\n\nmsg.dsktp = {\n    \"title\": \"R&D Desktop\",\n    \"tunnel\": tunnel,\n    \"expires\": exptime,\n    \"backgroundimage\": \"https://picsum.photos/seed/1640522604503/1800/1000\",\n    \"backgroundimage1\": \"https://bridgesandballoons.com/Images/2017/08/Isle-of-Mull-and-Oban-56.jpg\",\n    \"windows\": [\n        {\n            \"title\": \"Help\",\n            \"description\": \"Help on Heatweb Desktops\",\n            \"group\": \"standard\",\n            \"body\": msg.help,\n            \"stylebig\": \"right: 0px; width: 650px; height: 98vh; top: 0px; background-color: rgb(192 196 199);\",\n            \"stylesmall\": \"right: 50px; width: 600px; height: 300px; top: 50px; background-color: rgb(192 196 199);\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"name\": \"helpf\",\n            \"id\": \"helpf\",\n            \"background-color\": \"rgb(192 196 199)\"\n        }\n    ]\n};\n\n\nvar tit = \"\";\nif (global.get(\"settings.title.value\") && global.get(\"settings.title.value\")!==\"undefined\" && global.get(\"settings.title.value\").trim()!==\"\") {\n    \n    msg.dsktp.title = \"Heatweb Desktop: \" +   global.get(\"settings.title.value\");\n    \n} else {\n    \n   msg.dsktp.title = \"Heatweb Desktop: \" +   global.get(\"nodeName\") || global.get(\"node\"); \n}\n\n\n\nmsg.dsktp.title += \"<br><small>\" +  global.get(\"networkId\") + \" / \" + global.get(\"node\") + \"</small>\"\n//if ( global.get(\"nodeDescription\")) { msg.dsktp.title += \"<small> - \" + global.get(\"nodeDescription\") + \"</small>\"}\nif (ip) { msg.dsktp.title += \" <small><small>\" + ip + \"</small></small>\"}\n\nif (tunnel.indexOf(\"http\")>-1) {\n    \n    var n = global.get(\"localNetworkId\") ;\n        \n        \n     msg.dsktp.windows.push({\n            \"title\": \"Home Page\",\n            \"group\": \"standard\",\n            \"root\": \"tunnel\",\n            \"src\": \"/\",\n            \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; left: 693px;\",\n            \"stylesmall\": \"left: 535px; width: 466px; height: 276px; top: 287px;\",\n            \"class\": \"scaledframe\",\n            \"name\": \"homepagef\",\n            \"id\": \"homepagfe\"\n        });  \n        \n             \n        msg.dsktp.windows.push({\n            \"title\": \"Device List\",\n            \"group\": \"standard\",\n            \"root\": \"tunnel\",\n            \"src\": \"/section/devices?basic=1\",\n            \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; z-index: 99; left: 693px;\",\n            \"stylesmall\": \"left: 535px; width: 466px; height: 276px; top: 287px; z-index: 1\",\n            \"class\": \"scaledframe\",\n            \"name\": \"devf\",\n            \"id\": \"devf\"\n        });    \n        \n    msg.dsktp.windows.push({\n            \"title\": \"System Settings\",\n            \"group\": \"settings\",\n            \"root\": \"tunnel\",\n            \"src\": \"/settings?basic=1\",\n            \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; z-index: 99; left: 693px;\",\n            \"stylesmall\": \"left: 535px; width: 466px; height: 276px; top: 287px; z-index: 1\",\n            \"class\": \"scaledframe\",\n            \"name\": \"setf\",\n            \"id\": \"setf\"\n        });       \n        \n    msg.dsktp.windows.push({\n            \"title\": \"Device Settings\",\n            \"group\": \"settings\",\n            \"root\": \"tunnel\",\n            \"src\": \"/deviceSettings?basic=1\",\n            \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; z-index: 99; left: 693px;\",\n            \"stylesmall\": \"left: 535px; width: 466px; height: 276px; top: 287px; z-index: 1\",\n            \"class\": \"scaledframe\",\n            \"name\": \"dsetf\",\n            \"id\": \"dsetf\"\n        });      \n     \n        \n        msg.dsktp.windows.push({\n            \"title\": \"System Notes\",\n            \"group\": \"settings\",\n            \"description\": \"System Notes\",\n            \"root\": \"tunnel\",\n            \"src\": \"/settings?filter=notes&basic=1\",\n            \"stylebig\": \"right: 50px; width: 1050px; height: 800px; top: 50px; background-color: rgb(222 222 222);\",\n            \"stylesmall\": \"right: 50px; width: 500px; height: 600px; top: 50px; background-color: rgb(222 222 222);\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"name\": \"notesf\",\n            \"id\": \"notesf\",\n            \"background-color\": \"rgb(222 222 222)\"\n        });\n        \n        \n        msg.dsktp.windows.push({\n            \"title\": \"Custom Values\",\n            \"group\": \"settings\",\n            \"description\": \"System variables manually set\",\n            \"root\": \"tunnel\",\n            \"src\": \"/section/sheet?sheet=custom_values&basic=1\",\n            \"stylebig\": \"right: 50px; width: 1050px; height: 800px; top: 50px; background-color: rgb(222 222 222);\",\n            \"stylesmall\": \"right: 50px; width: 500px; height: 600px; top: 50px; background-color: rgb(222 222 222);\",\n            \"z-order\": 1,\n            \"class\": \"scaledframe\",\n            \"name\": \"variablesf\",\n            \"id\": \"variablesf\",\n            \"background-color\": \"rgb(222 222 222)\"\n        });\n        \n        \n        msg.dsktp.windows.push({\n            \"title\": \"Units\",\n            \"group\": \"json\",\n            \"description\": \"System units\",\n            \"root\": \"tunnel\",\n            \"src\": \"/section/jsoneditor?json=units&basic=1\",\n            \"stylebig\": \"right: 50px; width: 1050px; height: 800px; top: 50px; background-color: rgb(222 222 222);\",\n            \"stylesmall\": \"right: 50px; width: 500px; height: 600px; top: 50px; background-color: rgb(222 222 222);\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"name\": \"unitsf\",\n            \"id\": \"unitsf\",\n            \"background-color\": \"rgb(222 222 222)\"\n        });\n        \n        \n        msg.dsktp.windows.push({\n            \"title\": \"People\",\n            \"group\": \"json\",\n            \"description\": \"Contacts\",\n            \"root\": \"tunnel\",\n            \"src\": \"/section/jsoneditor?json=people&basic=1\",\n            \"stylebig\": \"right: 50px; width: 1050px; height: 800px; top: 50px; background-color: rgb(222 222 222);\",\n            \"stylesmall\": \"right: 50px; width: 500px; height: 600px; top: 50px; background-color: rgb(222 222 222);\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"name\": \"peoplef\",\n            \"id\": \"peoplef\",\n            \"background-color\": \"rgb(222 222 222)\"\n        });\n        \n        if (tunnelNR.indexOf(\"http\")>-1) {\n\n                msg.dsktp.windows.push({\n                    \"title\": \"Node-RED Dashboard\",\n                    \"root\": \"tunnelNR\",\n                    \"src\":  \"/ui\",\n                    \"group\": \"nodered\",\n                    \"stylesmall\": \"right: 50px; width: 466px; height: 276px; top: 285px; z-index: 118;\",\n                    \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; z-index: 128; left: 693px;\",\n                    \"z-order\": 1,\n                    \"class\": \"ifr\",\n                    \"name\": \"nrdashboardf\",\n                    \"id\": \"nrdashboardf\"\n                });\n                \n                msg.dsktp.windows.push({\n                    \"title\": \"Node-RED Editor\",\n                    \"group\": \"nodered\",\n                    \"root\": \"tunnelNR\",\n                    \"src\": \"/\",\n                    \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; z-index: 128; left: 693px;\",\n                    \"stylesmall\": \"left: 535px; width: 466px; height: 276px; top: 287px; z-index: 111;\",\n                    \"z-order\": 1,\n                    \"class\": \"ifr\",\n                    \"name\": \"nrf\",\n                    \"id\": \"nrf\"\n                });\n        }\n        \n        \n        if (tunnel.indexOf(\"http\")>-1) {\n            \n            msg.dsktp.windows.push({\n                    \"title\": \"Upload File\",\n                    \"group\": \"nodered\",\n                    \"root\": \"tunnel\",\n                    \"src\":  \"/upload\",\n                    \"stylebig\": \"width: 1160px; height: 826px; top: 44px; right: 50px; z-index: 99; left: 693px;\",\n                    \"stylesmall\": \"left: 535px; width: 466px; height: 400px; top: 287px; z-index: 1\",\n                    \"class\": \"scaledframe\",\n                    \"name\": \"uploadf\",\n                    \"id\": \"uploadf\"\n                });  \n        \n        }\n                \n        \n      \n        if (global.get(\"readings.\"+n+\".\"+dev+\".dat.tF.value\")) {\n        \n            msg.dsktp.windows.push({\n                \"root\": \"tunnel\",\n                \"src\":  \"/dashboard/view?svg=/files/svg/bmshatfr3.svg&show=\" + n + \"//\" + dev + \"//&update=10&network=\" + n + \"&idlist=\" + dev,\n                \"style\": \"background: none; width: 1193px; height: 700px; top: 49px; right: 50px; z-index: 120; left: 663px;\",\n                \"title\": \"Network Guages\",\n                \"group\": \"network_temps\",\n                \"stylebig\": \"background:none; width: 1193px; height: 700px; top: 49px; right: 50px; z-index: 120; left: 663px;\",\n                \"stylesmall\": \"background:none; left: 48px; top: 599px; width: 464px; height: 279px; z-index: 116; display: inline;\",\n                \"z-order\": 1,\n                \"class\": \"ifr\",\n                \"id\": \"bmshatf\"\n            });\n            \n            \n            msg.dsktp.windows.push({\n                \"title\": \"Graph of Network Temperatures\",\n                \"group\": \"network_temps\",\n                \"root\": \"tunnel\",\n                \"src\": \"/graph?show=\" + n + \".\" + dev + \".dat.tR,\" + n + \".\" + dev + \".dat.tF&basic=1\",\n                \"stylesmall\": \"right: 30px; width: 309px; height: 150px; top: 698px; left: 44px; z-index: 111;\",\n                \"stylebig\": \"width: 1356px; height: 662px; top: 11px; right: 50px; z-index: 111; left: 532px;\",\n                \"z-order\": 1,\n                \"class\": \"scaledframe\",\n                \"name\": \"graphbmsf\",\n                \"id\": \"graphbmsf\",\n                \"laststyle\": \"stylebig\"\n            });    \n        \n        }\n        \n    var hashiu=false;\n    var hasch=false;\n    \n    for (var d in global.get(\"readings.\"+n)) {\n        \n        var dt = global.get(\"readings.\"+n+\".\"+d+\".system.deviceType.value\") || \"\";\n        \n        if (dt.toLowerCase().indexOf(\"hiu\")>-1) { \n            \n            hashiu = true;\n            \n            var chstat = parseInt(global.get(\"readings.\"+n+\".\"+d+\".dat.stat.value\") || 0);\n            var svgf = \"singleplatehiu\";\n            if (chstat>-1) { svgf = \"twinplatehiu\"; }\n           \n             msg.dsktp.windows.push({\n                \"title\": (chstat>-1 ? \"Twin\" : \"Single\") + \" Plate HIU - \" + d,\n                \"group\": d,\n                \"root\": \"tunnel\",\n                \"src\": \"/dashboard/view?svg=/files/svg/\" + (chstat>-1 ? \"twinplatehiu\" : \"singleplatehiu\") + \".svg&show=\" + n + \"//\" + d + \"//&update=10&network=\" + n + \"&idlist=\" + d + \"&useSSL=false\",\n                \"stylebig\": \"width: 1193px; height: \" + (chstat>-1 ? \"700\" : \"550\") + \"px; top: 49px; right: 50px; z-index: 120; left: 663px;\",\n                \"stylesmall\": \"left: 48px; top: 599px; width: 464px; height: 279px; z-index: 116; display: inline;\",\n                \"z-order\": 1,\n                \"class\": \"ifr\",\n                \"id\": \"frame\"+ d\n            });\n            \n            \n            msg.dsktp.windows.push({\n                \"title\": \"Graph DHW - \"+d,\n                \"group\": d,\n                \"description\": \"Graph of hot water operation\",\n                \"root\": \"tunnel\",\n                \"src\": \"/graph?show=\" + n + \".\" + d + \".dat.tCo,\" + n + \".\" + d + \".dat.tHoDHW,\" + n + \".\" + d + \".dat.fC,\" + n + \".\" + d + \".settings.setpoint,\" + n + \".\" + d + \".dat.kwHDHW&basic=1\",\n                \"stylesmall\": \"right: 30px; width: 309px; height: 150px; top: 698px; left: 44px; z-index: 111;\",\n                \"stylebig\": \"width: 1356px; height: 662px; top: 11px; right: 50px; z-index: 111; left: 532px;\",\n                \"z-order\": 1,\n                \"class\": \"scaledframe\",\n                \"name\": \"graphdhwf\"+d,\n                \"id\": \"graphdhwf\",\n                \"laststyle\": \"stylebig\"\n            });\n            \n            if (chstat>-1) { \n            \n                hasch = true;\n            \n                msg.dsktp.windows.push({\n                    \"title\": \"Graph CH - \"+d,\n                    \"group\": d,\n                    \"description\": \"Graph of central heating operation\",\n                    \"root\": \"tunnel\",\n                    \"src\": \"/graph?show=\" + n + \".\" + d + \".dat.tCHo,\" + n + \".\" + d + \".dat.tHoCH,\" + n + \".\" + d + \".dat.stat,\" + n + \".\" + d + \".settings.HESupply,\" + n + \".\" + d + \".dat.kwHCH&basic=1\",\n                    \"stylesmall\": \"right: 30px; width: 309px; height: 150px; top: 698px; left: 44px; z-index: 111;\",\n                    \"stylebig\": \"width: 1356px; height: 662px; top: 11px; right: 50px; z-index: 111; left: 532px;\",\n                    \"z-order\": 1,\n                    \"class\": \"scaledframe\",\n                    \"name\": \"graphchf\"+d,\n                    \"id\": \"graphchf\"+d,\n                    \"laststyle\": \"stylebig\"\n                });\n                \n                \n                //msg.dsktp.windows.push();\n                \n            \n            }\n            \n            // break;  // remove if multiple HIUs\n            \n        }\n    }\n\n\n\n    if (hashiu==true) {\n        \n        if (hasch==true) {\n            \n            msg.dsktp.windows.push({\n                \"title\": \"Wiki - The DATA HIU\",\n                \"group\": \"wiki\",\n                \"description\": \"Wiki Page on the DATA HIU\",\n                \"src\": \"https://heatweb.co.uk/w/index.php?title=The_DATA_HIU\",\n                \"stylebig\": \"right: 50px; width: 1050px; height: 800px; top: 50px; \",\n                \"stylesmall\": \"right: 50px; width: 500px; height: 600px; top: 50px; \",\n                \"z-order\": 1,\n                \"class\": \"ifr\",\n                \"name\": \"wikidata\",\n                \"id\": \"wikidata\"\n            });\n            \n            msg.dsktp.windows.push({\n                \"title\": \"Installation - The DATA HIU\",\n                \"group\": \"wiki\",\n                \"description\": \"Installation Instructions on the DATA HIU\",\n                \"src\": \"https://www.heatweb.co.uk/w/images/5/55/TIL_PDF_Binders_Installation_Instructions_D3.pdf\",\n                \"stylebig\": \"right: 56px; width: 450px; height: 700px; top: 90px;\",\n                \"z-order\": 1,\n                \"class\": \"ifr\",\n                \"name\": \"pdfdata\",\n                \"id\": \"pdfdata\"\n            });\n            \n        } else {\n            \n             msg.dsktp.windows.push({\n                \"title\": \"Wiki - The SLIM HIU\",\n                \"group\": \"wiki\",\n                \"description\": \"Wiki Page on the SLIM HIU\",\n                \"src\": \"https://heatweb.co.uk/w/index.php?title=The_SLIM_HIU\",\n                \"stylebig\": \"right: 50px; width: 1050px; height: 800px; top: 50px; \",\n                \"stylesmall\": \"right: 50px; width: 500px; height: 600px; top: 50px; \",\n                \"z-order\": 1,\n                \"class\": \"ifr\",\n                \"name\": \"wikislim\",\n                \"id\": \"wikislim\"\n            });\n            \n             \n            msg.dsktp.windows.push({\n                \"title\": \"Installation - The SLIM HIU\",\n                \"group\": \"wiki\",\n                \"description\": \"Installation Instructions on the SLIM HIU\",\n                \"src\": \"https://www.heatweb.co.uk/w/images/d/d3/SLIM_User_and_Installation_Instructions.pdf\",\n                \"stylebig\": \"right: 56px; width: 450px; height: 700px; top: 90px;\",\n                \"z-order\": 1,\n                \"class\": \"ifr\",\n                \"name\": \"pdfslim\",\n                \"id\": \"pdfslim\"\n            });\n            //http://www.heatweb.co.uk/w/images/d/d3/SLIM_User_and_Installation_Instructions.pdf\n            \n        }\n        \n    }\n\n\n\n\n    \n       \n}\n\n\nvar morew = [\n        {\n            \"title\": \"Single Plate HIU - e00501baf6980c15\",\n            \"src\": msg.payload + \"/dashboard/view?svg=/files/svg/singleplatehiu.svg&show=tilhiusc//e00501baf6980c15//&update=5&network=tilhiusc&idlist=e00501baf6980c15\",\n            \"style\": \"left: 679px; top: 38px; z-index: 106;\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"id\": \"frame1\"\n        },\n        {\n            \"title\": \"Desktop Preferences\",\n            \"style\": \"right: 30px; top: 30px; width: 200px; height: 65px; min-height: 65px; max-height: 65px;\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"id\": \"preferences\",\n            \"body\": \"<span class='changebgimage' title='Change Background'>B</span>\"\n        },\n        \n        {\n            \"title\": \"Temperature Sensors 3\",\n            \"description\": \"Circuit diagram with pressure & temperature sensors\",\n            \"src\": msg.payload + \"/dashboard/view?svg=/files/svg/bmshatfr3.svg&show=KkkCpGTv//IMSI234500021473914/dat/&update=5&network=KkkCpGTv&idlist=IMSI234500021473914\",\n            \"style\": \"left: 688px; top: 45px; background: none;\",\n            \"z-order\": 1,\n            \"class\": \"ifr\",\n            \"id\": \"frame5\"\n        },\n        {\n            \"title\": \"Graph of Heating Operation\",\n            \"description\": \"Circuit diagram with pressure & temperature sensors\",\n            \"src\": msg.payload + \"/graph?show=tilhiusc.e00501baf6980c15.dat.tCHo,tilhiusc.e00501baf6980c15.dat.tHoCH,tilhiusc.e00501baf6980c15.dat.stat,tilhiusc.e00501baf6980c15.settings.HESupply,tilhiusc.e00501baf6980c15.dat.kwHCH,tilhiusc.tilhiusc01.weather.temp_c&basic=1\",\n            \"style\": \"right: 30px; width: 839px; height: 396px; top: 537px; z-index: 115; left: 1024px;\",\n            \"stylesmall\": \"right: 30px; width: 309px; height: 150px; top: 537px; left: 1024px;\",\n            \"stylebig\": \"right: 30px; width: 1500px; height: 700px; top: 50px; right: 50px;\",\n            \"z-order\": 1,\n            \"class\": \"scaledframe\",\n            \"name\": \"graphf\",\n            \"id\": \"graphf\"\n        }\n        \n        \n        ];\n\n\nmsg.payload = {\n    \"title\": \"Desktop\",\n    \"subtitle\": \"Heatweb Remote Desktop\",\n    \"body\": \"\"\n};\n\nmsg.desktop = \"desktopremote\";\n\nglobal.set(\"desktop.desktop1\",msg.dsktp);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "92e9a8ee.3622a8"
            ]
        ]
    },
    {
        "id": "da930b34.7a4ab8",
        "type": "inject",
        "z": "78c26ef1.61809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "73c76140.340b6"
            ]
        ]
    },
    {
        "id": "be82bcaf.62b3c",
        "type": "trigger",
        "z": "78c26ef1.61809",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "db15a9d5.5bbeb8"
            ]
        ]
    },
    {
        "id": "73c76140.340b6",
        "type": "template",
        "z": "78c26ef1.61809",
        "name": "",
        "field": "help",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"help\">\n<p><b>Welcome to Heatweb Desktop</b></p> \n<p>This page has been generated to provide a simple user interface to controllers running <b>node-red-contrib-heatweb</b>.</p>\n<p>For further information please visit the <a target=\"_blank\"  href=\"http://heatweb.co.uk/w/index.php?title=Heatweb_Desktops\">Heatweb Wiki Help</a></p>\n</div>",
        "output": "str",
        "x": 560,
        "y": 340,
        "wires": [
            [
                "918b13f2.3a278"
            ]
        ]
    },
    {
        "id": "1d802351.fc2c1d",
        "type": "inject",
        "z": "78c26ef1.61809",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 210,
        "y": 760,
        "wires": [
            [
                "1db19101.30569f"
            ]
        ]
    },
    {
        "id": "a40f5e18.a99ed",
        "type": "template",
        "z": "78c26ef1.61809",
        "name": "Notes",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<section><script src=\"https://cdn.ckeditor.com/4.15.1/full-all/ckeditor.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n<form method=\"POST\" action=\"/api/settings\" target=\"postframe\"><input type=\"hidden\" name=\"network\" id=\"network\" value=\"local\"><input type=\"hidden\" name=\"node\" id=\"node\" value=\"{{{node}}}\">\n\n<div class=\"form-group\"><textarea name=\"settings.notes\">\n{{{notes}}}\n</textarea>\n<script>\n        var editor = CKEDITOR.replace( \"settings.notes\" );\n        \neditor.on( 'instanceReady', function(event){\n    if(event.editor.getCommand( 'maximize' ).state == CKEDITOR.TRISTATE_OFF);//ckeck if maximize is off\n        event.editor.execCommand( 'maximize');\n});\n        \n</script>\n</div>\n<p align=\"right\"><input  class=\"btn btn-primary\" type=\"submit\"></p>\n</form>\n<iframe display=\"none\" frameborder=\"0\" id=\"postframe\" name=\"postframe\"></iframe></section>\n",
        "output": "str",
        "x": 870,
        "y": 760,
        "wires": [
            [
                "ee55a2af.c6b07"
            ]
        ]
    },
    {
        "id": "ee55a2af.c6b07",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sections.notes",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1121,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7ff1d479.896aac",
        "type": "function",
        "z": "78c26ef1.61809",
        "name": "server",
        "func": "\nvar dev = global.get(\"node\");\nvar net = global.get(\"localNetworkId\");\nmsg.server = global.get(\"readings.\" + net + \".\" + dev + \".system.tunnel.value\") || \"\";\nmsg.node = dev;\n\nmsg.notes = global.get(\"settings.notes.value\") || \"Please enter notes here.\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 760,
        "wires": [
            [
                "fcc88dd5.4c5f5"
            ]
        ]
    },
    {
        "id": "1db19101.30569f",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"title\":\"Notes\",\"subtitle\":\"Notes Editor\",\"body\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 760,
        "wires": [
            [
                "7ff1d479.896aac"
            ]
        ]
    },
    {
        "id": "fcc88dd5.4c5f5",
        "type": "rbe",
        "z": "78c26ef1.61809",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "notes",
        "x": 730,
        "y": 760,
        "wires": [
            [
                "a40f5e18.a99ed"
            ]
        ]
    },
    {
        "id": "f9a55d85.eb77e",
        "type": "inject",
        "z": "78c26ef1.61809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.desktopjson.value",
        "payloadType": "global",
        "x": 810,
        "y": 180,
        "wires": [
            [
                "b7cdcaf8.b41608"
            ]
        ]
    },
    {
        "id": "1851cd5d.ff4353",
        "type": "debug",
        "z": "78c26ef1.61809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 180,
        "wires": []
    },
    {
        "id": "b7cdcaf8.b41608",
        "type": "json",
        "z": "78c26ef1.61809",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "1851cd5d.ff4353",
                "cb9f97a3.b97448"
            ]
        ]
    },
    {
        "id": "94bf54ce.e0ec38",
        "type": "link in",
        "z": "78c26ef1.61809",
        "name": "",
        "links": [
            "cb9f97a3.b97448"
        ],
        "x": 155,
        "y": 540,
        "wires": [
            [
                "cad104b6.6133a8"
            ]
        ]
    },
    {
        "id": "cb9f97a3.b97448",
        "type": "link out",
        "z": "78c26ef1.61809",
        "name": "",
        "links": [
            "94bf54ce.e0ec38"
        ],
        "x": 1195,
        "y": 220,
        "wires": []
    },
    {
        "id": "cad104b6.6133a8",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dsktp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"title\":\"Desktop\",\"subtitle\":\"Heatweb Desktop\",\"body\":\"\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "desktop",
                "pt": "msg",
                "to": "desktop_user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 540,
        "wires": [
            [
                "92e9a8ee.3622a8"
            ]
        ]
    },
    {
        "id": "3f0b2d27.bf9082",
        "type": "inject",
        "z": "78c26ef1.61809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 860,
        "wires": [
            [
                "ac121bda.652e18"
            ]
        ]
    },
    {
        "id": "ac121bda.652e18",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.desktopjson.type",
                "pt": "global",
                "to": "json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a118733.07df49",
        "type": "inject",
        "z": "78c26ef1.61809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "75361da6.f66e74"
            ]
        ]
    },
    {
        "id": "75361da6.f66e74",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "DELETE Custom Desktop ",
        "rules": [
            {
                "t": "delete",
                "p": "settings.desktopjson",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "db15a9d5.5bbeb8",
        "type": "switch",
        "z": "78c26ef1.61809",
        "name": "desktopjson ?",
        "property": "settings.desktopjson.value",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "795d42ea.303f8c"
            ],
            [
                "73c76140.340b6"
            ]
        ]
    },
    {
        "id": "795d42ea.303f8c",
        "type": "change",
        "z": "78c26ef1.61809",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "settings.desktopjson.value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 220,
        "wires": [
            [
                "b7cdcaf8.b41608"
            ]
        ]
    },
    {
        "id": "d9e24a50.2ab778",
        "type": "inject",
        "z": "78c26ef1.61809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 180,
        "wires": [
            [
                "be82bcaf.62b3c"
            ]
        ]
    },
    {
        "id": "6af90896.407f38",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 700,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "562c9c07.d14df4",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "//if (!flow.get(\"selectedhiu\")) { return null; }\n//if (!global.get(\"readings.\" + flow.get(\"selectedhiu\"))) { return null; }\n\n\nvar icongreen = 'http://www.heatweb.co.uk/w/images/thumb/2/2a/Greenled.png/120px-Greenled.png'; \nvar iconred = 'http://www.heatweb.co.uk/w/images/thumb/3/39/Redled.png/120px-Redled.png'; \nvar icongrey = 'https://www.heatweb.co.uk/w/images/7/78/Greyled.png'; \nvar iconyellow = 'https://www.heatweb.co.uk/w/images/thumb/5/59/Yellowled.png/180px-Yellowled.png'; \n                        \nvar htmlt = '';\nvar filt = flow.get(\"filterdata\") || \"\";\n\nvar listout = [];\n\nvar defaultTopics = global.get(\"topics.default\") || {};\nvar datData = defaultTopics[\"dat\"] || {}; \n\nfor (var network in global.get(\"readings\")) { \n\n    for (var device in global.get(\"readings.\"+network)) { \n        \n        var htmlline = \"\";\n        var htmllineCount = 0;\n        var statStateLine = \"\";\n        \n        var hiudata = global.get(\"readings.\" + network + \".\" + device);\n        \n        \n        //flow.set(\"tempid\",hiudata.system.tempid);\n        \n        \n        var dicon=\"\";\n        \n        for (var key in hiudata) {\n            \n            if(key == flow.get(\"selecteddata\") || flow.get(\"selecteddata\")=='all' ) { \n            \n                var groupdata = hiudata[key];\n                \n                var typeData = defaultTopics[key] || {}; \n            \n                for (var gkey in groupdata) {\n                    \n                    var okline=1;\n                    \n                    if (gkey==\"nodeXXX\" || gkey==\"timestamp\") { okline=0; }\n                    \n                    if (key==\"json\")  { okline=0; }\n                    \n                    if (filt!==\"\") {\n                        \n                        var teststr = \" /\" + device + \"/\" + key + \"/\" + gkey + \"/\" + network + \"/\"  ;\n                        \n                        if (key==\"alarm\") {\n                            if(groupdata[gkey].value == 'ok' || groupdata[gkey].value == '0') {\n                                teststr += \"/green\";\n                            } else { \n                                teststr += \"/red\";\n                            }\n                            \n                        }\n                     \n                        \n                        if (teststr.indexOf(filt)<1) { okline=0; }\n                    }\n                    \n                    if (okline==1) {\n                        var icon = \"\";\n                        var iconsrc = \"\";\n                        if (key==\"alarm\") { \n                            \n                            if(groupdata[gkey].value == 'ok' || groupdata[gkey].value == '0') {\n                                \n                                iconsrc = icongreen;\n                            } else if(groupdata[gkey].value == 'off') {\n                                iconsrc = icongrey ; \n                            } else { \n                                iconsrc = iconred ; \n                            }\n                            icon=' <img height=\"12\" src=\"' + iconsrc + '\">'; \n                        }\n                        \n                        var gkeySh = gkey;\n                        //if (gkeySh.length>16) { gkeySh = gkeySh.substr(0,10) + \"..\" + gkeySh.substr(gkeySh.length-4); }\n                        \n                        //mm +=  '<md-button class=\"rounded myB\" ng-click=\"send({payload:' + \"'\" + m[mmm] + \"'\" + '})\">';\n                        \n                        var butts = \"\";\n                        //butts = '</td><td><span id=\"dbut' + key + '\" ng-click=\"send({payload:' + \"'\" + key + \"/\" + gkeySh + \"'\" + '})\">Graph</span>';\n                        \n                        //if (!isNaN(groupdata[gkey].value)) {\n                        var hasH = global.get(\"readingsHistory.\" + network + \".\" + device + \".\" + key + \".\" + gkey) || [];\n                        if (!isNaN(groupdata[gkey].value) && hasH[2]) {\n                            butts += '<td class=\"tdLS\" width=\"70\">';\n                            //butts += '<span class=\"smB\">';\n                            butts +=  '<md-button class=\"rounded myB thinB\" ng-click=\"send({payload:' + \"'\" + network + \".\" + device + \".\" + key + \".\" + gkeySh + \"'\" + '})\">';\n                            butts +=  \"Graph\";\n                            butts +=  '</md-button>';\n                            //butts +=  '</span>';\n                            butts +=  '</td>';\n                        } else {\n                            butts =  '<td class=\"tdLS\" width=\"70\"> </td>';\n                        }\n                        \n                        //htmllineAdd = '<tr><td>' + key + \" / \" + gkeySh + '</td><td align=\"right\">' + groupdata[gkey].value + icon + '</td></tr>';\n                        //htmllineAdd = '<table width=\"100%\"><tr><td>' + key + \" / \" + gkeySh + '</td><td align=\"right\">' + groupdata[gkey].value + icon + '</td><td> </td></tr></table>';\n                        htmllineAdd = '<table width=\"100%\"><tr><td>' + key + \" / \" + gkeySh + '</td><td align=\"right\">' + groupdata[gkey].value + icon  +'</td><td> </td>' + butts + '</tr></table>';\n\n                        htmlline += htmllineAdd\n                        if(key==\"stat\" && gkey==\"state\") { statStateLine = htmllineAdd; }\n                        htmllineCount++;\n                        \n                        \n                        \n                        var gkey2 = gkey.replace(\"Sensor\",\"\");\n                        var keyData = typeData[gkey2] || datData[gkey2] || {};\n                        \n                        var mytitle = keyData[\"title\"] || gkey;\n                        var units = keyData[\"units\"] || \"\";\n                        \n                        if ((gkey.indexOf(\"Sensor\")>0) && (mytitle.indexOf(\"Sensor\")<1)) { \n                            mytitle += \" sensor\"\n                            units = \"\";\n                        }\n                        \n                        if (!typeData[gkey2]) {  units = \"\"; }\n                        \n                        \n                        var moredes = device + \" / \" + key;\n                        \n                        \n                        if (keyData[\"title\"]) { moredes += \" / \" + gkey; }\n                        \n                        //var units = \"\";\n                        var mytopic =  groupdata[gkey].topic; //\"ihiu/\"+node+\"/\"+xx+\"/\"+k+\"/\"+kk;\n                        \n                        var newb={\n                            \"title\": \"<table cellpadding='0' width='100%'><tr><td><b>\" + mytitle + \"</b></td><td align='right'><big>\" + groupdata[gkey].value +  \" \"+ units + \"</big></td></tr></table>\",\n                            \"description\": \"<table cellpadding='0' width='100%'><tr><td>\" + moredes + \"</td><td width='60' align='center'></td></tr></table>\",\n                             \"topic\": mytopic\n                        };\n                        if (iconsrc!==\"\") { newb[\"icon\"] = iconsrc; } //else  { newb[\"icon_name\"] = \"fa-cog\"; }\n                           \n                        listout.push(newb);\n                        \n                    }\n                }\n        \n            }\n        }\n        \n        if(hiudata[\"stat\"]) {\n        if(hiudata[\"stat\"][\"state\"]){\n            if(hiudata[\"stat\"][\"state\"][\"value\"] == 'ok') {\n                dicon=' <img height=\"12\" src=\"' + icongreen + '\">'; \n            } else if(hiudata[\"stat\"][\"state\"][\"value\"] == 'on') {\n                dicon=' <img height=\"12\" src=\"' + icongreen + '\">'; \n            }  else if(hiudata[\"stat\"][\"state\"][\"value\"].indexOf('arning')>0) {\n                dicon=' <img height=\"12\" src=\"' + iconyellow + '\">'; \n            } else if(hiudata[\"stat\"][\"state\"][\"value\"] == 'alarm') {\n                dicon=' <img height=\"12\" src=\"' + iconred + '\">'; \n            } else { \n                dicon=' <img height=\"12\" src=\"' + icongrey + '\">'; \n            }\n            dicon = \"<b>\" + hiudata[\"stat\"][\"state\"][\"value\"] + \"</b>\" + dicon;\n        }\n        }\n        \n        if (htmlline!==\"\") {\n        \n            htmlt +=  '<table width=\"100%\"><tr><td><b>' + device + '</b></td><td align=\"right\">' + dicon + '</td></tr></table>';\n            \n            if(htmllineCount==1 && htmlline.indexOf(\"tat / state\")>0) { }\n            else {\n                \n                if(htmllineCount>1 && statStateLine!==\"\") { htmlline =  htmlline.replace(statStateLine,\"\"); }\n                htmlt +=   htmlline; \n                \n            }\n            \n            htmlt +=  '<hr />';\n        }\n    }\n}\n\nhtmlt = htmlt.replace(/Exchanger/g, \"\");\n\nhtmlt = htmlt.replace(\">st<\", \">State<\");\nhtmlt = htmlt.replace(\">fC<\", \">DHW Flow Rate [l/m]<\");\nhtmlt = htmlt.replace(\">tCo<\", \">DHW Output Temperature [C]<\");\nhtmlt = htmlt.replace(\">tH<\", \">Primary Flow Temp [C]<\");\nhtmlt = htmlt.replace(\">tHoDHW<\", \">Primary Rtn Temp DHW [C]<\");\nhtmlt = htmlt.replace(\">tHoCH<\", \">Primary Rtn Temp CH [C]<\");\nhtmlt = htmlt.replace(\">tHoDHW<\", \">Primary Rtn Temp DHW [C]<\");\nhtmlt = htmlt.replace(\">xDHW<\", \">Valve Position DHW<\");\nhtmlt = htmlt.replace(\">xCH<\", \">Valve Position CH<\");\nhtmlt = htmlt.replace(\">stat<\", \">Room Thermostat<\");\nhtmlt = htmlt.replace(\">dpH<\", \">Primary Diff Pressure [bar]<\");\nhtmlt = htmlt.replace(\">fHDHW<\", \">Primary Flow Rate DHW [l/m]<\");\nhtmlt = htmlt.replace(\">fHCH<\", \">Primary Flow Rate CH [l/m]<\");\nhtmlt = htmlt.replace(\">eT<\", \">Temp Error DHW [C]<\");\n\nhtmlt = htmlt.replace(\">TTdhw<\", \">Setpoint DHW [C]<\");\nhtmlt = htmlt.replace(\">eS<\", \">Error State<\");\nhtmlt = htmlt.replace(\">tCHo<\", \">CH Output Temp [C]<\");\nhtmlt = htmlt.replace(\">pCH<\", \">CH System Pressure [bar]<\");\nhtmlt = htmlt.replace(\">pump<\", \">CH Pump<\");\nhtmlt = htmlt.replace(\">vC<\", \">DHW Volume Total [ltr]<\");\n\n\n\nmsg.payload=htmlt;\n\nmsg2={}; msg2.payload = listout;\n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 700,
        "wires": [
            [
                "d9ed7968.b72af8"
            ],
            [
                "6b5c6225.dcc93c"
            ]
        ]
    },
    {
        "id": "d9ed7968.b72af8",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datalist",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "9e9cdb4c.9f6be8"
            ]
        ]
    },
    {
        "id": "6b5c6225.dcc93c",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 760,
        "wires": []
    },
    {
        "id": "2d561223.d9db6e",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selecteddata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 620,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "6789714f.99829",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filterdata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "drilling",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 780,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "f6a36c6b.c8c3",
        "type": "delay",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "562c9c07.d14df4"
            ]
        ]
    },
    {
        "id": "38cd61a0.1cd1fe",
        "type": "rbe",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1150,
        "y": 580,
        "wires": [
            [
                "d9ed7968.b72af8"
            ]
        ]
    },
    {
        "id": "9e9cdb4c.9f6be8",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "drilling",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1530,
        "y": 620,
        "wires": [
            [
                "282422b2.6aa76e"
            ]
        ]
    },
    {
        "id": "ed5f8555.f418e8",
        "type": "ui_dropdown",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Type",
        "group": "ee34b8ab.222b68",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "All",
                "value": "all",
                "type": "str"
            },
            {
                "label": "Alarms",
                "value": "alarm",
                "type": "str"
            },
            {
                "label": "Readings",
                "value": "dat",
                "type": "str"
            },
            {
                "label": "Statistics",
                "value": "stat",
                "type": "str"
            },
            {
                "label": "Settings",
                "value": "settings",
                "type": "str"
            },
            {
                "label": "System",
                "value": "system",
                "type": "str"
            },
            {
                "label": "Meters",
                "value": "meter",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 540,
        "y": 620,
        "wires": [
            [
                "2d561223.d9db6e"
            ]
        ]
    },
    {
        "id": "2513de4a.a661c2",
        "type": "ui_text_input",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "ee34b8ab.222b68",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 560,
        "y": 780,
        "wires": [
            [
                "6789714f.99829"
            ]
        ]
    },
    {
        "id": "282422b2.6aa76e",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "template",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 620,
        "wires": [
            [
                "193e14fb.d6a80b"
            ]
        ]
    },
    {
        "id": "76bee7.e09ff118",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "drilling",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "ed5f8555.f418e8"
            ]
        ]
    },
    {
        "id": "adfe6cac.8c846",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "setGroup",
        "links": [
            "d18c9773.2bb088"
        ],
        "x": 355,
        "y": 620,
        "wires": [
            [
                "ed5f8555.f418e8"
            ]
        ]
    },
    {
        "id": "ab8cb03b.d70f3",
        "type": "ui_dropdown",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Device",
        "group": "ee34b8ab.222b68",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "All",
                "value": "",
                "type": "str"
            },
            {
                "label": "Alarms",
                "value": "/red",
                "type": "str"
            },
            {
                "label": "State",
                "value": "state",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 560,
        "y": 840,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "504e8408.6f0e6c",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "shuffle",
        "payload": "stat/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 760,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "8a3813c5.ed4c",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "group": "ee34b8ab.222b68",
        "order": 1,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "ALL",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 680,
        "wires": [
            [
                "76bee7.e09ff118",
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "d57b221e.46366",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "name": "alarms",
        "group": "ee34b8ab.222b68",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "warning",
        "payload": "alarm",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 340,
        "y": 720,
        "wires": [
            [
                "ed5f8555.f418e8"
            ]
        ]
    },
    {
        "id": "c988811f.23218",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 3,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "flag",
        "payload": "/system",
        "payloadType": "str",
        "topic": "",
        "x": 353.0833282470703,
        "y": 804.0833435058594,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "9a659cee.6305e",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 4,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-thermometer-half",
        "payload": "dat/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 840,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "8e362fbc.2801",
        "type": "ui_button",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "name": "",
        "group": "8ef017d0.9a0628",
        "order": 5,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-thermometer-half",
        "payload": "settings/",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 880,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "220e2954.01e376",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "setFilter",
        "links": [
            "9b2ec796.e88cf8"
        ],
        "x": 555,
        "y": 720,
        "wires": [
            [
                "2513de4a.a661c2"
            ]
        ]
    },
    {
        "id": "193e14fb.d6a80b",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "43af1847.935fd8",
        "name": "rout",
        "order": 1,
        "width": "12",
        "height": "6",
        "format": "<br><div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1890,
        "y": 620,
        "wires": [
            [
                "d876816a.e2244",
                "68fce0f6.7193f"
            ]
        ]
    },
    {
        "id": "ffc2f769.631ac8",
        "type": "trigger",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 540,
        "y": 920,
        "wires": [
            [
                "ab8cb03b.d70f3"
            ]
        ]
    },
    {
        "id": "d876816a.e2244",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2110,
        "y": 620,
        "wires": []
    },
    {
        "id": "68fce0f6.7193f",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "//msg.payload = \"http://localhost/index.php?page=Graph&height=350&show=\"+msg.payload;\nmsg.payload = \"cmd:graph:\"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1880,
        "y": 720,
        "wires": [
            [
                "ba5f5516.919e68"
            ]
        ]
    },
    {
        "id": "b1160ab2.4def48",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "<br><div ng-bind-html=\"msg.payload\"></div> ",
        "output": "str",
        "x": 1680,
        "y": 680,
        "wires": [
            [
                "193e14fb.d6a80b"
            ]
        ]
    },
    {
        "id": "83178f3c.8e09d",
        "type": "rbe",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 750,
        "y": 980,
        "wires": [
            [
                "ffc2f769.631ac8"
            ]
        ]
    },
    {
        "id": "ba5f5516.919e68",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "906024b7.9e3e48",
            "96558a40.5d4f48"
        ],
        "x": 1975,
        "y": 720,
        "wires": []
    },
    {
        "id": "9c3bb7a5.4d7a58",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "DROPDOWN",
        "func": "msg.options  = [ {\"All\":\"/\"}, {\"Alarms\":\"/red\"} ];\n\nfor (var network in global.get(\"readings\")) { \n\n    var lineout = {};\n    lineout[network.replace(\"_\", \" \")] = \"/\" + network + \"/\";\n    msg.options.push(lineout);\n\n}\n\nfor (network in global.get(\"readings\")) { \n\n    for (var device in global.get(\"readings.\"+network)) { \n\n        lineout = {};\n        lineout[device] = \"/\" + device + \"/\";\n        msg.options.push(lineout);\n    \n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 980,
        "wires": [
            [
                "83178f3c.8e09d"
            ]
        ]
    },
    {
        "id": "e5c3fb8b.944008",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 980,
        "wires": [
            [
                "9c3bb7a5.4d7a58"
            ]
        ]
    },
    {
        "id": "562969d9.1acd48",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "history",
        "func": "var gdat0 = {\"series\":[],\"data\":[]};\n\nvar gtype = msg.payload;\nvar selectedGraph=\",\";\nvar sd = global.get(\"standardGraph\") || \"\";\n\nif (msg.payload.substr(0,6)==\"graph:\") {\n    \n    gtype = \"graphall\";\n    sd = msg.payload.substr(6);\n} \n\n\n\n\n\nfor (var lin in sd.split(\",\")) {\n    \n    var dothis = 1;\n    var ln = sd.split(\",\")[lin];\n    \n    if (gtype!==\"graphall\") {\n        \n        var lns = ln.split(\".\")[3];\n        if(gtype==\"grapht\" && lns.substr(0,1)!=\"t\" && lns.substr(0,1)!=\"T\") { dothis = 0; continue;}\n        else if(gtype==\"graphp\" && lns.substr(0,1)!=\"p\") { dothis = 0; continue;}\n        else if(gtype==\"graphf\" && lns.substr(0,1)!=\"f\") { dothis = 0; continue;}\n        else if(gtype==\"graphkwh\" && lns.substr(0,3)!=\"kwh\") { dothis = 0; continue;}\n        else if(gtype==\"graphkw\" && (lns.substr(0,2)!=\"kw\" || lns.substr(0,3)==\"kwh\")) { dothis = 0; continue;}\n        \n    }\n    \n    if (dothis==1) {\n        \n        selectedGraph += \",\" + ln.split(\".\")[3] + \",\";\n        \n        var dat = global.get(\"readingsHistory.\" + ln) || {};\n        \n        var itemData = [];\n        for (var readin in dat) {\n            \n            itemData.push({\"x\":dat[readin].timestamp, \"y\":dat[readin].value});\n            \n        }\n        \n        gdat0.series.push(ln.split(\".\")[3]);\n        gdat0.data.push(itemData);\n    }\n    \n}\n\nmsg.payload = [];\nmsg.payload.push(gdat0);\n\n\nglobal.set(\"selectedGraph\",selectedGraph);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1980,
        "wires": [
            [
                "10c3f765.254dd9"
            ]
        ]
    },
    {
        "id": "f4f1c704.705e38",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "poweroff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "screenoff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cleargraph",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "graph",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "32b356c.727daaa"
            ],
            [
                "4b53ff20.944ec"
            ],
            [
                "5c85c22a.9dd31c"
            ],
            [
                "23bec7e3.287aa8"
            ],
            [
                "562969d9.1acd48",
                "1fbc21a0.42a4de"
            ]
        ]
    },
    {
        "id": "10c3f765.254dd9",
        "type": "ui_chart",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "group": "31ddf4e3.0519dc",
        "order": 0,
        "width": "12",
        "height": "7",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1030,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "7106c32a.f7fbdc",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 1980,
        "wires": [
            [
                "562969d9.1acd48"
            ]
        ]
    },
    {
        "id": "c797794c.dd6478",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "if((flow.get(\"screenon\")||\"1\")!=\"1\") { flow.set(\"screenon\",\"1\"); return null; }\n\n\nif ((\" \"+msg.payload).indexOf(\"cmd:\")==1) {\n    \n    msg2={};\n    msg2.payload = msg.payload.substr(4);\n    \n    return [null,null,msg2,msg];\n    \n} else if (((\" \"+msg.payload).indexOf(\"http\")==1) || ((\" \"+msg.payload).indexOf(\"dashboard.php\")==1)) {\n    \n    msg2={};\n    msg2.payload = msg.payload;\n    \n    msg.payload = \"Browser\";\n    \n    return [msg,msg2,null,msg];\n    \n} else {\n\n    return [msg,null,null,msg];\n\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 350,
        "y": 1400,
        "wires": [
            [
                "330fb08c.56046"
            ],
            [
                "157ff427.90adac"
            ],
            [
                "66bd8c8e.5bb634",
                "f4f1c704.705e38"
            ],
            [
                "f4a2cb0e.cc71e8",
                "93aa8803.d762d8"
            ]
        ]
    },
    {
        "id": "32b356c.727daaa",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to shut down?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1520,
        "wires": [
            [
                "efbdf53c.f17388"
            ]
        ]
    },
    {
        "id": "4b53ff20.944ec",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to reboot?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1580,
        "wires": [
            [
                "3c8aa46a.228a1c"
            ]
        ]
    },
    {
        "id": "5c85c22a.9dd31c",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "export DISPLAY=:0; sleep 1; xset dpms force off",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 940,
        "y": 1640,
        "wires": [
            [
                "857d0ead.0eefc"
            ],
            [],
            []
        ]
    },
    {
        "id": "23bec7e3.287aa8",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "cleargraph",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1920,
        "wires": [
            [
                "10c3f765.254dd9"
            ]
        ]
    },
    {
        "id": "66c2e225.64a90c",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "7d2dded9.2db22",
            "abe9ca55.20fc08",
            "311e9db6.ba1b82"
        ],
        "x": 535,
        "y": 2100,
        "wires": [
            [
                "808dfefa.ca41b",
                "eb2a6826.ed1f08"
            ]
        ]
    },
    {
        "id": "23c9b825.020758",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 850,
        "y": 1880,
        "wires": [
            [
                "10c3f765.254dd9"
            ]
        ]
    },
    {
        "id": "330fb08c.56046",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "f89813e8.cbd968",
            "27dd3d5e.5e27e2"
        ],
        "x": 575,
        "y": 1360,
        "wires": []
    },
    {
        "id": "157ff427.90adac",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "browser",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>\n    .maxsiz {\n\n    width: 100%; \n    height: 100%;\n\n}\n</style>\n<iframe class=\"maxsiz\" frameborder=\"0\" src=\"{{{payload}}}\"></iframe>",
        "output": "str",
        "x": 620,
        "y": 1400,
        "wires": [
            [
                "8382fe3d.011db"
            ]
        ]
    },
    {
        "id": "66bd8c8e.5bb634",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 1440,
        "wires": []
    },
    {
        "id": "f4a2cb0e.cc71e8",
        "type": "trigger",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "7",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 270,
        "y": 1620,
        "wires": [
            [
                "f0465a90.803e88"
            ]
        ]
    },
    {
        "id": "93aa8803.d762d8",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 290,
        "y": 1580,
        "wires": []
    },
    {
        "id": "96558a40.5d4f48",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "gomenu",
        "links": [
            "ba5f5516.919e68",
            "8bd72823.48ffa8"
        ],
        "x": 195,
        "y": 1400,
        "wires": [
            [
                "c797794c.dd6478"
            ]
        ]
    },
    {
        "id": "efbdf53c.f17388",
        "type": "ui_toast",
        "z": "9ad9f74f.55ef58",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 1520,
        "wires": [
            [
                "203458a8.c15748"
            ]
        ]
    },
    {
        "id": "3c8aa46a.228a1c",
        "type": "ui_toast",
        "z": "9ad9f74f.55ef58",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 1580,
        "wires": [
            [
                "5fd2a71f.e1c788"
            ]
        ]
    },
    {
        "id": "857d0ead.0eefc",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "screenon",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dashboard",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1640,
        "wires": [
            [
                "994bf91b.a564b8"
            ]
        ]
    },
    {
        "id": "8382fe3d.011db",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "e2be1f54.b5e92"
        ],
        "x": 715,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f0465a90.803e88",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "screenon",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "203458a8.c15748",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1150,
        "y": 1520,
        "wires": [
            [
                "5b96ed94.afa714"
            ]
        ]
    },
    {
        "id": "5fd2a71f.e1c788",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1150,
        "y": 1580,
        "wires": [
            [
                "33c0b5f6.2b7a9a"
            ]
        ]
    },
    {
        "id": "5b96ed94.afa714",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "sudo shutdown -h now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1340,
        "y": 1520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "33c0b5f6.2b7a9a",
        "type": "link out",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "b8d3b38a.4c844"
        ],
        "x": 1255,
        "y": 1580,
        "wires": []
    },
    {
        "id": "6b4903b4.fc142c",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "all",
        "x": 560,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "1fbc21a0.42a4de",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Graph",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1900,
        "wires": [
            [
                "6b4903b4.fc142c"
            ]
        ]
    },
    {
        "id": "a004a982.0cc798",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "d": true,
        "group": "ee34b8ab.222b68",
        "name": "Virtual Keyboard",
        "order": 6,
        "width": "4",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "808dfefa.ca41b",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "pass graph",
        "func": "// var inv = msg.payload;\n\n// msg.payload = inv.value;\n\n// if (!inv.topic.split(\"/\")[4]) { return null; }\n\nmsg.topic = msg.topic.split(\"/\")[4];\n\n\nvar selectedGraph = global.get(\"selectedGraph\") || \"\";\n\nif (selectedGraph.indexOf(\",\"+msg.topic+\",\")<1) { return null; }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2100,
        "wires": [
            [
                "10c3f765.254dd9",
                "eb2a6826.ed1f08"
            ]
        ]
    },
    {
        "id": "eb2a6826.ed1f08",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 2200,
        "wires": []
    },
    {
        "id": "ccbb20ec.44a33",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "export DISPLAY=:0; sleep 1; xset dpms force on",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 1280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bf3b2876.73db98",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1280,
        "wires": [
            [
                "ccbb20ec.44a33"
            ]
        ]
    },
    {
        "id": "f8df0f4c.e553c",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 1740,
        "wires": [
            [
                "5c85c22a.9dd31c"
            ]
        ]
    },
    {
        "id": "63f5f1b4.29d7f",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "600",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 1780,
        "wires": [
            [
                "5c85c22a.9dd31c"
            ]
        ]
    },
    {
        "id": "994bf91b.a564b8",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "all",
        "x": 1300,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "ddb3413d.f5131",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "d57b221e.46366"
            ]
        ]
    },
    {
        "id": "b97bc1c0.cb899",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "c982fbb8.1deb38",
        "name": "Clock Toolbar",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": " \n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n            alert(data);\n        });\n    })(scope);\n</script>\n\n<script id=\"titleScript\" type=\"text/javascript\">\n\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nvar instr = \"\";\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    \n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    div[0].style.fontSize = '18px';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.html(d.toLocaleString('en-GB') + (instr||\"\"));\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n    \n    \n}\n\n\n\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1160,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5f220091.bf4cf",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "ca932fda.09d3",
            "c03b2ad5.8e8478"
        ],
        "x": 195,
        "y": 560,
        "wires": [
            [
                "76bee7.e09ff118",
                "2513de4a.a661c2",
                "b0b3904d.3e833"
            ]
        ]
    },
    {
        "id": "43e007fe.38ff38",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b0b3904d.3e833",
        "type": "change",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Readings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "43e007fe.38ff38"
            ]
        ]
    },
    {
        "id": "9a783cd.aa426c",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 80,
        "wires": []
    },
    {
        "id": "8e10d78d.1bb458",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1310,
        "y": 80,
        "wires": [
            [
                "ec484785.877f98"
            ]
        ]
    },
    {
        "id": "ec484785.877f98",
        "type": "exec",
        "z": "9ad9f74f.55ef58",
        "command": "chromium-browser --start-fullscreen --kiosk --incognito --noerrdialogs --disable-translate --no-first-run --fast --fast-start --disable-infobars --disable-features=TranslateUI --disk-cache-dir=/dev/null  --password-store=basic --disable-pinch --overscroll-history-navigation=disabled --disable-features=TouchpadOverscrollHistoryNavigation 'http://localhost:1880/ui'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "chromium-browser",
        "x": 1490,
        "y": 80,
        "wires": [
            [
                "9a783cd.aa426c"
            ],
            [
                "9a783cd.aa426c"
            ],
            []
        ]
    },
    {
        "id": "a6df218d.b650f",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "c982fbb8.1deb38",
        "name": "Fonts",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto\">\n<!--<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Lato\">-->\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 530,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9d2f9b63.8f9228",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n            alert(data);\n        });\n    })(scope);\n</script>\n\n<script id=\"titleScript\" type=\"text/javascript\">\n\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nvar instr = \"\";\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    \n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    div[0].style.fontSize = '18px';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.html(d.toLocaleString() + (instr||\"\"));\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n    \n    \n}\n\n\n\n\n</script>\n",
        "output": "str",
        "x": 960,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "58390734.6e09a8",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 700,
        "y": 280,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "26b0c09f.0e9e2",
        "type": "link in",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "links": [
            "586160b5.d6aa"
        ],
        "x": 195,
        "y": 340,
        "wires": [
            [
                "4afbfbee.74b4d4",
                "444f8e15b3e99d1a"
            ]
        ]
    },
    {
        "id": "8e16bcc.c4a414",
        "type": "switch",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "25",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "50",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "75",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "58390734.6e09a8"
            ],
            [
                "54605462.01740c"
            ],
            [
                "8ea6bdbf.b18c1"
            ],
            [
                "38a7a1a.5f0775e"
            ],
            [
                "9aaea10.1c61d6"
            ]
        ]
    },
    {
        "id": "54605462.01740c",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"15\"><rect x=\"7\" y=\"11\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 320,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "90a5a2d9.4144b",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"15\"><rect x=\"0\" y=\"0\" width=\"5\" height=\"15\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"8\" y=\"5\" width=\"5\" height=\"10\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 920,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8ea6bdbf.b18c1",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"15\"><rect x=\"7\" y=\"11\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"14\" y=\"7\" width=\"5\" height=\"8\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 360,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "38a7a1a.5f0775e",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"20\" height=\"16\"><rect x=\"0\" y=\"12\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"7\" y=\"8\" width=\"5\" height=\"8\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"14\" y=\"4\" width=\"5\" height=\"12\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 400,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "9aaea10.1c61d6",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "field": "icons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<svg width=\"28\" height=\"16\"><rect x=\"0\" y=\"12\" width=\"5\" height=\"4\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"7\" y=\"8\" width=\"5\" height=\"8\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"14\" y=\"4\" width=\"5\" height=\"12\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /><rect x=\"21\" y=\"0\" width=\"5\" height=\"16\" style=\"fill:rgb(222,222,222);stroke-width:0;stroke:rgb(0,0,0)\" /></svg>",
        "output": "str",
        "x": 700,
        "y": 440,
        "wires": [
            [
                "6bdfe8ca.9acdc8"
            ]
        ]
    },
    {
        "id": "4afbfbee.74b4d4",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 400,
        "wires": []
    },
    {
        "id": "4a529116.59c24",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 260,
        "wires": []
    },
    {
        "id": "142dae9.49d4751",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "3d9e45e.bcd50ba",
        "name": "Dashboard stylesheet",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n.invisible {\n    display: none;\n}\n\n.dot {\n    height: 13px;\n    width: 13px;\n    background-color: rgb(52, 58, 52);\n    border-radius: 20%;\n    border: 2px;\n    border-color: rgb(5, 5, 20);\n    display: inline-block;\n}\n\n.maxsiz {\n    position: absolute;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100vh;\n}\n\n/* SCROLL BAR */\n/* width */\n::-webkit-scrollbar {\n  width: 12px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 5px grey; \n  border-radius: 6px;\n}\n \n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #3037e8; \n  border-radius: 6px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #3037e8; \n}\n\n\n.nr-dashboard-theme .nr-dashboard-form {    \n    overflow: hidden;\n    \n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n    \n    max-height: 40px;\n}\n\n.padd {\n    \n    padding: 10px;\n    padding-top: 10px;\n}\n\na {\n    color: #97b1eb;\n    text-decoration: none;\n    font-size: large;\n}\n    \n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n.nr-dashboard-textinput md-input-container .md-input {\n    text-align: right;\n}\n\n\nmd-list-item {\n    min-height: 40px;\n    height: 40px;\n}\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n.nr-dashboard-gauge-titlel {\n    padding-top: 8px;\n}\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n \nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 8px;\n    border: 1px solid var(--color-widget-border);\n    padding-top: 0px;\n}\n \n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 8px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n*/\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n*/\n\n\n/*\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n*/\n\n/*\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n*/\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 200,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6bdfe8ca.9acdc8",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "func": "\nif (msg.payload==-1) { msg.payload = \" \"; } \nelse { msg.payload = \" \" + msg.icons + \"<small> LTE</small> \"; }\n\n\nvar states = global.get(\"states\") || {};\nfor (var d in states) {\n    \n    msg.payload += '&nbsp;<span class=\"dot\" style=\"background-color: ' + states[d][\"colour\"] + ';\"></span>';  \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 300,
        "wires": [
            [
                "b6cf9f0c.00abb",
                "61ada898.7707e8"
            ]
        ]
    },
    {
        "id": "b6cf9f0c.00abb",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "84ad1d4c.e0002",
        "name": "header icons",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        //console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            //console.log('Position 2');\n            //console.dir(data);\n            //alert(data);\n            instr = data;\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1170,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "61ada898.7707e8",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "b77843a6.57d18",
        "name": "header icons",
        "order": 1,
        "width": "6",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        //console.log(scope.msg);\n        scope.$watch('msg.payload', function(data) {\n            //console.log('Position 2');\n            //console.dir(data);\n            //alert(data);\n            instr = data;\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1170,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f8e46140.ea35",
        "type": "ui_template",
        "z": "9ad9f74f.55ef58",
        "group": "e6210b42.32c588",
        "name": "Browser Template",
        "order": 0,
        "width": "12",
        "height": "7",
        "format": "<br>\n<p>To return to this screen from any opened window, drag the screen to the right.</p>\n<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "padd",
        "x": 910,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "1ac2bb60.571305",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "nodeId",
                "v": "node",
                "vt": "global"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 290,
        "y": 1100,
        "wires": [
            [
                "f05a78b8.3b4008"
            ]
        ]
    },
    {
        "id": "b68d58a9.a159e8",
        "type": "template",
        "z": "9ad9f74f.55ef58",
        "name": "Browser Links",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<br>\n<p>To return to this screen from any opened window, drag the screen from left to right.</p>\n<br><br>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshat1.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none\">Temperature Inputs</a>\n<br>\n<p>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatfr.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none\">Flow & Return Temperatures</a> \n&nbsp;\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatfr2.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none&bg=hip-square.png\">Values Only</a>\n&nbsp;\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatfr3.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none&bg=hip-square.png\">Colour</a>\n</p><br>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/bmshatdp.svg&show=local///dat/,local///ntc/,local///stat/&update=5&network=local&idlist={{nodeId}}&zoom=none\">Differential Pressure & Temperatures</a>\n</p><br>\n<a  href=\"http://admin:admin@localhost:8000/dashboard/view?svg=/files/svg/twinplatehiu.svg&show=local//{{hiuId}}//&update=5&network=local&idlist={{hiuId}}&zoom=none\">HIU Dashboard</a>\n</p><br>\n<a  href=\"http://localhost:3000/d/HLgkuSNVk/start?orgId=1&kiosk\">Grafana</a>",
        "output": "str",
        "x": 660,
        "y": 1100,
        "wires": [
            [
                "f8e46140.ea35",
                "c0e2230c.a95e7"
            ]
        ]
    },
    {
        "id": "f05a78b8.3b4008",
        "type": "function",
        "z": "9ad9f74f.55ef58",
        "name": "Find HIU",
        "func": "\nmsg.hiuId=global.get(\"node\");\n\nvar n = global.get(\"localNetworkId\") ;\n    \n    for (var dev in global.get(\"readings.\"+n)) {\n        \n        var dt = global.get(\"readings.\"+n+\".\"+dev+\".system.deviceType.value\") || \"\";\n        \n        if (dt.toLowerCase().indexOf(\"hiu\")>-1) { msg.hiuId = dev;  break;}\n    }\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "b68d58a9.a159e8"
            ]
        ]
    },
    {
        "id": "c0e2230c.a95e7",
        "type": "debug",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1140,
        "wires": []
    },
    {
        "id": "82ce3805.6ac268",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 760,
        "y": 180,
        "wires": [
            [
                "9d2f9b63.8f9228"
            ]
        ]
    },
    {
        "id": "93890c7b.ea7f3",
        "type": "ui_ui_control",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "events": "connect",
        "x": 780,
        "y": 120,
        "wires": [
            [
                "9d2f9b63.8f9228"
            ]
        ]
    },
    {
        "id": "444f8e15b3e99d1a",
        "type": "trigger",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "8e16bcc.c4a414"
            ]
        ]
    },
    {
        "id": "8885dd34240c9d6f",
        "type": "inject",
        "z": "9ad9f74f.55ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-1",
        "payloadType": "num",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "444f8e15b3e99d1a"
            ]
        ]
    },
    {
        "id": "3db3437f.d41e0c",
        "type": "ui_table",
        "z": "16311b21.f27be5",
        "group": "f5804b9b.035d58",
        "name": "",
        "order": 0,
        "width": "12",
        "height": "6",
        "columns": [
            {
                "field": "channel",
                "title": "Channel",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "topicRaw",
                "title": "Raw Topic",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "unitsRaw",
                "title": "Units",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "topic",
                "title": "Topic",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "topicOut",
                "title": "Topic Out",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "titleOut",
                "title": "Title Out",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "units",
                "title": "Units",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 730,
        "y": 260,
        "wires": [
            [
                "755b57c3.0000e8",
                "35b028fe.d342d8",
                "9a8cfb5a.21a8a8",
                "fb86f732.a1f548",
                "5af69e49.55683",
                "29f1172c.7f1b28",
                "e0ea96df.6380c8",
                "de9994d9.5e9688",
                "7e7e39f3.7fec98",
                "79a015f0.e4662c",
                "d9e36cf3.220be",
                "eb647687.e6e488",
                "240912ae.8fc10e",
                "12fedd69d5e37342",
                "f9ef656da5dd7c14",
                "99fec482de94f45e",
                "1469be4c4febd28e",
                "79ac7fc7b82193a8"
            ]
        ]
    },
    {
        "id": "e4109620.d8b148",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "settings",
        "func": "\nmsg.payload = JSON.parse(global.get(\"settings.io.value\") || \"[]\");\n\nflow.set(\"inset\",msg.payload);\n\nflow.set(\"settingsout\",global.get(\"settings.io.value\")||\"[]\")\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 260,
        "wires": [
            [
                "3db3437f.d41e0c"
            ]
        ]
    },
    {
        "id": "b239d0b7.df10c",
        "type": "inject",
        "z": "16311b21.f27be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "e4109620.d8b148"
            ]
        ]
    },
    {
        "id": "8c249f32.3031",
        "type": "inject",
        "z": "16311b21.f27be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "4af9e143.1c48b"
            ]
        ]
    },
    {
        "id": "4af9e143.1c48b",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "factory default",
        "func": "// , \"type\":\"NTC10K-SHORT\", \"titleRaw\":\"Resistance r1\", \"topicRaw\": \"ana/r1\", \"unitsRaw\": \"ohms\", \"topic\": \"ntc/ntc1\", \"topicOut\": \"dat/tF\", \"titleOut\": \"Flow Temperature\", \"units\": \"°C\"\n\nvar io = [\n            {\"channel\":\"RS485\", \"type\":\"RS485-HIU-SLIM\", \"titleRaw\":\"HIU Protocol\", \"topic\": \"\", \"topicOut\": \"\", \"titleOut\": \"\", \"units\": \"\"},\n            {\"channel\":\"ntc1\", \"type\":\"none\"},\n            {\"channel\":\"ntc2\", \"type\":\"none\"},\n            {\"channel\":\"ntc3\", \"type\":\"none\"},\n            {\"channel\":\"ntc4\", \"type\":\"none\"},\n            {\"channel\":\"ntc5\", \"type\":\"none\"},\n            {\"channel\":\"ntc6\", \"type\":\"none\"},\n            {\"channel\":\"ntc7\", \"type\":\"none\"},\n            {\"channel\":\"ntc8\", \"type\":\"none\"},\n            {\"channel\":\"universal1\", \"type\":\"none\"},\n            {\"channel\":\"universal2\", \"type\":\"none\"},\n            {\"channel\":\"universal3\", \"type\":\"none\"},\n            {\"channel\":\"universal4\", \"type\":\"none\"},\n            {\"channel\":\"volt1\", \"type\":\"0-10V\"},\n            {\"channel\":\"volt2\", \"type\":\"0-10V\"},\n            {\"channel\":\"volt3\", \"type\":\"0-10V\"},\n            {\"channel\":\"volt4\", \"type\":\"0-10V\"},\n            {\"channel\":\"pwm1\", \"type\":\"PWM\"},\n            {\"channel\":\"pwm2\", \"type\":\"PWM\"},\n            {\"channel\":\"pwm3\", \"type\":\"PWM\"},\n            {\"channel\":\"pwm4\", \"type\":\"PWM\"}\n         ]\n\n\nglobal.set(\"settings.io.value\",JSON.stringify(io));\nglobal.set(\"settings.io.type\",\"json\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "e4109620.d8b148",
                "b51312615571f249"
            ]
        ]
    },
    {
        "id": "9fc9ebe4.b03058",
        "type": "ui_ui_control",
        "z": "16311b21.f27be5",
        "name": "",
        "events": "all",
        "x": 740,
        "y": 460,
        "wires": [
            [
                "975bf002.0134e"
            ]
        ]
    },
    {
        "id": "b811c82.775ee38",
        "type": "inject",
        "z": "16311b21.f27be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "5f9538fb.33fea8"
            ]
        ]
    },
    {
        "id": "bb359fdb.93492",
        "type": "inject",
        "z": "16311b21.f27be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "str",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "35b028fe.d342d8"
            ]
        ]
    },
    {
        "id": "5918ea1a.937f94",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Reading Topic",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1280,
        "y": 340,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "755b57c3.0000e8",
        "type": "debug",
        "z": "16311b21.f27be5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 40,
        "wires": []
    },
    {
        "id": "2aa4ca11.c6b016",
        "type": "ui_template",
        "z": "16311b21.f27be5",
        "d": true,
        "group": "b2547863.d066a8",
        "name": "Virtual Keyboard",
        "order": 19,
        "width": "1",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', '.', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8e576f09.a9d8",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Output Topic",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topicOut",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1270,
        "y": 400,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "36a02f75.3e391",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Raw Topic",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topicRaw",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1270,
        "y": 280,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "5f9538fb.33fea8",
        "type": "change",
        "z": "16311b21.f27be5",
        "name": "GoTo List",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IO_Setup_Table_of_Inputs_&_Outputs\"],\"hide\":[\"IO_Setup_IO_Settings\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "9fc9ebe4.b03058",
                "e4109620.d8b148"
            ]
        ]
    },
    {
        "id": "35b028fe.d342d8",
        "type": "change",
        "z": "16311b21.f27be5",
        "name": "GoTo Settings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"IO_Setup_Table_of_Inputs_&_Outputs\"],\"show\":[\"IO_Setup_IO_Settings\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 420,
        "wires": [
            [
                "9fc9ebe4.b03058"
            ]
        ]
    },
    {
        "id": "4a95b394.269cec",
        "type": "ui_dropdown",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Type",
        "tooltip": "",
        "place": "Select option",
        "group": "b2547863.d066a8",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "NTC10K-SHORT",
                "type": "str"
            },
            {
                "label": "",
                "value": "NTC10K-REGIN",
                "type": "str"
            },
            {
                "label": "Volt-Free (Dry Contact)",
                "value": "DRY",
                "type": "str"
            },
            {
                "label": "",
                "value": "PULSE",
                "type": "str"
            },
            {
                "label": "SLIM HIU RS485",
                "value": "RS485-HIU-SLIM",
                "type": "str"
            },
            {
                "label": "DATA HIU RS485",
                "value": "RS485-HIU-DATA",
                "type": "str"
            },
            {
                "label": "0-10V",
                "value": "0-10V",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "type",
        "topicType": "str",
        "className": "",
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "fb86f732.a1f548",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload = msg.payload.units || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "cdd40da6.bbb97"
            ]
        ]
    },
    {
        "id": "cdd40da6.bbb97",
        "type": "ui_dropdown",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Units Out",
        "tooltip": "",
        "place": "Select option",
        "group": "b2547863.d066a8",
        "order": 9,
        "width": "4",
        "height": "2",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "none",
                "value": "",
                "type": "str"
            },
            {
                "label": "°C",
                "value": "°C",
                "type": "str"
            },
            {
                "label": "",
                "value": "bar",
                "type": "str"
            },
            {
                "label": "",
                "value": "kPa",
                "type": "str"
            },
            {
                "label": "",
                "value": "ohms",
                "type": "str"
            },
            {
                "label": "",
                "value": "volts",
                "type": "str"
            },
            {
                "label": "",
                "value": "ltr/min",
                "type": "str"
            },
            {
                "label": "",
                "value": "m3/h",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "units",
        "topicType": "str",
        "className": "",
        "x": 1260,
        "y": 580,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "9a8cfb5a.21a8a8",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.unitsRaw || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "ec194376.9722c"
            ]
        ]
    },
    {
        "id": "ec194376.9722c",
        "type": "ui_dropdown",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Raw Units",
        "tooltip": "",
        "place": "Select option",
        "group": "b2547863.d066a8",
        "order": 5,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "none",
                "value": "",
                "type": "str"
            },
            {
                "label": "",
                "value": "°C",
                "type": "str"
            },
            {
                "label": "",
                "value": "bar",
                "type": "str"
            },
            {
                "label": "",
                "value": "kPa",
                "type": "str"
            },
            {
                "label": "",
                "value": "ohms",
                "type": "str"
            },
            {
                "label": "",
                "value": "volts",
                "type": "str"
            },
            {
                "label": "",
                "value": "pps",
                "type": "str"
            },
            {
                "label": "",
                "value": "ppm",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "unitsRaw",
        "topicType": "str",
        "className": "",
        "x": 1270,
        "y": 460,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "640b823a.9ae1fc",
        "type": "ui_text",
        "z": "16311b21.f27be5",
        "group": "b2547863.d066a8",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Channel",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1260,
        "y": 160,
        "wires": []
    },
    {
        "id": "5af69e49.55683",
        "type": "change",
        "z": "16311b21.f27be5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.channel",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "640b823a.9ae1fc"
            ]
        ]
    },
    {
        "id": "a510db0b.e26068",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Reading Title",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 7,
        "width": "5",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "title",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1270,
        "y": 700,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "9368a5e2.6694c8",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Output Title",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 11,
        "width": "5",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "titleOut",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1270,
        "y": 760,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "3e2de44c.b466bc",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Raw Title",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 4,
        "width": "5",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "titleRaw",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1260,
        "y": 640,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "cb35e7d.4960818",
        "type": "ui_button",
        "z": "16311b21.f27be5",
        "name": "",
        "group": "b2547863.d066a8",
        "order": 20,
        "width": "7",
        "height": "1",
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 580,
        "wires": [
            [
                "5f9538fb.33fea8",
                "74452080.263ed"
            ]
        ]
    },
    {
        "id": "9fd23441.968b88",
        "type": "ui_button",
        "z": "16311b21.f27be5",
        "name": "",
        "group": "b2547863.d066a8",
        "order": 17,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 320,
        "y": 520,
        "wires": [
            [
                "5f9538fb.33fea8"
            ]
        ]
    },
    {
        "id": "a62ba32.3a61b6",
        "type": "ui_button",
        "z": "16311b21.f27be5",
        "name": "",
        "group": "b2547863.d066a8",
        "order": 18,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 660,
        "wires": [
            [
                "7f1c6414.0f170c"
            ]
        ]
    },
    {
        "id": "29f1172c.7f1b28",
        "type": "change",
        "z": "16311b21.f27be5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "outset",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7f1c6414.0f170c",
        "type": "change",
        "z": "16311b21.f27be5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "last",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 660,
        "wires": [
            [
                "fb86f732.a1f548",
                "5af69e49.55683",
                "e0ea96df.6380c8",
                "de9994d9.5e9688",
                "7e7e39f3.7fec98",
                "d9e36cf3.220be",
                "eb647687.e6e488",
                "79a015f0.e4662c",
                "240912ae.8fc10e",
                "12fedd69d5e37342",
                "f9ef656da5dd7c14",
                "99fec482de94f45e",
                "1469be4c4febd28e",
                "79ac7fc7b82193a8"
            ]
        ]
    },
    {
        "id": "e0ea96df.6380c8",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.topicRaw || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "36a02f75.3e391"
            ]
        ]
    },
    {
        "id": "de9994d9.5e9688",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.topic || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "5918ea1a.937f94"
            ]
        ]
    },
    {
        "id": "7e7e39f3.7fec98",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.topicOut || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 400,
        "wires": [
            [
                "8e576f09.a9d8"
            ]
        ]
    },
    {
        "id": "79a015f0.e4662c",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.titleRaw || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 640,
        "wires": [
            [
                "3e2de44c.b466bc"
            ]
        ]
    },
    {
        "id": "d9e36cf3.220be",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.title || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 700,
        "wires": [
            [
                "a510db0b.e26068"
            ]
        ]
    },
    {
        "id": "eb647687.e6e488",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.titleOut || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 760,
        "wires": [
            [
                "9368a5e2.6694c8"
            ]
        ]
    },
    {
        "id": "240912ae.8fc10e",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.type || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 220,
        "wires": [
            [
                "4a95b394.269cec"
            ]
        ]
    },
    {
        "id": "bf6d7759.6b0fd8",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "\nflow.set(\"outset.\" + msg.topic,msg.payload);\n\n\nvar oot = [];\n\n//var r = JSON.parse(global.get(\"settings.io.value\") || \"[]\");\nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==flow.get(\"outset.channel\")) {\n        \n        oot.push(flow.get(\"outset\"));\n        \n    } else {  oot.push(r[rr]);  }\n}\n\nmsg.payload = JSON.stringify(oot);\nmsg.topic = \"set/io\";\n\nflow.set(\"settingsout\",msg.payload);\n\n//msg.payload = JSON.stringify(flow.get(\"outset\"));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 420,
        "wires": [
            [
                "4449d0c6.edd3f"
            ]
        ]
    },
    {
        "id": "4449d0c6.edd3f",
        "type": "debug",
        "z": "16311b21.f27be5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 480,
        "wires": []
    },
    {
        "id": "4383d483.c5616c",
        "type": "link out",
        "z": "16311b21.f27be5",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 635,
        "y": 600,
        "wires": []
    },
    {
        "id": "74452080.263ed",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "SAVE",
        "func": "\nglobal.set(\"settings.io.value\",flow.get(\"settingsout\"));\n\nmsg.topic = \"set/ioSetAt\";\nmsg.payload = new Date().getTime();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 600,
        "wires": [
            [
                "4383d483.c5616c"
            ]
        ]
    },
    {
        "id": "975bf002.0134e",
        "type": "switch",
        "z": "16311b21.f27be5",
        "name": "IO Setup",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IO Setup",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 500,
        "wires": [
            [
                "5f9538fb.33fea8"
            ]
        ]
    },
    {
        "id": "1b76657ccc4f50f8",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "in 1",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 13,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": "3000",
        "topic": "a1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 900,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "4df9db07ee3469e4",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "in 2",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 14,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": "3000",
        "topic": "a2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 960,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "8cfd27902fe0a226",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "out 1",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 15,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "b1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 1040,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "f603fede7f9ec05e",
        "type": "ui_text_input",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "out 2",
        "tooltip": "",
        "group": "b2547863.d066a8",
        "order": 16,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "b2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1250,
        "y": 1100,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "12fedd69d5e37342",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.a1 || 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 900,
        "wires": [
            [
                "1b76657ccc4f50f8"
            ]
        ]
    },
    {
        "id": "f9ef656da5dd7c14",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.a2 || 10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 960,
        "wires": [
            [
                "4df9db07ee3469e4"
            ]
        ]
    },
    {
        "id": "99fec482de94f45e",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.b1 || 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1040,
        "wires": [
            [
                "8cfd27902fe0a226"
            ]
        ]
    },
    {
        "id": "1469be4c4febd28e",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.b2 || 100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1100,
        "wires": [
            [
                "f603fede7f9ec05e"
            ]
        ]
    },
    {
        "id": "79ac7fc7b82193a8",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "",
        "func": "msg.payload =  msg.payload.map || \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 820,
        "wires": [
            [
                "0c7d897632014f70"
            ]
        ]
    },
    {
        "id": "0c7d897632014f70",
        "type": "ui_dropdown",
        "z": "16311b21.f27be5",
        "name": "",
        "label": "Mapping",
        "tooltip": "",
        "place": "Select option",
        "group": "b2547863.d066a8",
        "order": 12,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Map values",
                "value": "1",
                "type": "str"
            },
            {
                "label": "No mapping",
                "value": "0",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "map",
        "topicType": "str",
        "className": "",
        "x": 1260,
        "y": 820,
        "wires": [
            [
                "bf6d7759.6b0fd8"
            ]
        ]
    },
    {
        "id": "7c4ea2d3ee2ce3ae",
        "type": "inject",
        "z": "16311b21.f27be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "4ab513e561e6f7ac"
            ]
        ]
    },
    {
        "id": "c7c3bbe3c8fd890c",
        "type": "link out",
        "z": "16311b21.f27be5",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 675,
        "y": 120,
        "wires": []
    },
    {
        "id": "b51312615571f249",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "SAVE",
        "func": "msg.topic = \"set/ioSetAt\";\nmsg.payload = new Date().getTime();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "c7c3bbe3c8fd890c"
            ]
        ]
    },
    {
        "id": "4ab513e561e6f7ac",
        "type": "function",
        "z": "16311b21.f27be5",
        "name": "testing",
        "func": "// , \"type\":\"NTC10K-SHORT\", \"titleRaw\":\"Resistance r1\", \"topicRaw\": \"ana/r1\", \"unitsRaw\": \"ohms\", \"topic\": \"ntc/ntc1\", \"topicOut\": \"dat/tF\", \"titleOut\": \"Flow Temperature\", \"units\": \"°C\"\n\nvar io = [\n            {\"channel\":\"RS485\", \"type\":\"RS485-HIU-SLIM\", \"titleRaw\":\"HIU Protocol\", \"topic\": \"\", \"topicOut\": \"\", \"titleOut\": \"\", \"units\": \"\"},\n            {\"channel\":\"ntc1\", \"type\":\"NTC10K-SHORT\", \"titleRaw\":\"Resistance r1\", \"topicRaw\": \"\", \"unitsRaw\": \"ohms\", \"topic\": \"\", \"topicOut\": \"dat/tF\", \"titleOut\": \"Flow Temperature\", \"units\": \"°C\"},\n            {\"channel\":\"ntc2\", \"type\":\"NTC10K-SHORT\", \"titleRaw\":\"Resistance r2\", \"topicRaw\": \"\", \"unitsRaw\": \"ohms\", \"topic\": \"\", \"topicOut\": \"dat/tR\", \"titleOut\": \"Return Temperature\", \"units\": \"°C\"},\n            {\"channel\":\"ntc3\", \"type\":\"none\"},\n            {\"channel\":\"ntc4\", \"type\":\"none\"},\n            {\"channel\":\"ntc5\", \"type\":\"none\"},\n            {\"channel\":\"ntc6\", \"type\":\"none\"},\n            {\"channel\":\"ntc7\", \"type\":\"none\"},\n            {\"channel\":\"ntc8\", \"type\":\"none\"},\n            {\"channel\":\"universal1\", \"type\":\"none\"},\n            {\"channel\":\"universal2\", \"type\":\"none\"},\n            {\"channel\":\"universal3\", \"type\":\"none\"},\n            {\"channel\":\"universal4\", \"type\":\"none\"},\n            {\"channel\":\"volt1\", \"type\":\"0-10V\"},\n            {\"channel\":\"volt2\", \"type\":\"0-10V\"},\n            {\"channel\":\"volt3\", \"type\":\"0-10V\"},\n            {\"channel\":\"volt4\", \"type\":\"0-10V\"},\n            {\"channel\":\"pwm1\", \"type\":\"PWM\"},\n            {\"channel\":\"pwm2\", \"type\":\"PWM\"},\n            {\"channel\":\"pwm3\", \"type\":\"PWM\"},\n            {\"channel\":\"pwm4\", \"type\":\"PWM\"}\n         ]\n\n\nglobal.set(\"settings.io.value\",JSON.stringify(io));\nglobal.set(\"settings.io.type\",\"json\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "b51312615571f249",
                "e4109620.d8b148"
            ]
        ]
    },
    {
        "id": "7c829d7d.a1b0d4",
        "type": "exec",
        "z": "e5ac7e17.ed588",
        "command": "sudo dhclient -v usb0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 160,
        "wires": [
            [
                "2020bed1.ef28c2"
            ],
            [
                "2020bed1.ef28c2"
            ],
            []
        ]
    },
    {
        "id": "3425a325.68318c",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "7c829d7d.a1b0d4"
            ]
        ]
    },
    {
        "id": "2020bed1.ef28c2",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "711f170f.8cef58",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "dfe3c7f5.c38f38"
            ]
        ]
    },
    {
        "id": "dfe3c7f5.c38f38",
        "type": "exec",
        "z": "e5ac7e17.ed588",
        "command": "ifconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 280,
        "wires": [
            [
                "fef5f601.f7bb18"
            ],
            [
                "c39bc090.e6d6c"
            ],
            []
        ]
    },
    {
        "id": "c39bc090.e6d6c",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 280,
        "wires": []
    },
    {
        "id": "fef5f601.f7bb18",
        "type": "split",
        "z": "e5ac7e17.ed588",
        "name": "",
        "splt": "\\n\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "c39bc090.e6d6c",
                "574a1267.9ccf1c"
            ]
        ]
    },
    {
        "id": "c9499f5f.d85b3",
        "type": "serial in",
        "z": "e5ac7e17.ed588",
        "name": "",
        "serial": "60681d0e.666ce4",
        "x": 290,
        "y": 440,
        "wires": [
            [
                "eb38fb75.d900c8",
                "276b1aaf.4e33f6",
                "6b2fcfe9.0d2cf"
            ]
        ]
    },
    {
        "id": "5b6733fd.18f01c",
        "type": "serial out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "serial": "60681d0e.666ce4",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "eb38fb75.d900c8",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 500,
        "wires": []
    },
    {
        "id": "71185256.8f9a5c",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AT",
        "payloadType": "str",
        "x": 270,
        "y": 560,
        "wires": [
            [
                "79181ca1.67bf74"
            ]
        ]
    },
    {
        "id": "79181ca1.67bf74",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CSQ",
        "func": "msg.payload = \"AT+CSQ\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "fd05929f.24d11"
            ]
        ]
    },
    {
        "id": "d6df67c8.e171c8",
        "type": "ui_text_input",
        "z": "e5ac7e17.ed588",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "b77843a6.57d18",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": "500",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 880,
        "y": 820,
        "wires": [
            [
                "12fb6206.18b35e"
            ]
        ]
    },
    {
        "id": "9faddde6.032a5",
        "type": "ui_template",
        "z": "e5ac7e17.ed588",
        "group": "b77843a6.57d18",
        "name": "Virtual Keyboard",
        "order": 2,
        "width": "6",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "1bd1f4f4.b0984b",
        "type": "ui_text",
        "z": "e5ac7e17.ed588",
        "group": "b77843a6.57d18",
        "order": 6,
        "width": "12",
        "height": "1",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 650,
        "y": 360,
        "wires": []
    },
    {
        "id": "3263a6d1.18868a",
        "type": "ui_button",
        "z": "e5ac7e17.ed588",
        "name": "",
        "group": "b77843a6.57d18",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "atcmd",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "438f8baad725f8ae"
            ]
        ]
    },
    {
        "id": "12fb6206.18b35e",
        "type": "change",
        "z": "e5ac7e17.ed588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "atcmd",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f1838977.023508",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "r n",
        "func": "msg.payload = msg.payload + \"\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 760,
        "wires": [
            [
                "fd05929f.24d11"
            ]
        ]
    },
    {
        "id": "920f422e.d105a",
        "type": "ui_dropdown",
        "z": "e5ac7e17.ed588",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b77843a6.57d18",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Hello",
                "value": "AT",
                "type": "str"
            },
            {
                "label": "OK?",
                "value": "AT+CPSI?",
                "type": "str"
            },
            {
                "label": "Activate Modem",
                "value": "AT+CUSBPIDSWITCH=9011,1,1",
                "type": "str"
            },
            {
                "label": "Modem Setup",
                "value": "INSTALL",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 780,
        "y": 880,
        "wires": [
            [
                "d6df67c8.e171c8"
            ]
        ]
    },
    {
        "id": "276b1aaf.4e33f6",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "1bd1f4f4.b0984b"
            ]
        ]
    },
    {
        "id": "574a1267.9ccf1c",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "",
        "func": "\nvar iface = msg.payload.split(\":\")[0]\n\nif (iface !== \"usb0\") { return null; }\n\nvar lines = msg.payload.split(\"\\n\");\n\nvar direc,ltype;\n\nvar oot = [];\n\nvar megabytesTotal = 0\n\n\n\nfor (var l in lines) {\n    \n    direct=\"\";\n    ltype=\"\";\n    var ootl = {};\n     \n    lines[l]=lines[l].trim(); \n     \n    if (lines[l].indexOf(\"RX\")>-1) { direc = \"RX\"; }\n    else if (lines[l].indexOf(\"TX\")>-1) { direc = \"TX\"; }\n    \n    if (direc==\"\") { continue; }\n    \n    if (lines[l].indexOf(\"bytes\")>-1) { \n        \n        ltype = \"megabytes\"; \n        ootl.payload = parseFloat(lines[l].split(\"bytes \")[1].split(\" \")[0]) / 1000000;\n        megabytesTotal = megabytesTotal + ootl.payload;\n        \n    }\n    else if (lines[l].indexOf(\"errors\")>-1) { \n        \n        ltype = \"errors\"; \n        ootl.payload = parseFloat(lines[l].split(\"errors \")[1].split(\" \")[0]);\n    }\n    \n    if (ltype==\"\") { continue; }\n    \n   \n    ootl.topic = \"modem/\" + ltype + direc;\n    oot.push(ootl);\n    \n    \n}\n\noot.push({\"topic\":\"modem/megabytesTotal\", \"payload\":megabytesTotal});\n\nvar megabytesPM = parseInt(1000000 * (megabytesTotal - (flow.get(\"mblast\") || megabytesTotal))) / 1000000;\nflow.set(\"mblast\",megabytesTotal);\noot.push({\"topic\":\"modem/megabytesPM\", \"payload\":megabytesPM});\noot.push({\"topic\":\"modem/kbps\", \"payload\":parseInt(1000000 * megabytesPM / 60)/1000});\n\nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            [
                "9363a59.3ae2c58"
            ]
        ]
    },
    {
        "id": "6b5c1997.01a7f8",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 360,
        "wires": []
    },
    {
        "id": "9363a59.3ae2c58",
        "type": "split",
        "z": "e5ac7e17.ed588",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 920,
        "y": 320,
        "wires": [
            [
                "bd76ea25.e00358"
            ]
        ]
    },
    {
        "id": "bd76ea25.e00358",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "",
        "func": "msg = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "6b5c1997.01a7f8",
                "d30d586c.915748",
                "df90a3fe.e3591"
            ]
        ]
    },
    {
        "id": "d30d586c.915748",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1195,
        "y": 300,
        "wires": []
    },
    {
        "id": "6b2fcfe9.0d2cf",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "",
        "func": "\nflow.set(\"lastUSBin\", new Date().getTime());\n\nvar oot = [];\n\nif (msg.payload.indexOf(\"AT+CIMI\")>-1) {\n    \n    //msg.topic = \"modem/simIMSI\";\n    //msg.payload = msg.payload.split(\"AT+CIMI\")[1].split(\"\\n\")[1].trim();\n    oot.push({\"topic\":\"modem/simIMSI\", \"payload\":msg.payload.split(\"AT+CIMI\")[1].split(\"\\n\")[1].trim()});\n}\n\nelse if (msg.payload.indexOf(\"+CPSI:\")>-1) {\n    \n    //<System Mode>,<Operation Mode>,<MCC>-<MNC>,<TAC>,\n    //<SCellID>,<PCellID>,<Frequency Band>,<earfcn>,<dlbw>,\n    //<ulbw>,<RSRQ>,<RSRP>,<RSSI>,<RSSNR>\n    \n    if (msg.payload.indexOf(\"LTE\")>-1) {\n        \n        flow.set(\"online\",\"1\");\n        \n        var flds = msg.payload.split(\"CPSI:\")[1].trim().split(\",\");\n        \n        oot.push({\"topic\":\"modem/sysMode\", \"payload\":flds[0]});\n        oot.push({\"topic\":\"modem/opMode\", \"payload\":flds[1]});\n        oot.push({\"topic\":\"modem/MCC-MNC\", \"payload\":flds[2]});\n        oot.push({\"topic\":\"modem/TAC\", \"payload\":flds[3]});\n        oot.push({\"topic\":\"modem/SCellID\", \"payload\":flds[4]});\n        oot.push({\"topic\":\"modem/PCellID\", \"payload\":flds[5]});\n        oot.push({\"topic\":\"modem/frqBand\", \"payload\":flds[6]});\n        oot.push({\"topic\":\"modem/earfcn\", \"payload\":flds[7]});\n        oot.push({\"topic\":\"modem/dlbw\", \"payload\":flds[8]});\n        oot.push({\"topic\":\"modem/ulbw\", \"payload\":flds[9]});\n        oot.push({\"topic\":\"modem/RSRQ\", \"payload\":flds[10]});\n        oot.push({\"topic\":\"modem/RSRP\", \"payload\":parseInt(flds[11])/10});\n        oot.push({\"topic\":\"modem/RSSI\", \"payload\":flds[12]});\n        oot.push({\"topic\":\"modem/RSSNR\", \"payload\":flds[13].split(\"\\r\")[0]});\n        \n        var xpSignal = parseInt(140 + (parseInt(flds[11])/10));\n        \n        oot.push({\"topic\":\"system/signalGSM\", \"payload\":xpSignal});\n        \n        \n    }\n    else { flow.set(\"online\",\"0\"); }\n}\n\nif (oot.length<1) { return null; }\n\nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 440,
        "wires": [
            [
                "175a4b92.2d7184",
                "9363a59.3ae2c58"
            ]
        ]
    },
    {
        "id": "175a4b92.2d7184",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 440,
        "wires": []
    },
    {
        "id": "96f3e3e8.d29b9",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "23",
        "topic": "",
        "payload": "AT",
        "payloadType": "str",
        "x": 270,
        "y": 620,
        "wires": [
            [
                "916ca55c.5a6138"
            ]
        ]
    },
    {
        "id": "916ca55c.5a6138",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CIMI",
        "func": "msg.payload = \"AT+CIMI\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 620,
        "wires": [
            [
                "fd05929f.24d11"
            ]
        ]
    },
    {
        "id": "24ebaea5.b9caa2",
        "type": "link in",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "af6ed0a2.3108e",
            "57951fb3.4ee4"
        ],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "d97ffd0b.16ce8"
            ]
        ]
    },
    {
        "id": "d97ffd0b.16ce8",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CRESET",
        "func": "msg.payload = \"AT+CRESET\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "fd05929f.24d11"
            ]
        ]
    },
    {
        "id": "5fa614ad.04f2ac",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "56",
        "topic": "",
        "payload": "AT",
        "payloadType": "str",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "4f7fe9ee.c25d78"
            ]
        ]
    },
    {
        "id": "4f7fe9ee.c25d78",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CPSI?",
        "func": "msg.payload = \"AT+CPSI?\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "79c6ddc0b15b8fda"
            ]
        ]
    },
    {
        "id": "fd05929f.24d11",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 840,
        "y": 620,
        "wires": [
            [
                "5b6733fd.18f01c",
                "22f2dfa512ad2292"
            ]
        ]
    },
    {
        "id": "df90a3fe.e3591",
        "type": "switch",
        "z": "e5ac7e17.ed588",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "signalGSM",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "kbps",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "586160b5.d6aa",
                "1d6e8e74.a04832"
            ],
            [
                "1d6e8e74.a04832"
            ]
        ]
    },
    {
        "id": "586160b5.d6aa",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "9189a361.6d051",
            "26b0c09f.0e9e2"
        ],
        "x": 1215,
        "y": 160,
        "wires": []
    },
    {
        "id": "1d6e8e74.a04832",
        "type": "ui_chart",
        "z": "e5ac7e17.ed588",
        "name": "",
        "group": "b77843a6.57d18",
        "order": 7,
        "width": "12",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#e91c1c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f4b3803ef5437f68",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CUSBPIDSWITCH=9011,1,1",
        "func": "flow.set(\"pleasewait\",\"0\");\nmsg.payload = \"AT+CUSBPIDSWITCH=9011,1,1\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1420,
        "wires": [
            [
                "caf7800a27331e05"
            ]
        ]
    },
    {
        "id": "21ea23703486a270",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1500,
        "wires": [
            [
                "76fd3a5a4487ac35"
            ]
        ]
    },
    {
        "id": "caf7800a27331e05",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "mode": "link",
        "links": [
            "7235b73df778d84e",
            "39f3596dbd265d3c",
            "605f3ea78619baa5"
        ],
        "x": 1115,
        "y": 1260,
        "wires": []
    },
    {
        "id": "cdd7e22c8b5c62a8",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "52ec6736dba708e9"
            ]
        ]
    },
    {
        "id": "22b53b86b8311f25",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "4f5eb4d14c8ddd17",
                "35e63d3ae8f16a98"
            ]
        ]
    },
    {
        "id": "4f5eb4d14c8ddd17",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CGDCONT=1,\"IPV4V6\",\"wlapn.com\"",
        "func": "flow.set(\"pleasewait\",\"1\");\nmsg.payload = 'AT+CGDCONT=1,\"IPV4V6\",\"wlapn.com\"\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "caf7800a27331e05"
            ]
        ]
    },
    {
        "id": "07d39bd08c908783",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CGDCONT=6,\"IPV4V6\",\"wlapn.com\"",
        "func": "msg.payload = 'AT+CGDCONT=6,\"IPV4V6\",\"wlapn.com\"\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1240,
        "wires": [
            [
                "caf7800a27331e05"
            ]
        ]
    },
    {
        "id": "9ba77a9b7babc629",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CFUN=0",
        "func": "msg.payload = 'AT+CFUN=0\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1320,
        "wires": [
            [
                "caf7800a27331e05"
            ]
        ]
    },
    {
        "id": "b93b709fc3b94735",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CGAUTH=1,1,”user”,”pass”",
        "func": "msg.payload = 'AT+CGAUTH=1,1,”user”,”pass”\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1280,
        "wires": [
            [
                "caf7800a27331e05"
            ]
        ]
    },
    {
        "id": "5f39b3cc4616dd5d",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CFUN=1",
        "func": "msg.payload = 'AT+CFUN=1\\r\\n'\n\nflow.set(\"pleasewait\",\"0\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1360,
        "wires": [
            [
                "caf7800a27331e05"
            ]
        ]
    },
    {
        "id": "35e63d3ae8f16a98",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1240,
        "wires": [
            [
                "07d39bd08c908783",
                "1be320cefcce9908"
            ]
        ]
    },
    {
        "id": "fac664aa3bbffccf",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1320,
        "wires": [
            [
                "9ba77a9b7babc629",
                "25af3a2b21d49c26"
            ]
        ]
    },
    {
        "id": "1be320cefcce9908",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1280,
        "wires": [
            [
                "b93b709fc3b94735",
                "fac664aa3bbffccf"
            ]
        ]
    },
    {
        "id": "25af3a2b21d49c26",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1360,
        "wires": [
            [
                "5f39b3cc4616dd5d",
                "65a99de8ba942ef2"
            ]
        ]
    },
    {
        "id": "605f3ea78619baa5",
        "type": "link in",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "caf7800a27331e05",
            "440b8c6c5f6627a5",
            "7de6aedc7e614b36",
            "71efc6e058463938"
        ],
        "x": 595,
        "y": 820,
        "wires": [
            [
                "fd05929f.24d11",
                "d6df67c8.e171c8"
            ]
        ]
    },
    {
        "id": "438f8baad725f8ae",
        "type": "switch",
        "z": "e5ac7e17.ed588",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "INSTALL",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 740,
        "wires": [
            [
                "f0a2cba9d112fba8"
            ],
            [
                "f1838977.023508",
                "939eef33c83d714e"
            ]
        ]
    },
    {
        "id": "9b5fc8faed037ff8",
        "type": "link in",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "f0a2cba9d112fba8"
        ],
        "x": 215,
        "y": 1080,
        "wires": [
            [
                "4a808590d1eeac28"
            ]
        ]
    },
    {
        "id": "f0a2cba9d112fba8",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "mode": "link",
        "links": [
            "9b5fc8faed037ff8"
        ],
        "x": 395,
        "y": 720,
        "wires": []
    },
    {
        "id": "117e934d197b58ff",
        "type": "ui_toast",
        "z": "e5ac7e17.ed588",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 1080,
        "wires": [
            [
                "d2d984eb5a8d6778"
            ]
        ]
    },
    {
        "id": "4a808590d1eeac28",
        "type": "change",
        "z": "e5ac7e17.ed588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Run Modem Setup Script ?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1080,
        "wires": [
            [
                "117e934d197b58ff"
            ]
        ]
    },
    {
        "id": "d2d984eb5a8d6778",
        "type": "switch",
        "z": "e5ac7e17.ed588",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 1080,
        "wires": [
            [
                "52ec6736dba708e9"
            ]
        ]
    },
    {
        "id": "6e63eb45b45a06bb",
        "type": "change",
        "z": "e5ac7e17.ed588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pleasewait",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "939eef33c83d714e",
        "type": "trigger",
        "z": "e5ac7e17.ed588",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 230,
        "y": 900,
        "wires": [
            [
                "6e63eb45b45a06bb"
            ]
        ]
    },
    {
        "id": "79c6ddc0b15b8fda",
        "type": "switch",
        "z": "e5ac7e17.ed588",
        "name": "",
        "property": "pleasewait",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 680,
        "wires": [
            [
                "fd05929f.24d11"
            ]
        ]
    },
    {
        "id": "65a99de8ba942ef2",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1420,
        "wires": [
            [
                "f4b3803ef5437f68",
                "21ea23703486a270"
            ]
        ]
    },
    {
        "id": "76fd3a5a4487ac35",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "mode": "link",
        "links": [
            "beb83274c8bcddc0",
            "f3a681e925c883e3"
        ],
        "x": 655,
        "y": 1500,
        "wires": []
    },
    {
        "id": "f3a681e925c883e3",
        "type": "link in",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "76fd3a5a4487ac35"
        ],
        "x": 255,
        "y": 100,
        "wires": [
            [
                "7c829d7d.a1b0d4"
            ]
        ]
    },
    {
        "id": "3235120eb5b90ad3",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "AT+CUSBPIDSWITCH=9011,1,1",
        "func": "flow.set(\"pleasewait\",\"1\");\nmsg.payload = \"AT+CUSBPIDSWITCH=9011,1,1\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "71efc6e058463938"
            ]
        ]
    },
    {
        "id": "71efc6e058463938",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "mode": "link",
        "links": [
            "7235b73df778d84e",
            "39f3596dbd265d3c",
            "605f3ea78619baa5"
        ],
        "x": 1215,
        "y": 80,
        "wires": []
    },
    {
        "id": "55ac6574f4603f5d",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "Check we have data connection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "70",
        "topic": "",
        "payloadType": "date",
        "x": 520,
        "y": 80,
        "wires": [
            [
                "b18de9bda97cb912"
            ]
        ]
    },
    {
        "id": "b18de9bda97cb912",
        "type": "switch",
        "z": "e5ac7e17.ed588",
        "name": "",
        "property": "mblast",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 80,
        "wires": [
            [
                "3235120eb5b90ad3"
            ]
        ]
    },
    {
        "id": "49a7fe423cb56453",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 800,
        "wires": [
            [
                "d97ffd0b.16ce8"
            ]
        ]
    },
    {
        "id": "a80708043d309cc2",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "WATCHDOG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "120",
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "2c9ad358020f4746"
            ]
        ]
    },
    {
        "id": "2c9ad358020f4746",
        "type": "switch",
        "z": "e5ac7e17.ed588",
        "name": "",
        "property": "online",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "47d392971a8074a6"
            ]
        ]
    },
    {
        "id": "47d392971a8074a6",
        "type": "trigger",
        "z": "e5ac7e17.ed588",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 230,
        "y": 1380,
        "wires": [
            [
                "22b53b86b8311f25"
            ]
        ]
    },
    {
        "id": "52ec6736dba708e9",
        "type": "change",
        "z": "e5ac7e17.ed588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pleasewait",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1160,
        "wires": [
            [
                "22b53b86b8311f25"
            ]
        ]
    },
    {
        "id": "158cdd47cb477c10",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 950,
        "y": 500,
        "wires": [
            [
                "5507813f64cd2354"
            ]
        ]
    },
    {
        "id": "c319a36a810036dd",
        "type": "link out",
        "z": "e5ac7e17.ed588",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1315,
        "y": 500,
        "wires": []
    },
    {
        "id": "8b61a7856712d34b",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 420,
        "wires": []
    },
    {
        "id": "5507813f64cd2354",
        "type": "function",
        "z": "e5ac7e17.ed588",
        "name": "alarms",
        "func": "var lastUSBin = flow.get(\"lastUSBin\") || 0;\n\nvar timin = new Date().getTime();\n\n\n\n\nvar age = (timin - lastUSBin)/1000;\n\nmsg.topic = \"alarm/modemUSB\";\nmsg.title = \"Modem USB serial connection\";\nif (age < 90) { msg.payload = \"ok\"; }\nelse { msg.payload = \"No modem response\"; }\n\n\nvar msg2 = {};\nmsg2.topic = \"alarm/modemLTE\";\nmsg2.title = \"Modem LTE 4G connection\";\n\nif (msg.payload !== \"ok\") { \n    \n    msg2.payload = \"No modem response\";  \n    \n    var sysage = (timin - flow.get(\"starttime\"))/1000;\n    if (sysage < 900) {\n        return [msg,msg2,null];\n        \n    } else {\n        msg2.topic = \"alarm/modemLTE\";\n        msg2.payload = \"Rebooting System\";\n        return [msg,msg2,msg2];\n    } \n}\n\nelse if (flow.get(\"online\")==\"0\") { msg2.payload = \"No LTE connection\"; }\n\nelse { msg2.payload = \"ok\"; global.set(\"rebooting\",null); }\n    \nreturn [msg,msg2,null];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "c319a36a810036dd",
                "8b61a7856712d34b"
            ],
            [
                "c319a36a810036dd",
                "8b61a7856712d34b"
            ],
            [
                "8b61a7856712d34b",
                "4e17a4fc854e300d"
            ]
        ]
    },
    {
        "id": "bab088b27b68b38d",
        "type": "inject",
        "z": "e5ac7e17.ed588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 900,
        "y": 560,
        "wires": [
            [
                "8a085c8808bb5f94"
            ]
        ]
    },
    {
        "id": "8a085c8808bb5f94",
        "type": "change",
        "z": "e5ac7e17.ed588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "starttime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e4c88d669242d574",
        "type": "exec",
        "z": "e5ac7e17.ed588",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1520,
        "y": 560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4e17a4fc854e300d",
        "type": "delay",
        "z": "e5ac7e17.ed588",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 560,
        "wires": [
            [
                "e4c88d669242d574"
            ]
        ]
    },
    {
        "id": "22f2dfa512ad2292",
        "type": "debug",
        "z": "e5ac7e17.ed588",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 720,
        "wires": []
    },
    {
        "id": "9140b0c7.7f85b",
        "type": "serial in",
        "z": "e090c99b.574098",
        "name": "hiu",
        "serial": "5cc70f0836e6a358",
        "x": 210,
        "y": 1840,
        "wires": [
            [
                "e6a8c7fd.f7728",
                "caf3f900.f20a08"
            ]
        ]
    },
    {
        "id": "50bcff0b.7bdac",
        "type": "subflow:3d0a40a7.66aa4",
        "z": "e090c99b.574098",
        "name": "html table",
        "x": 1160,
        "y": 540,
        "wires": [
            [
                "95990221.d8463"
            ]
        ]
    },
    {
        "id": "81eaf0f3.8b0b6",
        "type": "subflow:3d0a40a7.66aa4",
        "z": "e090c99b.574098",
        "x": 1160,
        "y": 500,
        "wires": [
            [
                "8b6dc809.fa87e8"
            ]
        ]
    },
    {
        "id": "72a037.9ebda7c8",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "3ea80383.e1f8d4",
        "x": 210,
        "y": 1900,
        "wires": [
            [
                "cefe6869.10693"
            ]
        ]
    },
    {
        "id": "f9f559ce.5dd4f8",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "7e0c6c31.8f0aa4",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "a1db4f59.d2dfe"
            ]
        ]
    },
    {
        "id": "ede852b1.9d9638",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "4e38699.f981018",
        "x": 210,
        "y": 2020,
        "wires": [
            [
                "e5d286c3.db8a3"
            ]
        ]
    },
    {
        "id": "220d0690.2e7622",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1130,
        "y": 2020,
        "wires": []
    },
    {
        "id": "45988226.c8e5ac",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "dccd9d11.4e316",
        "x": 210,
        "y": 2120,
        "wires": [
            [
                "6513d969.42a2c8"
            ]
        ]
    },
    {
        "id": "a455f86d.bd5a98",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "5374dd2d.431cd4",
        "x": 210,
        "y": 2180,
        "wires": [
            [
                "da7ed2d2.fe2ff"
            ]
        ]
    },
    {
        "id": "8d0f3a1a.63ddf8",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "520dbe13.2a881",
        "x": 210,
        "y": 2240,
        "wires": [
            [
                "8915aa75.a11b58"
            ]
        ]
    },
    {
        "id": "2dfbddeb.330212",
        "type": "serial in",
        "z": "e090c99b.574098",
        "d": true,
        "name": "hiu",
        "serial": "28c44052.d6082",
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "135f0612.d2ab32"
            ]
        ]
    },
    {
        "id": "48de6e4e.59652",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "request",
        "func": "\n\n\nif(msg.topic==\"ihiu/iK7iep3i/request/serial\") {\n    \n    var serid = flow.get(\"serialusb\"+msg.payload);\n    if(!serid) { return null; }\n    flow.set(\"usb\",serid);\n    msg.payload=serid;\n    return msg;\n}\nelse if(msg.topic==\"ihiu/iK7iep3i/request/usb\") {\n    \n    flow.set(\"usb\",\"usb\"+msg.payload);\n    msg.payload=\"usb\"+msg.payload;\n    return msg;\n}\nelse if(msg.topic==\"ihiu/iK7iep3i/request/settings\") {\n    \n    msg.payload=\"usb\"+msg.payload;\n    return msg;\n}\nelse if(msg.topic==\"usb\") {\n    \n    flow.set(\"usb\",msg.payload);\n    return msg;\n}\nelse if(msg.topic==\"ihiu/iK7iep3i/request/stop\") {\n    \n    flow.set(\"usb\",\"\");\n    return(null);\n    \n}\nelse if(msg.topic==\"ihiu/iK7iep3i/request\") {\n    \n    msg.usb = flow.get(\"serialusb\"+msg.payload);  // \n\n    return [null,msg];\n}\n\n// user commands\n\n\n\nmsg.usb = flow.get(\"serialusb\"+msg.topic.split(\"/\")[2]);  // \n\n\n\n\nif(msg.topic.indexOf(\"/refresh\")>0) {\n    \n    msg.payload = msg.topic.split(\"/\")[2];\n    \n    return [null,msg];\n}\n\n\nif(msg.topic.indexOf(\"/user\")>0) {\n    \n    //msg.payload = msg.topic.split(\"/\")[2];\n    \n    return [null,null,msg];\n}\n",
        "outputs": "3",
        "noerr": 0,
        "x": 727.5,
        "y": 962.5000019073486,
        "wires": [
            [
                "b4029b97.d524f8",
                "80885b24.6ed7e8",
                "dbb6b961.8e70a8"
            ],
            [
                "3e749186.082526",
                "4c4a7299.aeed24"
            ],
            [
                "fc50aae1.5eca28"
            ]
        ]
    },
    {
        "id": "b8afd74f.f99e08",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "remoteusb",
                "vt": "global"
            },
            {
                "t": "cont",
                "v": "/",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 610,
        "y": 2060,
        "wires": [
            [
                "6a69b8cd.2317d"
            ],
            [
                "1230cc95.667d03"
            ]
        ]
    },
    {
        "id": "e6a8c7fd.f7728",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb0/data",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb0",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1840,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "cefe6869.10693",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "1",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb1/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03b027ae3b95555",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb1",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1900,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "a1db4f59.d2dfe",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "2",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb2/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03v02vae3b94045",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb2",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1960,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "e5d286c3.db8a3",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "3",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb3/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03b027ae3b97777",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb3",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 2020,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "6513d969.42a2c8",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "4",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb4/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03b027ae3b98888",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb4",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 2120,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "da7ed2d2.fe2ff",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "5",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb5/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03b027ae3b99999",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb5",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 2180,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "8915aa75.a11b58",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "6",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb6/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03b027ae3b9aaaa",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb6",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 2240,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "135f0612.d2ab32",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "7",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ihiu/iK7iep3i/usb7/data",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "d03b027ae3b94045",
                "fromt": "str",
                "to": "d03b027ae3b9bbbb",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "usb",
                "pt": "msg",
                "to": "usb7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeusb7",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 2300,
        "wires": [
            [
                "b8afd74f.f99e08"
            ]
        ]
    },
    {
        "id": "6be6b5fb.a7fd54",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "c88e7b3e.9bae08"
        ],
        "x": 1275,
        "y": 920,
        "wires": []
    },
    {
        "id": "b4029b97.d524f8",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 860,
        "wires": []
    },
    {
        "id": "ea7ad72e.e28e98",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "by topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "usb0",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb5",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb6",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb7",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "usb8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 719,
        "y": 1522,
        "wires": [
            [
                "7721122e.3eb56c",
                "824d383f.19eaf8"
            ],
            [
                "247cc8a4.66a238"
            ],
            [
                "2333c6e6.0770ca"
            ],
            [
                "21b29b43.4b7554"
            ],
            [
                "7114f648.fb37f8"
            ],
            [
                "edc27520.dde888"
            ],
            [
                "9965ec59.0de9c"
            ],
            [
                "5c0853e4.8b9d5c"
            ],
            []
        ]
    },
    {
        "id": "8ebd4192.9d6",
        "type": "serial out",
        "z": "e090c99b.574098",
        "name": "",
        "serial": "5cc70f0836e6a358",
        "x": 1090,
        "y": 1380,
        "wires": []
    },
    {
        "id": "80885b24.6ed7e8",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "settings",
        "func": "var tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(13) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59)\n\nmsg.topic = msg.payload;\nmsg.payload = tosend;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 920,
        "wires": [
            [
                "6be6b5fb.a7fd54"
            ]
        ]
    },
    {
        "id": "247cc8a4.66a238",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout1",
        "serial": "3ea80383.e1f8d4",
        "x": 982.5000076293945,
        "y": 1440.0000858306885,
        "wires": []
    },
    {
        "id": "2333c6e6.0770ca",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout2",
        "serial": "7e0c6c31.8f0aa4",
        "x": 982.5000076293945,
        "y": 1500.0000858306885,
        "wires": []
    },
    {
        "id": "21b29b43.4b7554",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout3",
        "serial": "4e38699.f981018",
        "x": 982.5000076293945,
        "y": 1560.0000858306885,
        "wires": []
    },
    {
        "id": "c88e7b3e.9bae08",
        "type": "link in",
        "z": "e090c99b.574098",
        "name": "tousb",
        "links": [
            "6be6b5fb.a7fd54",
            "939710c8.952bd",
            "5807ced4.1ea4f",
            "425d8dc1.5fcba4",
            "5111f409.43cbdc"
        ],
        "x": 98,
        "y": 1522,
        "wires": [
            [
                "e5a16d1d.b9593",
                "3ed73fdc.a3566"
            ]
        ]
    },
    {
        "id": "7114f648.fb37f8",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout4",
        "serial": "dccd9d11.4e316",
        "x": 985.0000076293945,
        "y": 1612.5000324249268,
        "wires": []
    },
    {
        "id": "edc27520.dde888",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout5",
        "serial": "5374dd2d.431cd4",
        "x": 980,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9965ec59.0de9c",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout6",
        "serial": "520dbe13.2a881",
        "x": 980,
        "y": 1740,
        "wires": []
    },
    {
        "id": "5c0853e4.8b9d5c",
        "type": "serial out",
        "z": "e090c99b.574098",
        "d": true,
        "name": "usbout7",
        "serial": "28c44052.d6082",
        "x": 980,
        "y": 1800,
        "wires": []
    },
    {
        "id": "f7a2522b.1aa6f",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "parameters",
        "func": " \n var tosend = \"\";\n \n    \ntosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(14) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n \nmsg.topic = msg.payload;\nmsg.payload = tosend;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 960,
        "wires": [
            [
                "6be6b5fb.a7fd54"
            ]
        ]
    },
    {
        "id": "f5bfee94.23e34",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "rotate SINGLE",
        "func": "var cnt = flow.get(\"cycle\") || 0;\n\nvar today = new Date();\nvar dd = today.getTime();\n\ncnt++;\nif(cnt>0) { cnt=0; }  // SINGLE HIU ONLY\n\n\nfor (i = 0; i < 9; i++) {\n    var ltime = flow.get(\"TIMEusb\"+i)||0;  // the new stuff\n    if((dd - ltime)>30000) { flow.set(\"CONusb\"+i,0); }\n    else { flow.set(\"CONusb\"+i,1); }\n    \n    //if ((flow.get(\"CONusb\"+i)||0)===0) { \n        \n    //    return null;\n        //cnt++; \n        //if(cnt>7) { cnt=0; }\n    //}\n}\n\n\n\nflow.set(\"cycle\", cnt);\n\n\nif ((flow.get(\"CONusb\"+cnt)||0)===0) { \n        \n        return null;\n        \n}\n    \nmsg.payload=\"\"+cnt;\nmsg.topic=\"ihiu/iK7iep3i/request/usb\";\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "a2ce6b89.71ece",
                "e2e1b2e5.47d85"
            ]
        ]
    },
    {
        "id": "a94c5afd.b2653",
        "type": "link in",
        "z": "e090c99b.574098",
        "name": "request",
        "links": [
            "a2ce6b89.71ece",
            "c8a9d998.7f91e8",
            "c53592d3.3f577",
            "e44975c2.efaef8"
        ],
        "x": 275,
        "y": 800,
        "wires": [
            [
                "9b823fec.77d54"
            ]
        ]
    },
    {
        "id": "a2ce6b89.71ece",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "a94c5afd.b2653"
        ],
        "x": 695,
        "y": 300,
        "wires": []
    },
    {
        "id": "c020c8fc.01c7a",
        "type": "link in",
        "z": "e090c99b.574098",
        "name": "nextusb",
        "links": [],
        "x": 355,
        "y": 280,
        "wires": [
            [
                "f5bfee94.23e34"
            ]
        ]
    },
    {
        "id": "e2e1b2e5.47d85",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "ef17e566.ef5178",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "isnumeric",
        "func": "var tp = msg.payload.split(\"=\")[0];\nvar vv = msg.payload.split(\"=\")[1];\n\nif (!vv) return null; \n\nvv = vv.replace(\"-273\",\"nc\");\n\nvar lognoflow = global.get(\"settings.lognoflow\") || false;\n\n\n\n\nmsg.topic = flow.get(\"serial\" + msg.usb) + \"/\"  + tp;\nmsg.payload = vv;\n\n//return [msg,null];\n\n\n//if (isNaN(vv)) { return [msg,null]; }\n\n\n\nif (msg.topic.indexOf(\"dat/t\")>0) { \n    \n    \n     if (isNaN(msg.payload)) {  return [null,null,msg]; }\n    \n     msg.payload=parseFloat(msg.payload);\n     \n     return [null,msg,null]; \n     \n    // if ((msg.flow===true) || (lognoflow===true)) { return [null,msg,null];  }\n     \n    // else  { return [null,null,msg];  }\n     \n     \n     \n} else if (msg.topic.indexOf(\"dat/v\")>0) { \n    \n     msg.payload=parseInt(10 * parseFloat(msg.payload)) / 10;\n     return [null,msg,null]; \n     \n} else if (msg.topic.indexOf(\"dat/x\")>0) { \n    \n     msg.payload=parseFloat(msg.payload);\n     if (msg.payload===0) {\n        return [msg,null,null]; \n     } else {\n        return [null,null,msg]; \n     }\n} else if (!isNaN(msg.payload)) { \n    \n     msg.payload=parseFloat(msg.payload);\n     \n     return [null,null,msg]; \n     \n    \n}    \n\n\nreturn [msg,null,null]; \n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2420,
        "wires": [
            [
                "80680e.79bae7f"
            ],
            [
                "f8c126ec.446148"
            ],
            [
                "80680e.79bae7f"
            ]
        ]
    },
    {
        "id": "1840146.0a4e6ec",
        "type": "split",
        "z": "e090c99b.574098",
        "name": "",
        "splt": "&",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1110,
        "y": 2420,
        "wires": [
            [
                "ef17e566.ef5178"
            ]
        ]
    },
    {
        "id": "f8539bf1.2e0408",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "DAT",
        "func": "var DAT = msg.payload.split(',');\n\n\n\nmsg.payload = {};\n\n\n\nmsg.topic = \"DAT\"+msg.usb;\n\nmsg.payload.st = DAT[2];  // state\n\n\n\nmsg.payload.fC = parseFloat(DAT[3]);  // Flow Tapping (l/min)\nmsg.payload.tCo = Math.round( parseFloat(DAT[4]) * 10 ) / 10 ;  // Temperature Tapping\nmsg.payload.tH = Math.round( parseFloat(DAT[5]) * 10 ) / 10 ;  // Temperature District Heating \nmsg.payload.tHoCH = Math.round( parseFloat(DAT[6]) * 10 ) / 10 ;  // Temperature DH Return CH \nmsg.payload.xDHW = parseFloat(DAT[7]);  // Stepper Motor Position for DHW (0 - 270)\nmsg.payload.stat = parseInt(DAT[8]);  // Thermostat (0.0 OFF<br>1.0 ON )\nmsg.payload.dpH = DAT[9];  // District Heating pressure, estimated (bar)\n//msg.payload.r1 = DAT[10];  // District Heating pressure, estimated (bar)\n//msg.payload.r2 = DAT[11];  // District Heating pressure, estimated (bar)\n//msg.payload.r3 = DAT[12];  // District Heating pressure, estimated (bar)\nmsg.payload.fHDHW = parseFloat(DAT[13]);  // District Heating Flow, DHW (l/min)\nmsg.payload.eT = Math.round( parseFloat(DAT[14]) * 10 ) / 10 ;  // Temperature Error\n//msg.payload.r4 = DAT[15];  // District Heating pressure, estimated (bar)\nmsg.payload.TTdhw = DAT[16];  // Setpoint\nmsg.payload.eS = DAT[17];  // ErrorStatus\nmsg.payload.tHoDHW = Math.round( parseFloat(DAT[18]) * 10 ) / 10 ;  // District Heating Return temperature \n\n//msg.payload.tCHo = Math.round( parseFloat(DAT[19]) * 10 ) / 10 ;  // Grundfos temperature) -> central heating T   \nmsg.payload.tCHo = Math.round( parseFloat(DAT[20]) * 10 ) / 10 ;  // Grundfos temperature  -> central heating T   \n//msg.payload.r5 = DAT[20];  // District Heating pressure, estimated (bar)\n\nmsg.payload.pCH = Math.round( parseFloat(DAT[21]) * 10 ) / 10 ;   // Grundfos pressure (bar) [1.1 - 2.5]\n//msg.payload.r6 = DAT[22];  // District Heating pressure, estimated (bar)\nmsg.payload.pump = DAT[23];  // Valve 24V Out(1 open<br>0 close)-> pump\nmsg.payload.xCH = parseFloat(DAT[24]);  // Stepper Motor Position for CH (0 - 270)\nmsg.payload.fHCH = parseFloat(DAT[25]);  // District Heating Flow, CH (l/min)\n\n\nmsg.payload.fH = msg.payload.fHCH + msg.payload.fHDHW;\n\nif (msg.payload.fH>0 &&  msg.payload.tHoCH > 0 ) {\n    msg.payload.tHo = ((msg.payload.tHoDHW *  msg.payload.fHDHW) + (msg.payload.tHoCH *  msg.payload.fHCH)) / msg.payload.fH;\n} else {\n    \n    msg.payload.tHo = msg.payload.tHoDHW;\n\n}\n\n\nmsg.payload.kwHCH = parseInt((msg.payload.fHCH/60) * 42.00 * (msg.payload.tH - msg.payload.tHoCH))/10;\nmsg.payload.kwHDHW = parseInt((msg.payload.fHDHW/60) * 42.00 * (msg.payload.tH - msg.payload.tHoDHW))/10;\nmsg.payload.kwH = msg.payload.kwHCH + msg.payload.kwHDHW;\n\n// validity check\nvar chk = context.get(\"lasttH\"+msg.usb) || msg.payload.tH;\ncontext.set(\"lasttH\"+msg.usb, msg.payload.tH);\nif (Math.abs(chk - msg.payload.tH)>20) { return null; }\n\nchk = context.get(\"lasttHoDHW\"+msg.usb) || msg.payload.tHoDHW;\ncontext.set(\"lasttHoDHW\"+msg.usb, msg.payload.tHoDHW);\nif (Math.abs(chk - msg.payload.tHoDHW)>20) { return null; }\n\nif (msg.payload.tH>105) { return null; }\nif (msg.payload.tCo>105) { return null; }\nif (msg.payload.tHoDHW>105) { return null; }\nif (msg.payload.tHoCH>105) { return null; }\n\n\nflow.set(\"DAT\"+msg.usb,msg.payload);  // the new stuff\n\n\n\nvar stats={};\nvar alarms={};\n\nif(parseInt(msg.payload.st) <7) { alarms.hiuState = \"ok\"; } else { alarms.hiuState = \"sensor_error\"; }\n\n\nvar today = new Date();\nvar dd = today.getTime();\n\nchk = context.get(\"lasttfC\"+msg.usb) || 0;\ncontext.set(\"lasttfC\"+msg.usb, msg.payload.fC);\n\nif (msg.payload.fC>=1) { \n\n    if (chk<1) { \n        \n        flow.set(\"fCstarttime\" + msg.usb, dd); \n        flow.set(\"dhwstartv\" + msg.usb, flow.get(\"vC\" + msg.usb));\n        \n    }\n    \n    var stim = flow.get(\"fCstarttime\"+msg.usb);\n    \n    msg.payload.runtimeDHW =  (dd - stim)/1000;\n    \n    \n    //if (((msg.payload.tCo > 35 && msg.payload.runtimeDHW > 3) || msg.payload.runtimeDHW > 15) && msg.payload.runtimeDHW < 60) {\n        \n        flow.set(\"tCo\" + msg.usb, msg.payload.tCo); \n        flow.set(\"tHoDHW\" + msg.usb, msg.payload.tHoDHW); \n        flow.set(\"tH\" + msg.usb, msg.payload.tH); \n    //}\n    \n    \n} else {\n    \n   \n    \n    if (chk>=1) { \n\n        var stim = flow.get(\"fCstarttime\"+msg.usb);\n    \n        msg.payload.runtimeDHW =  (dd - stim)/1000;      \n            \n        var vC = flow.get(\"vC\" + msg.usb);\n        var startv = flow.get(\"dhwstartv\" + msg.usb) || vC;\n        var vused = parseInt(1000*(vC - startv))/1000;\n        \n        stats.lastvCtime =  flow.get(\"fCstarttime\" + msg.usb);\n        stats.lastvCrun =  vused;\n        stats.lastvClen =  parseInt(10 * msg.payload.runtimeDHW) / 10;\n        stats.lastvCavr =  parseInt(100*vused/( stats.lastvClen/60))/100;\n        stats.lasttCo =  flow.get(\"tCo\" + msg.usb); \n        stats.lasttHoDHW =  flow.get(\"tHoDHW\" + msg.usb); \n        stats.lasttH =  flow.get(\"tH\" + msg.usb); \n        \n        if(stats.lasttCo > 45) { alarms.lastDHW = \"ok\"; }\n        if(stats.lastvClen > 30 && stats.lasttCo < 45) { alarms.lastDHW = \"warming, low DHW temp\"; }\n        else if(stats.lastvClen > 60 && stats.lasttCo < 35) { alarms.lastDHW = \"warming, no DHW\"; }\n        \n        if(stats.lasttHoDHW < 30) { alarms.tHoDHW = \"ok\"; }\n        if(stats.lastvClen > 30 && stats.lasttHoDHW > 30) { alarms.tHoDHW = \"warming, high return temperature\"; }\n        \n        \n    }  \n    \n    msg.payload.runtimeDHW =  0;\n}\n\n\n\nvar lasttime = flow.get(\"TIME\"+msg.usb) || dd;\n\nflow.set(\"TIME\"+msg.usb,dd);  // the new stuff\n\nvar age = (dd - lasttime)/1000;\nif (age<600) { \n    \n    var vH = flow.get(\"vH\"+msg.usb) || 0.0;\n    vH = vH + (age * msg.payload.fHDHW /60);\n    vH = vH + (age * msg.payload.fHCH /60);\n    flow.set(\"vH\"+msg.usb, vH);\n    msg.payload.vH = vH;\n}\n\nvar urlstr = \"xnode=x\";\nfor (var k in msg.payload){\n    \n    urlstr += \"&dat/\" + k + \"=\" + msg.payload[k];\n\n}\n\nmsg2={}; msg2.usb = msg.usb;\nmsg2.group = \"dat\";\nmsg2.payload = urlstr.replace(/\\s/g, '');\n\n\nif (msg.payload.fC>0) { msg2.flow = true; }\nelse if (msg.payload.fHCH>0) { msg2.flow = true; }\nelse if (msg.payload.fHDHW>0) { msg2.flow = true; }\nelse  { msg2.flow = false; }\n\n\nvar urlstr2 = \"xnode=x\";\nfor (var kk in stats){\n    \n    urlstr2 += \"&stat/\" + kk + \"=\" + stats[kk];\n\n}\n\nmsg3={}; msg3.usb = msg.usb;\nmsg3.group = \"stat\";\nmsg3.payload = urlstr2.replace(/\\s/g, '');\n\n\n\n\nvar urlstr1 = \"xnode=x\";\nfor (var kkk in alarms){\n    \n    urlstr1 += \"&alarm/\" + kkk + \"=\" + alarms[kkk];\n\n}\n\nmsg1={}; msg1.usb = msg.usb;\nmsg1.group = \"alarm\";\nmsg1.payload = urlstr1.replace(/\\s/g, '');\n\n\nreturn [msg1,msg2,msg3];",
        "outputs": "3",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910.0000305175781,
        "y": 2340,
        "wires": [
            [
                "1840146.0a4e6ec"
            ],
            [
                "1840146.0a4e6ec"
            ],
            [
                "1840146.0a4e6ec"
            ]
        ]
    },
    {
        "id": "82c5c5e7.f10798",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "payload",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "DAT,",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STAT,",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PARAM,",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "HEATER",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ":",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 6,
        "x": 700,
        "y": 2480,
        "wires": [
            [],
            [
                "f8539bf1.2e0408"
            ],
            [
                "dc25b190.60c92"
            ],
            [
                "1afd42f6.3ce5ed",
                "a21d359.ae8d4c8"
            ],
            [],
            [
                "8bf3c0a7.dd52c"
            ]
        ]
    },
    {
        "id": "80680e.79bae7f",
        "type": "rbe",
        "z": "e090c99b.574098",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 1570,
        "y": 2420,
        "wires": [
            [
                "d9bc085f.284af"
            ]
        ]
    },
    {
        "id": "9b823fec.77d54",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1000",
        "extend": true,
        "units": "ms",
        "reset": "",
        "outputs": 1,
        "x": 460,
        "y": 800,
        "wires": [
            [
                "48de6e4e.59652",
                "af218e56.02cb6"
            ]
        ]
    },
    {
        "id": "1afd42f6.3ce5ed",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "PARAM",
        "func": "var DAT = msg.payload.split(',');\n\n\n\nmsg.payload = {};\n\n\nmsg.topic = \"PARAM\"+msg.usb;\n\nmsg.payload.Nodeware = global.get(\"Nodeware\") || \"v0\";  // state\n\nmsg.payload.Firmware = DAT[1];  // state\nmsg.payload.Serial = DAT[9];\n\nmsg.payload.usb = msg.usb;  // state\n\n//validity check - serial should ot change repeatedly\nvar chk = context.get(\"lastSerial\"+msg.usb) || msg.payload.Serial;\ncontext.set(\"lastSerial\"+msg.usb, msg.payload.Serial);\nif (chk != msg.payload.Serial) { return null; }\n\n\nflow.set(\"serial\" + msg.usb,msg.payload.Serial);\nflow.set(\"serialusb\" + msg.payload.Serial, msg.usb);\n\n\n\nflow.set(\"PARAM\"+msg.usb,msg.payload);  // the new stuff\n\nvar urlstr = \"xnode=iK7iep3i\";\nfor (var k in msg.payload){\n    \n    urlstr += \"&system/\" + k + \"=\" + msg.payload[k];\n\n}\n\nmsg2={};  msg2.usb = msg.usb;\nmsg2.payload = urlstr.replace(/\\s/g, '');\n\nmsg.group = \"system\"; msg2.group = \"system\";\n\nreturn [msg,msg2];",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2460,
        "wires": [
            [],
            [
                "1840146.0a4e6ec"
            ]
        ]
    },
    {
        "id": "dc25b190.60c92",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "STAT",
        "func": "\nvar DAT = msg.payload.split(',');\n\n\n\n\nflow.set(\"TIS\"+msg.usb, DAT[4]);  // the new stuff\n\n\nmsg.payload = {};\n\n\nmsg.topic = \"STAT\"+msg.usb;\n\n\nmsg.payload.vC = DAT[2];  // state\nmsg.payload.DHWCount = DAT[3];\n//msg.payload.TimeInState = DAT[4];\n\nmsg.payload.beacon = 3 * parseInt(parseFloat(DAT[4]) / 180);  // ever 3 min\n\n//msg.payload.e_Counter = DAT[5];\nmsg.payload.e_TEMPERATURESENSORS = DAT[6];\nmsg.payload.e_FLOWSENSOR = DAT[7];\nmsg.payload.e_PRIMARYCONTROL = DAT[8];\nmsg.payload.e_DISTRICTHEATING = DAT[9];\nmsg.payload.e_CHRETURNTEMP = DAT[10];\nmsg.payload.e_DHWTEMP = DAT[11];\nmsg.payload.e_DISTRICTHEATINGTEMP = DAT[12];\nmsg.payload.e_DHRETURNTEMP = DAT[13];\nmsg.payload.e_CENTRALHEATING = DAT[14];\nmsg.payload.e_WARMUPTIMER = DAT[15];\nmsg.payload.e_CHTEMPWARNING = DAT[16];\nmsg.payload.e_CHTEMPERROR = DAT[17];\n\n\n\n// validity check\nvar chk = context.get(\"lastvC\"+msg.usb) || msg.payload.vC;\ncontext.set(\"lastvC\"+msg.usb, msg.payload.vC);\nif (Math.abs(chk - msg.payload.vC)>20) { return null; }\n\nflow.set(\"vC\"+msg.usb,msg.payload.vC);  // the new stuff\n\nflow.set(\"STAT\"+msg.usb,msg.payload);  // the new stuff\n\nvar urlstr = \"xnode=iK7iep3i\";\nfor (var k in msg.payload){\n    \n    urlstr += \"&stat/\" + k + \"=\" + msg.payload[k];\n\n}\n\nmsg2={}; msg2.usb = msg.usb;\n\nmsg2.payload = urlstr.replace(/\\s/g, '');\n\nmsg.group = \"stat\"; msg2.group = \"stat\";\n\nreturn [msg,msg2];",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 2400,
        "wires": [
            [],
            [
                "1840146.0a4e6ec"
            ]
        ]
    },
    {
        "id": "dbb6b961.8e70a8",
        "type": "delay",
        "z": "e090c99b.574098",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 960,
        "y": 960,
        "wires": [
            [
                "f7a2522b.1aa6f"
            ]
        ]
    },
    {
        "id": "8bf3c0a7.dd52c",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "SETTINGS",
        "func": "var skey = msg.payload.split(':')[0].replace(/\\s/g, '');\nvar sval = msg.payload.split(':')[1].replace(/\\s/g, '');\n\n\n\n\nvar patt = new RegExp(/^[a-z0-9:.]+$/i);\nif(!patt.test(skey)) { return null; }\nif(!patt.test(sval)) { return null; }\n\nmsg.payload = {};\n\nflow.set(\"settings.\"+flow.get(\"serial\" + msg.usb)+\".\"+skey, sval);  // the new stuff\n\n\nmsg.topic =  flow.get(\"serial\" + msg.usb) + \"/settings/\" + skey;\n\nmsg.payload = sval;  \n\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2520,
        "wires": [
            [
                "80680e.79bae7f",
                "121021a4.99d09e"
            ]
        ]
    },
    {
        "id": "121021a4.99d09e",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1530,
        "y": 2600,
        "wires": []
    },
    {
        "id": "f61a6e0.b545c9",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "load",
        "func": "\n\nif(!msg.usb) { return null; }\n\nvar urlstr = \"node=iK7iep3i\";\n\nmsg.payload = flow.get(\"DAT\"+msg.usb);  // the new stuff\n\n\nfor (var k in msg.payload){\n    \n    urlstr += \"&dat/\" + k + \"=\" + msg.payload[k];\n\n}\nmsg.payload = flow.get(\"STAT\"+msg.usb);  // the new stuff\n\n\nfor (var k in msg.payload){\n    \n    urlstr += \"&stat/\" + k + \"=\" + msg.payload[k];\n\n}\nmsg.payload = flow.get(\"PARAM\"+msg.usb);  // the new stuff\n\nfor (var k in msg.payload){\n    \n    urlstr += \"&param/\" + k + \"=\" + msg.payload[k];\n\n}\n\n//msg.payload = global.get(\"SYSINFO\");  // the new stuff\n\n//for (var k in msg.payload){\n    \n//    urlstr += \"&system/\" + k + \"=\" + msg.payload[k];\n\n//}\n\n\nmsg.payload = flow.get(\"settings.\"+flow.get(\"serial\"+msg.usb));  // the new stuff\nfor (var k in msg.payload){\n    \n    urlstr += \"&settings/\" + k + \"=\" + msg.payload[k];\n\n}\n\nurlstr += \"&system/tempid=\" + (global.get(\"settings.tempid\") || \"undefined\") + msg.usb;\n\nurlstr += \"&system/usb=\" + msg.usb;\n\nmsg.payload = global.get(\"settings\");  // the new stuff\nfor (var k in msg.payload){\n    \n    urlstr += \"&local/\" + k + \"=\" + msg.payload[k];\n\n}\n\n//urlstr += \"&dat/tX=\" + global.get(\"tX\");\n//urlstr += \"&dat/hX=\" + global.get(\"hX\");\n\nurlstr += \"&stat/tis=\" + flow.get(\"TIS\"+msg.usb);\n\nmsg.payload = urlstr;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1040,
        "wires": [
            [
                "4146b1cc.badfb"
            ]
        ]
    },
    {
        "id": "4146b1cc.badfb",
        "type": "split",
        "z": "e090c99b.574098",
        "name": "",
        "splt": "&",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1330,
        "y": 1040,
        "wires": [
            [
                "cc66278e.f774c8"
            ]
        ]
    },
    {
        "id": "78f9f023.725b",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "topic",
        "func": "var tp = msg.payload.split(\"=\")[0];\nvar vv = msg.payload.split(\"=\")[1];\n\nmsg.topic = \"ihiu/iK7iep3i/\" + flow.get(\"serial\" + msg.usb) + \"/\" + tp;\nmsg.payload = vv;\n\nreturn msg; ",
        "outputs": "1",
        "noerr": 0,
        "x": 1570,
        "y": 1040,
        "wires": [
            [
                "a617f511.42d7a8",
                "e1ac49b3.759af8"
            ]
        ]
    },
    {
        "id": "fc50aae1.5eca28",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1110,
        "y": 1120,
        "wires": []
    },
    {
        "id": "cc66278e.f774c8",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "=",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1450,
        "y": 1040,
        "wires": [
            [
                "78f9f023.725b"
            ]
        ]
    },
    {
        "id": "23a2aab8.bb0366",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "set HIU",
        "func": " \n if (!msg.usb) { \n     \n    var hiuser  = msg.topic.split(\"/\")[2];\n    if (flow.get(\"serialusb\" + hiuser)) { msg.usb = flow.get(\"serialusb\" + hiuser); }\n    \n    else { return null; }\n     \n }\n \n \n \n var tosend = \"\";\n \n var msg2 = {};\n \n function convertSet(setp) {\n     \n     \n    var setdec = 100 * parseFloat(setp);\n\t\n    var b3 = Math.floor(setdec / 256);\n    var b4 = setdec % 256;\n\n    var cs = String.fromCharCode(0) +  String.fromCharCode(0) + String.fromCharCode(parseInt(b3)) + String.fromCharCode(parseInt(b4)) ;\n\t\n\treturn cs;\n\n }\n \n if (msg.topic.indexOf(\"/CentralHeatingControl\")>0) {\n \n    if (msg.payload === \"1\") { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(38) + String.fromCharCode(1) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n \n    } else { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(38) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n        \n    }\n\n}\nelse if (msg.topic.indexOf(\"/EcoMode\")>0) {\n \n    if (msg.payload === \"1\" || msg.payload === \"comfort\") { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(10) + String.fromCharCode(1) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n \n    } else { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(10) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n        \n    }\n\n} else if (msg.topic.indexOf(\"AntiLegionella\")>0) {\n \n    if (msg.payload === \"1\") { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(34) + String.fromCharCode(1) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n \n    } else { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(34) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n        \n    }\n\n}\nelse if (msg.topic.indexOf(\"/setpoint\")>0) {\n\n    tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(9) + convertSet(msg.payload) + String.fromCharCode(59);\n\n}\nelse if (msg.topic.indexOf(\"EcoHeatTemperature\")>0) {\n\n    tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(33) + convertSet(msg.payload) + String.fromCharCode(59);\n\n}\nelse if (msg.topic == \"xxxxx\") {\n\n\n    var setdec = 100 * parseFloat(msg.payload);\n\t\n    var b3 = Math.floor(setdec / 256);\n    var b4 = setdec % 256;\n\n\n    tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(9) + String.fromCharCode(0) +  String.fromCharCode(0) + String.fromCharCode(parseInt(b3)) + String.fromCharCode(parseInt(b4)) + String.fromCharCode(59);\n\t\n    \n    msg2.payload = \"setdec \" + b3 + \" .. \" + b4;\n    \n\n    return null; // DISABLED TEMP CONTROL\n\n}\nelse { return null;  }\n\n\n\nmsg.payload = tosend;\n\nreturn msg;\n\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 1240,
        "wires": [
            [
                "8f8f0196.7222c",
                "d710525b.743aa"
            ]
        ]
    },
    {
        "id": "8f8f0196.7222c",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 2898.3608894348145,
        "y": 1201.722279548645,
        "wires": [
            [
                "103e9ba1.e12f24"
            ]
        ]
    },
    {
        "id": "103e9ba1.e12f24",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "store HIU",
        "func": "var tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(13) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59)\n\nmsg.payload = tosend;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3077.360980987549,
        "y": 1201.6110429763794,
        "wires": [
            [
                "d710525b.743aa"
            ]
        ]
    },
    {
        "id": "d710525b.743aa",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "pass",
        "func": "\n\nmsg.payload  = Buffer.from(msg.payload, 'ascii');\n\nmsg.topic=msg.usb;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3230,
        "y": 1240,
        "wires": [
            [
                "b9f9d52e.dbc388",
                "939710c8.952bd"
            ]
        ]
    },
    {
        "id": "939710c8.952bd",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "c88e7b3e.9bae08"
        ],
        "x": 3396.250015258789,
        "y": 1232.5000114440918,
        "wires": []
    },
    {
        "id": "b9f9d52e.dbc388",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 3351.250015258789,
        "y": 1352.5000114440918,
        "wires": []
    },
    {
        "id": "e5a16d1d.b9593",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 220,
        "y": 1588,
        "wires": []
    },
    {
        "id": "a21d359.ae8d4c8",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 900,
        "y": 2580,
        "wires": []
    },
    {
        "id": "a617f511.42d7a8",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1750,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fa35a2c9.167fb",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "f5bfee94.23e34",
                "e2e1b2e5.47d85"
            ]
        ]
    },
    {
        "id": "50f58c2.209ba74",
        "type": "ui_template",
        "z": "e090c99b.574098",
        "group": "c00ac9a8.47bd28",
        "name": "",
        "order": 4,
        "width": "6",
        "height": "11",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "77cc7d0d.b5e584",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "var htmlt = '';\n\nfor (var key in msg.payload) {\n    \n    if (key == \"EEPROM\") { continue; }\n    if (key == \"magic\") { continue; }\n    if (key == \"CHHeaterCurveSlope\") { continue; }\n    if (key == \"CHHeaterCurveDisplacement\") { continue; }\n    \n    htmlt += '<table width=\"100%\"><tr><td>' + key + '</td><td align=\"right\">' + msg.payload[key] + '</td></tr><table>';\n}\n\nhtmlt += '';\n\nhtmlt = htmlt.replace(/Exchanger/g, \"\");\n\nmsg.payload=htmlt;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 580,
        "wires": [
            [
                "50f58c2.209ba74"
            ]
        ]
    },
    {
        "id": "95990221.d8463",
        "type": "ui_template",
        "z": "e090c99b.574098",
        "group": "ebf0a5bd.363498",
        "name": "",
        "order": 11,
        "width": "6",
        "height": "2",
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1300,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8b6dc809.fa87e8",
        "type": "ui_template",
        "z": "e090c99b.574098",
        "group": "dd8470c4.5741b",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "9",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "291a49eb.d2c446",
        "type": "catch",
        "z": "e090c99b.574098",
        "name": "",
        "scope": [
            "8ebd4192.9d6",
            "247cc8a4.66a238",
            "2333c6e6.0770ca",
            "21b29b43.4b7554",
            "7114f648.fb37f8",
            "edc27520.dde888",
            "9965ec59.0de9c",
            "5c0853e4.8b9d5c"
        ],
        "x": 1140,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "2cd22793.052278",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "load",
        "func": "// temp\nif (!msg.payload) { return null; }\n\nmsg.usb = msg.payload;\n\nif (msg.topic==\"usb\") { flow.set(\"usbpressed\",msg.payload); }\n\nif (!flow.get(\"DAT\"+msg.usb)) { return null; }\n\n\nmsg2={};\nmsg3={};\nmsg4={};\nmsg5={};\n\nmsg6={};\n\nmsg.payload = flow.get(\"DAT\"+msg.usb);  // the new stuff\n\n\nmsg2.payload = flow.get(\"STAT\"+msg.usb);  // the new stuff\n\n\nmsg3.payload = flow.get(\"PARAM\"+msg.usb);  // the new stuff\n\n\n\nif (flow.get(\"serial\"+msg.usb)) {\n    msg4.payload = flow.get(\"settings.\"+flow.get(\"serial\"+msg.usb));  // the new stuff\n}\nmsg5.payload = flow.get(\"serial\"+msg.usb);  // the new stuff\n\n\n\nif(msg.topic!=\"usb\") { msg6 = null; }\nelse { \n    \n    msg6.payload = flow.get(\"usbpressed\"); \n    msg6.topic = \"usb\";\n    \n}\n\nreturn [msg,msg2,msg3,msg4,msg5,msg6];",
        "outputs": "6",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "a1c76865.5bd338"
            ],
            [
                "81eaf0f3.8b0b6"
            ],
            [
                "50bcff0b.7bdac"
            ],
            [
                "77cc7d0d.b5e584"
            ],
            [
                "8e5ba307.84dc9"
            ],
            [
                "a0ecb5e7.79b9b8",
                "6b4ac5ad.5c873c"
            ]
        ]
    },
    {
        "id": "54447c37.15fb74",
        "type": "ui_template",
        "z": "e090c99b.574098",
        "group": "6b255050.f88d1",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "13",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "a1c76865.5bd338",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "var htmlt = '';\n\nfor (var key in msg.payload) {\n    htmlt += '<table width=\"100%\"><tr><td>' + key + '</td><td align=\"right\">' + msg.payload[key] + '</td></tr><table>';\n}\n\nhtmlt += '';\n\nhtmlt = htmlt.replace(/Exchanger/g, \"\");\n\nhtmlt = htmlt.replace(\"st\", \"State\");\nhtmlt = htmlt.replace(\"fC\", \"DHW Flow Rate [l/m]\");\nhtmlt = htmlt.replace(\"tCo\", \"DHW Output Temperatute [C]\");\nhtmlt = htmlt.replace(\"tH\", \"Primary Flow Temp [C]\");\nhtmlt = htmlt.replace(\"tHoDHW\", \"Primary Rtn Temp DHW [C]\");\nhtmlt = htmlt.replace(\"tHoCH\", \"Primary Rtn Temp CH [C]\");\nhtmlt = htmlt.replace(\"tHoDHW\", \"Primary Rtn Temp DHW [C]\");\nhtmlt = htmlt.replace(\"xDHW\", \"Valve Position DHW\");\nhtmlt = htmlt.replace(\"xCH\", \"Valve Position CH\");\nhtmlt = htmlt.replace(\"stat\", \"Room Thermostat\");\nhtmlt = htmlt.replace(\"dpH\", \"Primary Diff Pressure [bar]\");\nhtmlt = htmlt.replace(\"fHDHW\", \"Primary Flow Rate DHW [l/m]\");\nhtmlt = htmlt.replace(\"fHCH\", \"Primary Flow Rate CH [l/m]\");\nhtmlt = htmlt.replace(\"eT\", \"Temp Error DHW [C]\");\n\nhtmlt = htmlt.replace(\"TTdhw\", \"Setpoint DHW [C]\");\nhtmlt = htmlt.replace(\"eS\", \"Error State\");\nhtmlt = htmlt.replace(\"tCHo\", \"CH Output Temp [C]\");\nhtmlt = htmlt.replace(\"pCH\", \"CH System Pressure [bar]\");\nhtmlt = htmlt.replace(\"pump\", \"CH Pump\");\n\n\n\nmsg.payload=htmlt;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 460,
        "wires": [
            [
                "54447c37.15fb74"
            ]
        ]
    },
    {
        "id": "caf3f900.f20a08",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1780,
        "wires": []
    },
    {
        "id": "823187f.87cad78",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 1,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-refresh",
        "payload": "usb0",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "3038fc32.e7a514",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb1",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 400,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "3859a9a7.7475f6",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 3,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb2",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "c657e7c8.39deb8",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 4,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb3",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 480,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "600c9033.80d35",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 5,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb4",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb4",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 520,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "79b04057.8be9d",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 7,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb5",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb5",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "874a2935.2ffd98",
        "type": "ui_template",
        "z": "e090c99b.574098",
        "d": true,
        "group": "ebf0a5bd.363498",
        "name": "",
        "order": 12,
        "width": "6",
        "height": "9",
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1300,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8e5ba307.84dc9",
        "type": "template",
        "z": "e090c99b.574098",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img src=\"https://zxing.org/w/chart?cht=qr&chs=350x350&chld=L&choe=UTF-8&chl=http%3A%2F%2Fheatweb.info%2Fpair%3Fserial%3D{{payload}}\" width=\"100%\">\n<p>\n<a target=\"_blank\" href=\"https://hw1.ddns.net/graph?show=//{{payload}}//fC,//{{payload}}//tCo,//{{payload}}//tH,//{{payload}}//tHoCH,//{{payload}}//dpH,//{{payload}}//pCH\">Graph</a>\n</p>",
        "output": "str",
        "x": 1150,
        "y": 620,
        "wires": [
            [
                "874a2935.2ffd98"
            ]
        ]
    },
    {
        "id": "c53592d3.3f577",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "a94c5afd.b2653"
        ],
        "x": 1330.714111328125,
        "y": 682.8571166992188,
        "wires": []
    },
    {
        "id": "5f60d37a.24fb8c",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb0",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 412.5000305175781,
        "y": 359.99998664855957,
        "wires": [
            [
                "823187f.87cad78"
            ]
        ]
    },
    {
        "id": "10429b7d.561255",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb4",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 412.5000305175781,
        "y": 519.9999866485596,
        "wires": [
            [
                "600c9033.80d35"
            ]
        ]
    },
    {
        "id": "3cc36d6a.fb4b42",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 412.5000305175781,
        "y": 399.99998664855957,
        "wires": [
            [
                "3038fc32.e7a514"
            ]
        ]
    },
    {
        "id": "2aea8ca4.03b0f4",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb2",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 412.5000305175781,
        "y": 439.99998664855957,
        "wires": [
            [
                "3859a9a7.7475f6"
            ]
        ]
    },
    {
        "id": "a6983b4c.4cd708",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb3",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 412.5000305175781,
        "y": 479.99998664855957,
        "wires": [
            [
                "c657e7c8.39deb8"
            ]
        ]
    },
    {
        "id": "983cd8d3.9d9938",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb5",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 412.5000305175781,
        "y": 559.9999866485596,
        "wires": [
            [
                "79b04057.8be9d"
            ]
        ]
    },
    {
        "id": "3305d091.c096f",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "5f60d37a.24fb8c",
                "10429b7d.561255",
                "3cc36d6a.fb4b42",
                "2aea8ca4.03b0f4",
                "a6983b4c.4cd708",
                "983cd8d3.9d9938",
                "a168a7b0.53fae8",
                "ccd361d2.a4ace",
                "2efd20a2.eaf35"
            ]
        ]
    },
    {
        "id": "1af1b245.29871e",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 740,
        "wires": [
            [
                "86467c5a.1aff"
            ]
        ]
    },
    {
        "id": "86467c5a.1aff",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "usbpressed",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 740,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "a0ecb5e7.79b9b8",
        "type": "rbe",
        "z": "e090c99b.574098",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 990,
        "y": 680,
        "wires": [
            [
                "829aaf4a.d052"
            ]
        ]
    },
    {
        "id": "6510b41f.6bc12c",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 955,
        "y": 1980,
        "wires": []
    },
    {
        "id": "c31b8ba8.42cfc8",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 2535,
        "y": 2420,
        "wires": []
    },
    {
        "id": "e1ac49b3.759af8",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "4a684f33.663d2"
        ],
        "x": 1695,
        "y": 980,
        "wires": []
    },
    {
        "id": "af218e56.02cb6",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 710,
        "y": 800,
        "wires": []
    },
    {
        "id": "6b4ac5ad.5c873c",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "10",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 1007.8570556640625,
        "y": 726.28564453125,
        "wires": [
            [
                "829aaf4a.d052"
            ]
        ]
    },
    {
        "id": "829aaf4a.d052",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "outputs": 1,
        "x": 1204.9996337890625,
        "y": 683.4285583496094,
        "wires": [
            [
                "c53592d3.3f577"
            ]
        ]
    },
    {
        "id": "6a69b8cd.2317d",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "remoteon",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 813.5,
        "y": 1979,
        "wires": [
            [
                "6510b41f.6bc12c",
                "cfeb38ad.e3a498"
            ]
        ]
    },
    {
        "id": "13971384.630f04",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 749,
        "y": 1898,
        "wires": [
            [
                "a1dcd649.5d18d"
            ]
        ]
    },
    {
        "id": "ee829a3d.8e04a",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "remoteon",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1135,
        "y": 1898,
        "wires": [
            []
        ]
    },
    {
        "id": "a1dcd649.5d18d",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "units": "min",
        "reset": "",
        "outputs": 1,
        "x": 920,
        "y": 1898,
        "wires": [
            [
                "ee829a3d.8e04a"
            ]
        ]
    },
    {
        "id": "cfeb38ad.e3a498",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "DAT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STAT",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 970,
        "y": 2040,
        "wires": [
            [],
            [],
            [
                "220d0690.2e7622"
            ]
        ]
    },
    {
        "id": "a1b2f12d.f8706",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "delay",
        "func": "\nvar tdiff = msg.timenow - flow.get(\"time\"+msg.usb);\n\nif (tdiff>500 && tdiff<2000) { msg.delay=1400 - tdiff; }\n\nelse { msg.delay=0; }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1600,
        "wires": [
            [
                "836eb2b0.3535c"
            ]
        ]
    },
    {
        "id": "836eb2b0.3535c",
        "type": "delay",
        "z": "e090c99b.574098",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 545,
        "y": 1602,
        "wires": [
            [
                "ea7ad72e.e28e98"
            ]
        ]
    },
    {
        "id": "3ed73fdc.a3566",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timenow",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 253,
        "y": 1522,
        "wires": [
            [
                "ea7ad72e.e28e98"
            ]
        ]
    },
    {
        "id": "220cf00f.e8bf9",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "usb0",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "usb",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "usb",
        "payload": "usb0",
        "payloadType": "str",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "e6f1555b.8808f8"
            ]
        ]
    },
    {
        "id": "e6f1555b.8808f8",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 900,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "5a140267.23ec1c",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1200,
        "y": 820,
        "wires": [
            [
                "cd8a0d65.18123"
            ]
        ]
    },
    {
        "id": "cd8a0d65.18123",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "\n\nvar diff = parseInt((msg.payload - flow.get(\"timeusb0\"))/1000);\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "3e749186.082526",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "f61a6e0.b545c9"
            ]
        ]
    },
    {
        "id": "1230cc95.667d03",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "SYNC",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 2120,
        "wires": [
            [],
            [
                "69c68941.83f0d8"
            ]
        ]
    },
    {
        "id": "5c0ee1b0.724e7",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb1",
        "payloadType": "str",
        "x": 220,
        "y": 940,
        "wires": [
            [
                "d76f2e52.668e98"
            ]
        ]
    },
    {
        "id": "d76f2e52.668e98",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "11",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 940,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "51c8d547.8d428c",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb2",
        "payloadType": "str",
        "x": 220,
        "y": 980,
        "wires": [
            [
                "e4ace55e.211708"
            ]
        ]
    },
    {
        "id": "e4ace55e.211708",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "12",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 980,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "34cf6237.e40e1e",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb3",
        "payloadType": "str",
        "x": 220,
        "y": 1020,
        "wires": [
            [
                "3e058afd.f110c6"
            ]
        ]
    },
    {
        "id": "3e058afd.f110c6",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "13",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "6dd9d6be.4b0f18",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb4",
        "payloadType": "str",
        "x": 220,
        "y": 1060,
        "wires": [
            [
                "adbed913.0fefa"
            ]
        ]
    },
    {
        "id": "adbed913.0fefa",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "14",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "2055d91d.bac5ee",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb5",
        "payloadType": "str",
        "x": 220,
        "y": 1100,
        "wires": [
            [
                "2af7e1ee.e004a6"
            ]
        ]
    },
    {
        "id": "2af7e1ee.e004a6",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "15",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "86ced5b9.366c7",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb6",
        "payloadType": "str",
        "x": 220,
        "y": 1140,
        "wires": [
            [
                "d7115b56.8e2de8"
            ]
        ]
    },
    {
        "id": "d7115b56.8e2de8",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "16",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "b294a92d.c88fd8",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb7",
        "payloadType": "str",
        "x": 220,
        "y": 1180,
        "wires": [
            [
                "84d93c65.10b0e8"
            ]
        ]
    },
    {
        "id": "84d93c65.10b0e8",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "17",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "dc4d6a72.bf68d8",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "Stagnation Test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "172800",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "usb0,usb1,usb2,usb3,usb4,usb5,usb6,usb7",
        "payloadType": "str",
        "x": 230,
        "y": 2700,
        "wires": [
            [
                "5b45faf1.3c07b4"
            ]
        ]
    },
    {
        "id": "1d2066da.800bc9",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "msg.usb = msg.payload;\n    \n    var vHlast = flow.get(\"vHlast\"+msg.usb) || 0.0;\n    var vH = flow.get(\"vH\"+msg.usb) || 0.0;\n    \n    flow.set(\"vHlast\"+msg.usb, vH);\n    \n    if(vH - vHlast < 10) { msg.payload=\"1\"; msg.topic = msg.usb + \"/DHWAntiLegionella\"; }\n    \n    else { msg.payload=\"0\"; msg.topic = msg.usb + \"/DHWAntiLegionella\"; }\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 2700,
        "wires": [
            [
                "fa64984b.9d27e8",
                "393dd622.9eb02a"
            ]
        ]
    },
    {
        "id": "5b45faf1.3c07b4",
        "type": "split",
        "z": "e090c99b.574098",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 390,
        "y": 2700,
        "wires": [
            [
                "1f1830bb.662a4f"
            ]
        ]
    },
    {
        "id": "fa64984b.9d27e8",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": false,
        "complete": "false",
        "x": 930,
        "y": 2740,
        "wires": []
    },
    {
        "id": "393dd622.9eb02a",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "254c663c.1890fa"
        ],
        "x": 875,
        "y": 2700,
        "wires": []
    },
    {
        "id": "254c663c.1890fa",
        "type": "link in",
        "z": "e090c99b.574098",
        "name": "setHIU",
        "links": [
            "393dd622.9eb02a",
            "2dde7725.9f7118",
            "97c0549d.c9f938"
        ],
        "x": 955,
        "y": 1280,
        "wires": [
            [
                "e6baf0c.cfa1a1",
                "5da0cba.37e1234"
            ]
        ]
    },
    {
        "id": "1f1830bb.662a4f",
        "type": "delay",
        "z": "e090c99b.574098",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 580,
        "y": 2700,
        "wires": [
            [
                "1d2066da.800bc9"
            ]
        ]
    },
    {
        "id": "5870a8e3.65fc5",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1590,
        "y": 2340,
        "wires": [
            [
                "9eee7ae5.b3149"
            ]
        ]
    },
    {
        "id": "9eee7ae5.b3149",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 2380,
        "wires": [
            [
                "80680e.79bae7f",
                "109e1397.f04abc"
            ]
        ]
    },
    {
        "id": "d9bc085f.284af",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1730,
        "y": 2420,
        "wires": [
            [
                "1ae690c8.0e242f",
                "94c0863.cefb378"
            ]
        ]
    },
    {
        "id": "c1cb144a.bd615",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 6,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb6",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb6",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 580.0000305175781,
        "y": 601.2500019073486,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "c947fa1f.37ff1",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 8,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb7",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb7",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 640,
        "wires": [
            [
                "2cd22793.052278"
            ]
        ]
    },
    {
        "id": "a168a7b0.53fae8",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb6",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 422.50006103515625,
        "y": 601.2499885559082,
        "wires": [
            [
                "c1cb144a.bd615"
            ]
        ]
    },
    {
        "id": "ccd361d2.a4ace",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb7",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 422.50006103515625,
        "y": 641.2499885559082,
        "wires": [
            [
                "c947fa1f.37ff1"
            ]
        ]
    },
    {
        "id": "4c4a7299.aeed24",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1030,
        "y": 1000,
        "wires": []
    },
    {
        "id": "77ac40ab.f2d73",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "dchk",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 2240,
        "wires": [
            [
                "82c5c5e7.f10798",
                "93cb53b7.91a218",
                "be865f3b.a7ae2"
            ],
            [
                "efc89f84.cbee18",
                "7e22f7b8.8a3448"
            ]
        ]
    },
    {
        "id": "69c68941.83f0d8",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "Check Data",
        "rules": [
            {
                "t": "set",
                "p": "dchk",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": "\\w",
                "fromt": "re",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": "\\.",
                "fromt": "re",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": ",",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": "\\n",
                "fromt": "re",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": "-",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": "\\r",
                "fromt": "re",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": ";",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": ":",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "dchk",
                "pt": "msg",
                "from": " ",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2180,
        "wires": [
            [
                "77ac40ab.f2d73"
            ]
        ]
    },
    {
        "id": "7e22f7b8.8a3448",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 870,
        "y": 2260,
        "wires": []
    },
    {
        "id": "efc89f84.cbee18",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "corrupt",
        "func": "\nmsg.topic = \"alarm/\" + msg.usb;\nmsg.payload = \"Corrupt Data\";\n\n\nreturn msg; \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2220,
        "wires": [
            [
                "80680e.79bae7f"
            ]
        ]
    },
    {
        "id": "93cb53b7.91a218",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "ok",
        "func": "\nmsg.topic = \"alarm/\" + msg.usb;\nmsg.payload = \"ok\";\n\n\nreturn msg; \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "18c8e22a.01777e"
            ]
        ]
    },
    {
        "id": "18c8e22a.01777e",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "outputs": 1,
        "x": 1070,
        "y": 2180,
        "wires": [
            [
                "80680e.79bae7f"
            ]
        ]
    },
    {
        "id": "51d3e9e5.127b68",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 715,
        "y": 1300,
        "wires": []
    },
    {
        "id": "c9049e48.91a06",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1300,
        "wires": [
            [
                "ae9f7fb7.1471c"
            ]
        ]
    },
    {
        "id": "ae9f7fb7.1471c",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "51",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "1302f031aea90ca4/set/setpoint",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1300,
        "wires": [
            [
                "51d3e9e5.127b68"
            ]
        ]
    },
    {
        "id": "342fdd27.68b062",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "Standard Calculations",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "calculations",
        "payload": "[{\"topic\":\"stat/vwatCo24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"weightedAverage\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/tCo\",\"dat/fC\"],\"title\":\"Volume weighted average tap temp for today\",\"units\":\"°C\",\"points\":365,\"deadband\":0.5},{\"topic\":\"stat/vwatHo24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"weightedAverage\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/tHo\",\"dat/fH\"],\"title\":\"Volume weighted average return temp for today\",\"units\":\"°C\",\"points\":365,\"deadband\":0.5},{\"topic\":\"stat/vwatHoCH24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"weightedAverage\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/tHoCH\",\"dat/fHCH\"],\"title\":\"Volume weighted average return temp for today CH\",\"units\":\"°C\",\"points\":365,\"deadband\":0.5},{\"topic\":\"stat/vwatHoDHW24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"weightedAverage\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/tHoDHW\",\"dat/fHDHW\"],\"title\":\"Volume weighted average return temp for today DHW\",\"units\":\"°C\",\"points\":365,\"deadband\":0.5},{\"topic\":\"stat/vwatH24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"weightedAverage\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/tH\",\"dat/fH\"],\"title\":\"Volume weighted average flow temp for today\",\"units\":\"°C\",\"points\":365,\"deadband\":0.5},{\"topic\":\"stat/vH24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/fH\",60],\"title\":\"Primary volume for today\",\"units\":\"litres\",\"points\":365,\"deadband\":5},{\"topic\":\"stat/vHCH24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/fHCH\",60],\"title\":\"Primary volume for today for Central Heating\",\"units\":\"litres\",\"points\":365,\"deadband\":5},{\"topic\":\"stat/vHDHW24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/fHDHW\",60],\"title\":\"Primary volume for today for Hot Water\",\"units\":\"litres\",\"points\":365,\"deadband\":5},{\"topic\":\"stat/vC24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"dat/fC\",60],\"title\":\"Tap volume for today\",\"units\":\"litres\",\"points\":365,\"deadband\":1},{\"topic\":\"dat/tDiff\",\"filter\":\"+/+/+/dat/#\",\"eval\":\"function (a, b) { return a - b; }\",\"parameters\":[\"tH\",\"tHo\"],\"title\":\"Primary temperature drop\",\"units\":\"°C\",\"deadband\":0.5},{\"topic\":\"stat/kwhH24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"parameters\":[\"dat/kwH\",3600],\"wipe\":\"daily\",\"title\":\"Primary Energy for today\",\"units\":\"kWh\",\"deadband\":0.1},{\"topic\":\"stat/kwhCH24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"parameters\":[\"dat/kwHCH\",3600],\"wipe\":\"daily\",\"title\":\"Primary Energy for today CH\",\"units\":\"kWh\",\"deadband\":0.1},{\"topic\":\"stat/kwhDHW24\",\"filter\":\"+/+/+/dat/#\",\"function\":\"integrate\",\"parameters\":[\"dat/kwHDHW\",3600],\"wipe\":\"daily\",\"title\":\"Primary Energy for today DHW\",\"units\":\"kWh\",\"deadband\":0.1},{\"topic\":\"meter/tDiff\",\"filter\":\"+/+/+/meter/#\",\"eval\":\"function (a, b) { return a - b; }\",\"parameters\":[\"tF\",\"tR\"],\"title\":\"Primary temperature drop\",\"units\":\"°C\"},{\"topic\":\"stat/vwatR24\",\"filter\":\"+/+/+/meter/#\",\"function\":\"weightedAverage\",\"save\":\"daily\",\"wipe\":\"daily\",\"parameters\":[\"meter/tR\",\"dat/fR\"],\"title\":\"Volume weighted average return temp for today (meter)\",\"units\":\"°C\",\"points\":365,\"deadband\":0.5},{\"topic\":\"tDiff\",\"filter\":\"+/+/+/dat/#\",\"eval\":\"function (a, b) { return a - b; }\",\"parameters\":[\"tIn\",\"tOut\"],\"title\":\"Primary temperature drop\",\"units\":\"°C\"}]",
        "payloadType": "json",
        "x": 1840,
        "y": 2300,
        "wires": [
            [
                "7d2fa481.1baf3c"
            ]
        ]
    },
    {
        "id": "94c0863.cefb378",
        "type": "heatwebCalc",
        "z": "e090c99b.574098",
        "name": "",
        "x": 1970,
        "y": 2420,
        "wires": [
            [
                "9617953e.fc1b58",
                "5433ed94.32bfc4"
            ]
        ]
    },
    {
        "id": "7d2fa481.1baf3c",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "calculations",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2072.5,
        "y": 2300.25,
        "wires": [
            []
        ]
    },
    {
        "id": "9617953e.fc1b58",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 2540,
        "wires": []
    },
    {
        "id": "9ca94a7a.d971a8",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1360,
        "wires": [
            [
                "88afb8d1.7086c8"
            ]
        ]
    },
    {
        "id": "88afb8d1.7086c8",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "1302f031aea90ca4/set/EcoMode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1360,
        "wires": [
            [
                "51d3e9e5.127b68"
            ]
        ]
    },
    {
        "id": "e6baf0c.cfa1a1",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "hsf",
        "func": "\n//if (!msg.usb) { msg.usb=\"usb0\"; } \n\nif (msg.topic.split(\"/\")[3]!==\"set\") { return null; }\n\nif (!msg.usb) { \n     \n    var hiuser  = msg.topic.split(\"/\")[2];\n    if (flow.get(\"serialusb\" + hiuser)) { msg.usb = flow.get(\"serialusb\" + hiuser); }\n    \n    else { return null; }\n     \n }\n\nmsg.mqtttopic = msg.topic;\nmsg.topic = msg.topic.split(\"/\")[4];\n\nswitch(msg.topic) {\n    case \"setpoint\":\n        msg.hsfcode = 9;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n    case \"PressureMode\":\n        msg.hsfcode = 11;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n    case \"WarmupBoost\": //WarmupBoost \n        msg.hsfcode = 12;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n    case \"EcoMode\": // \n        msg.hsfcode = 10;\n        msg.type = \"onoff\";\n        break;\n \n    case \"DHWAntiLegionella\": //DHWAntiLegionella  \n        msg.hsfcode = 34;\n        msg.type = \"onoff\";\n        break;\n        \n    case \"DHWEcoHeatTemp\": // \n        msg.hsfcode = 33;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n     case \"DHWEcoHeatTemperature\": // \n        msg.hsfcode = 33;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n \n    case \"DHWExchangerAntiLegionella\": //DHWAntiLegionella  \n        msg.hsfcode = 34;\n        msg.type = \"onoff\";\n        break;\n        \n    case \"DHWExchangerEcoHeatTemp\": // \n        msg.hsfcode = 33;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n     case \"DHWExchangerEcoHeatTemperature\": // \n        msg.hsfcode = 33;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n          \n    case \"DHReturnLimit\": //   \n        msg.hsfcode = 21;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n    case \"DHWEcoHeatTime\": // \n        msg.hsfcode = 32;\n        msg.type = \"number\";\n        msg.multiply = 1;\n        break;\n        \n    case \"HESupply\": //   \n        msg.hsfcode = 22;\n        msg.type = \"number\";\n        msg.multiply = 100;\n        break;\n        \n    case \"PumpTimeout\": //   \n        msg.hsfcode = 23;\n        msg.type = \"number\";\n        msg.multiply = 1;\n        break;\n    \n    case \"HEProtectionMode\": //   \n        msg.hsfcode = 24;\n        msg.type = \"onoff\";\n        break;\n        \n        \n    case \"CentralHeatingControl\": //\n        msg.hsfcode = 38;\n        msg.type = \"onoff\";\n        break;\n       \n    case \"PrePayShutOff\": //\n        msg.hsfcode = 39;\n        msg.type = \"onoff\";\n        break;\n       \n        \n    default: \n        return null;\n} \n\n\nmsg.topic = msg.mqtttopic;\n\n//msg.payload = \"Changing \"\n\n//global.set(\"modbus.\"+msg.usb+\".34\",parseInt(DAT.CentralHeatingControl));\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1280,
        "wires": [
            [
                "653a61c.bdad3a",
                "d2f75ba3.2aea28"
            ]
        ]
    },
    {
        "id": "5da0cba.37e1234",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 1220,
        "wires": []
    },
    {
        "id": "653a61c.bdad3a",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d2f75ba3.2aea28",
        "type": "delay",
        "z": "e090c99b.574098",
        "name": "",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 1310,
        "y": 1280,
        "wires": [
            [
                "22743bee.7ee424",
                "ff5c821f.bfd7b"
            ]
        ]
    },
    {
        "id": "22743bee.7ee424",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1490,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ff5c821f.bfd7b",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "set HIU",
        "func": " \n var tosend = \"\";\n \n var msg2 = {};\n \n function convertSet(setp) {\n     \n     \n    //var setdec = 100 * parseFloat(setp);\n    var setdec = parseFloat(setp);\n\t\n    var b3 = Math.floor(setdec / 256);\n    var b4 = setdec % 256;\n\n    var cs = String.fromCharCode(0) +  String.fromCharCode(0) + String.fromCharCode(parseInt(b3)) + String.fromCharCode(parseInt(b4)) ;\n\t\n\treturn cs;\n\n }\n \n if (msg.type == \"onoff\") {\n \n    if (parseInt(msg.payload) == 1 || msg.payload == \"on\" || msg.payload == \"comfort\" ) { \n        \n        msg.payload = 1;\n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(msg.hsfcode) + String.fromCharCode(1) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n \n    } else { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(msg.hsfcode) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n        \n    }\n\n}\nelse if (msg.type == \"number\") {\n\n    if (msg.payload == \"auto\") { \n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(msg.hsfcode) + String.fromCharCode(255) + String.fromCharCode(255) + String.fromCharCode(255) + String.fromCharCode(255) + String.fromCharCode(59);\n \n    } else { \n        \n\n        \n        var mult = msg.multiply || 1;\n        var newnum = parseInt(parseFloat(msg.payload) * mult);\n        \n        tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(msg.hsfcode) + convertSet(newnum) + String.fromCharCode(59);\n    }\n}\n\nelse { return null;  }\n\n\n\nmsg.payload = tosend;\n\nreturn msg;\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1500,
        "y": 1280,
        "wires": [
            [
                "71906759.ffcf98",
                "76dccbf0.a9f6c4",
                "81332b0d.7dd508",
                "ebc4393.41ed6c8",
                "b4966ee9.7405f",
                "b09bf03862f08c34"
            ]
        ]
    },
    {
        "id": "71906759.ffcf98",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1000",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1700,
        "y": 1100,
        "wires": [
            [
                "50155950.a56f68"
            ]
        ]
    },
    {
        "id": "76dccbf0.a9f6c4",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "pass",
        "func": "\n\nmsg.payload  = Buffer.from(msg.payload, 'ascii');\n\nmsg.topic=msg.usb;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2006.6667175292969,
        "y": 1283.1166381835938,
        "wires": [
            [
                "a95ff6c7.c53898",
                "5111f409.43cbdc"
            ]
        ]
    },
    {
        "id": "81332b0d.7dd508",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "outputs": 1,
        "x": 1676.6667175292969,
        "y": 1328.8165893554688,
        "wires": [
            [
                "9afd8698.1c3b18"
            ]
        ]
    },
    {
        "id": "50155950.a56f68",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "store HIU",
        "func": "var tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(13) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59)\n\n//msg.usb=\"usb1\";\n\nmsg.payload = tosend;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1860,
        "y": 1120,
        "wires": [
            [
                "76dccbf0.a9f6c4"
            ]
        ]
    },
    {
        "id": "9afd8698.1c3b18",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "parameters",
        "func": "var tosend = String.fromCharCode(83) + String.fromCharCode(89) + String.fromCharCode(78) + String.fromCharCode(67) + String.fromCharCode(14) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(59);\n \n\nmsg.payload = tosend;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1857.6667175292969,
        "y": 1328.8165893554688,
        "wires": [
            [
                "76dccbf0.a9f6c4"
            ]
        ]
    },
    {
        "id": "a95ff6c7.c53898",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2180,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5111f409.43cbdc",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "c88e7b3e.9bae08"
        ],
        "x": 2155,
        "y": 1320,
        "wires": []
    },
    {
        "id": "86408caa.220f5",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1290,
        "y": 1480,
        "wires": [
            [
                "344167ec.c02ec8"
            ]
        ]
    },
    {
        "id": "344167ec.c02ec8",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "\n\n\n\n\n\nmsg.options = [\"setpoint\",\"WarmupBoost\",\"EcoMode\",\"PressureMode\",\"DHReturnLimit\",\"HESupply\",\"PumpTimeout\",\"PumpProtection\",\"HEProtectionMode\",\"DHWAntiLegionella\",\"DHWEcoHeatTemperature\",\"DHWEcoHeatTime\",\"CentralHeatingControl\",\"PrePayShutOff\"];\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1480,
        "wires": [
            [
                "de36ffeb.6f329"
            ]
        ]
    },
    {
        "id": "7c34254.4e45fdc",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "name": "",
        "group": "c00ac9a8.47bd28",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "SET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1610,
        "y": 1620,
        "wires": [
            [
                "b3c61262.c74a5"
            ]
        ]
    },
    {
        "id": "221ce459.841a3c",
        "type": "ui_text_input",
        "z": "e090c99b.574098",
        "name": "",
        "label": "Value",
        "tooltip": "",
        "group": "c00ac9a8.47bd28",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1970,
        "y": 1480,
        "wires": [
            [
                "17ac0198.4b837e"
            ]
        ]
    },
    {
        "id": "de36ffeb.6f329",
        "type": "ui_dropdown",
        "z": "e090c99b.574098",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "c00ac9a8.47bd28",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1620,
        "y": 1480,
        "wires": [
            [
                "bc85bfe7.1e0f4"
            ]
        ]
    },
    {
        "id": "17ac0198.4b837e",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "valueSetting",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "b3c61262.c74a5",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "msg.usb = flow.get(\"usbpressed\");\n\nvar dev = flow.get(\"serial\"+msg.usb); \n\nmsg.topic = dev + \"/set/\" + flow.get(\"selectedSetting\");\nmsg.payload = flow.get(\"valueSetting\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1620,
        "wires": [
            [
                "39c23cc0.631514",
                "7a1d48c8.e410e8"
            ]
        ]
    },
    {
        "id": "7a1d48c8.e410e8",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1955,
        "y": 1620,
        "wires": []
    },
    {
        "id": "39c23cc0.631514",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1850,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7721122e.3eb56c",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1320,
        "wires": []
    },
    {
        "id": "bc85bfe7.1e0f4",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "flow.set(\"selectedSetting\",msg.payload);\n\nmsg.usb = flow.get(\"usbpressed\");\n\nvar dev = flow.get(\"serial\"+msg.usb); \n\n//msg.topic = dev + \"/set/\" + flow.get(\"selectedSetting\");\nmsg.payload = flow.get(\"settings.\"+dev+\".\"+flow.get(\"selectedSetting\"));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1480,
        "wires": [
            [
                "221ce459.841a3c"
            ]
        ]
    },
    {
        "id": "1ae690c8.0e242f",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "lastvCtime",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1770,
        "y": 2520,
        "wires": [
            [
                "71d99bf5.878f74"
            ]
        ]
    },
    {
        "id": "20dd7797.de84a8",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "5e093f5a.09171"
        ],
        "x": 1935,
        "y": 2660,
        "wires": []
    },
    {
        "id": "71d99bf5.878f74",
        "type": "rbe",
        "z": "e090c99b.574098",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1780,
        "y": 2560,
        "wires": [
            [
                "94441d57.f847e"
            ]
        ]
    },
    {
        "id": "94441d57.f847e",
        "type": "delay",
        "z": "e090c99b.574098",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1840,
        "y": 2600,
        "wires": [
            [
                "20dd7797.de84a8"
            ]
        ]
    },
    {
        "id": "5433ed94.32bfc4",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "local/me/",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "points",
                "pt": "msg",
                "to": "5000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2420,
        "wires": [
            [
                "acfb1a7.c3786e8",
                "6bcdff38.b3c4"
            ]
        ]
    },
    {
        "id": "acfb1a7.c3786e8",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 2520,
        "wires": []
    },
    {
        "id": "91fe2822.efb178",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "Sync Settings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 2880,
        "wires": [
            [
                "b591f3ec.cb462"
            ]
        ]
    },
    {
        "id": "97774ec8.e383e",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "var clist = [];\n\nfor (var dev in flow.get(\"settings\")) {\n    \n    if (dev !== \"undefined\") {\n        \n        for (var ss in flow.get(\"settings.\"+dev)) {\n    \n            if (global.get(\"deviceSettings.\"+dev+\".\"+ss)) {\n                \n                var sv = global.get(\"deviceSettings.\"+dev+\".\"+ss+\".value\");\n                var hv = flow.get(\"settings.\"+dev+\".\"+ss);\n                \n                if (!isNaN(sv)) { sv = parseFloat(sv);  hv = parseFloat(hv); }\n                \n                if (sv !== hv) { clist.push(\"local/testset/\"+dev+\"/set/\"+ss+\"=\"+sv); }\n            }\n        }\n        \n        \n    }\n}\n\nmsg.payload = clist;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 2880,
        "wires": [
            [
                "d43831f0.d55ea"
            ]
        ]
    },
    {
        "id": "774c60e2.98da7",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 2960,
        "wires": []
    },
    {
        "id": "97c0549d.c9f938",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "254c663c.1890fa"
        ],
        "x": 1855,
        "y": 2880,
        "wires": []
    },
    {
        "id": "d43831f0.d55ea",
        "type": "split",
        "z": "e090c99b.574098",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1460,
        "y": 2880,
        "wires": [
            [
                "3bce696e.1e8e66"
            ]
        ]
    },
    {
        "id": "3bce696e.1e8e66",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "\nmsg.topic = msg.payload.split(\"=\")[0];\nmsg.payload = msg.payload.split(\"=\")[1]\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2880,
        "wires": [
            [
                "774c60e2.98da7",
                "97c0549d.c9f938"
            ]
        ]
    },
    {
        "id": "8b0d424e.23e6e",
        "type": "link in",
        "z": "e090c99b.574098",
        "name": "checkSettings",
        "links": [
            "27ae5770.285ac8"
        ],
        "x": 975,
        "y": 2940,
        "wires": [
            [
                "b591f3ec.cb462"
            ]
        ]
    },
    {
        "id": "b591f3ec.cb462",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1130,
        "y": 2880,
        "wires": [
            [
                "97774ec8.e383e"
            ]
        ]
    },
    {
        "id": "be865f3b.a7ae2",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "alarm/serial",
        "func": "\nmsg.topic = flow.get(\"serial\" + msg.usb) + \"/alarm/serial\" ;\nmsg.title = \"Serial connection\"\nmsg.payload = \"ok\";\n\n\nreturn msg; \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2120,
        "wires": [
            [
                "42dbf28d.de915c"
            ]
        ]
    },
    {
        "id": "42dbf28d.de915c",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "ok",
        "op2": "no data",
        "op1type": "str",
        "op2type": "str",
        "duration": "11",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1070,
        "y": 2120,
        "wires": [
            [
                "80680e.79bae7f",
                "51f31b26.240574"
            ]
        ]
    },
    {
        "id": "51f31b26.240574",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "HIU connected",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1320,
        "y": 2120,
        "wires": [
            [
                "83d4a4b6.c6a6d8"
            ]
        ]
    },
    {
        "id": "d92284cb.6a8d38",
        "type": "link out",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1695,
        "y": 2120,
        "wires": []
    },
    {
        "id": "83d4a4b6.c6a6d8",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "if (msg.topic.indexOf(\"undefined\")>-1) { return null; }\n\nmsg.topic = msg.topic.split(\"/\")[0] + \"/system/deviceType\";\nmsg.payload = \"hiu\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2120,
        "wires": [
            [
                "d92284cb.6a8d38"
            ]
        ]
    },
    {
        "id": "76341d23.fd8674",
        "type": "inject",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "usb",
        "payload": "usb8",
        "payloadType": "str",
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "fc8593ce.e365"
            ]
        ]
    },
    {
        "id": "fc8593ce.e365",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "18",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 450,
        "y": 1220,
        "wires": [
            [
                "48de6e4e.59652"
            ]
        ]
    },
    {
        "id": "57592c01.cb6174",
        "type": "ui_button",
        "z": "e090c99b.574098",
        "d": true,
        "name": "",
        "group": "ebf0a5bd.363498",
        "order": 9,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "usb8",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "usb7",
        "payloadType": "str",
        "topic": "usb",
        "topicType": "str",
        "x": 570,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "2efd20a2.eaf35",
        "type": "change",
        "z": "e090c99b.574098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "CONusb8",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 422.50006103515625,
        "y": 681.2499885559082,
        "wires": [
            [
                "57592c01.cb6174"
            ]
        ]
    },
    {
        "id": "c648cae4.e65ad8",
        "type": "ui_template",
        "z": "e090c99b.574098",
        "d": true,
        "group": "ebf0a5bd.363498",
        "name": "Virtual Keyboard",
        "order": 10,
        "width": "1",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d97a023d.f8dc1",
        "type": "ui_ui_control",
        "z": "e090c99b.574098",
        "name": "",
        "events": "all",
        "x": 1360,
        "y": 1420,
        "wires": [
            [
                "344167ec.c02ec8"
            ]
        ]
    },
    {
        "id": "824d383f.19eaf8",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "",
        "func": "msg.payload = msg.payload.toString();\n\nmsg.payload = \"/n\" + msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1380,
        "wires": [
            [
                "8ebd4192.9d6"
            ]
        ]
    },
    {
        "id": "ebc4393.41ed6c8",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1500",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1700,
        "y": 1200,
        "wires": [
            [
                "76dccbf0.a9f6c4"
            ]
        ]
    },
    {
        "id": "b4966ee9.7405f",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2500",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1700,
        "y": 1160,
        "wires": [
            [
                "50155950.a56f68"
            ]
        ]
    },
    {
        "id": "6bcdff38.b3c4",
        "type": "switch",
        "z": "e090c99b.574098",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "undefined",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2390,
        "y": 2420,
        "wires": [
            [],
            [
                "c31b8ba8.42cfc8"
            ]
        ]
    },
    {
        "id": "109e1397.f04abc",
        "type": "rbe",
        "z": "e090c99b.574098",
        "name": "",
        "func": "deadbandEq",
        "gap": "0.11",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1620,
        "y": 2460,
        "wires": [
            [
                "d9bc085f.284af"
            ]
        ]
    },
    {
        "id": "f8c126ec.446148",
        "type": "smooth",
        "z": "e090c99b.574098",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "3",
        "round": "1",
        "mult": "multi",
        "reduce": false,
        "x": 1440,
        "y": 2460,
        "wires": [
            [
                "109e1397.f04abc"
            ]
        ]
    },
    {
        "id": "3e7f6d40.8182d2",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "store modbus ama0",
        "func": "\nmsg.usb=\"ama0\";  \nmsg.usbhiu=\"usb0\"; \n\nvar DAT = flow.get(\"DAT\"+msg.usbhiu);  // the new stuff\n\nglobal.set(\"modbus.\"+msg.usb+\".1\",parseInt(10*parseFloat(DAT.tH)));\nglobal.set(\"modbus.\"+msg.usb+\".2\",parseInt(100*parseFloat(DAT.dpH)));\nglobal.set(\"modbus.\"+msg.usb+\".3\",parseInt(DAT.st));\nglobal.set(\"modbus.\"+msg.usb+\".21\",parseInt(10*parseFloat(DAT.tCo)));\nglobal.set(\"modbus.\"+msg.usb+\".42\",parseInt(10*parseFloat(DAT.tHoCH)));\nglobal.set(\"modbus.\"+msg.usb+\".23\",parseInt(DAT.xDHW));\nglobal.set(\"modbus.\"+msg.usb+\".40\",parseInt(DAT.stat));\nglobal.set(\"modbus.\"+msg.usb+\".24\",parseInt(10*parseFloat(DAT.fHDHW)));\n//global.set(\"modbus.\"+msg.usb+\".10\",parseInt(10*parseFloat(DAT.TTdhw)));\nglobal.set(\"modbus.\"+msg.usb+\".22\",parseInt(10*parseFloat(DAT.tHoDHW)));\nglobal.set(\"modbus.\"+msg.usb+\".41\",parseInt(10*parseFloat(DAT.tCHo)));\nglobal.set(\"modbus.\"+msg.usb+\".45\",parseInt(100*parseFloat(DAT.pCH)));\nglobal.set(\"modbus.\"+msg.usb+\".46\",parseInt(DAT.pump));\nglobal.set(\"modbus.\"+msg.usb+\".43\",parseInt(DAT.xCH));\nglobal.set(\"modbus.\"+msg.usb+\".44\",parseInt(10*parseFloat(DAT.fHCH)));\n\nDAT = flow.get(\"STAT\"+msg.usbhiu);  // the new stuff\n\nglobal.set(\"modbus.\"+msg.usb+\".25\",parseInt(DAT.vC));\n\nDAT = flow.get(\"settings.\"+flow.get(\"serial\" + msg.usbhiu));  // the new stuff\n\n\nglobal.set(\"modbus.\"+msg.usb+\".10\",parseInt(10*parseFloat(DAT.setpoint)));\nglobal.set(\"modbus.\"+msg.usb+\".11\",parseInt(10*parseFloat(DAT.WarmupBoost)));\n\nif(DAT.EcoMode==\"comfort\") { global.set(\"modbus.\"+msg.usb+\".12\",0); }\nelse  { global.set(\"modbus.\"+msg.usb+\".12\",1); }\n\nif(DAT.PressureMode==\"auto\") { global.set(\"modbus.\"+msg.usb+\".6\",1); }\nelse  { global.set(\"modbus.\"+msg.usb+\".6\", 0); }\n\nglobal.set(\"modbus.\"+msg.usb+\".4\",parseInt(DAT.PowerUpCounter));\nglobal.set(\"modbus.\"+msg.usb+\".5\",parseInt(DAT.ErrorCounter));\nglobal.set(\"modbus.\"+msg.usb+\".30\",parseInt(10*parseFloat(DAT.DHReturnLimit)));\nglobal.set(\"modbus.\"+msg.usb+\".31\",parseInt(10*parseFloat(DAT.HESupply)));\nglobal.set(\"modbus.\"+msg.usb+\".32\",parseInt(DAT.PumpTimeout));\nglobal.set(\"modbus.\"+msg.usb+\".33\",parseInt(DAT.HEProtectionMode));\nglobal.set(\"modbus.\"+msg.usb+\".13\",parseInt(DAT.DHWExchangerAntiLegionella));\n\nglobal.set(\"modbus.\"+msg.usb+\".14\",parseInt(10*parseFloat(DAT.DHWExchangerEcoHeatTemperature)));\nglobal.set(\"modbus.\"+msg.usb+\".15\",parseInt(DAT.DHWExchangerEcoHeatTime));\n\n\nglobal.set(\"modbus.\"+msg.usb+\".34\",parseInt(DAT.CentralHeatingControl));\nglobal.set(\"modbus.\"+msg.usb+\".50\",parseInt(DAT.PrePayShutOff));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7a864c52.42e624",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1063.0000610351562,
        "y": 139.400146484375,
        "wires": [
            [
                "3e7f6d40.8182d2"
            ]
        ]
    },
    {
        "id": "2d33e8d.51a7c18",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "modbus.ama0",
        "payloadType": "global",
        "x": 1092.0000610351562,
        "y": 247.400146484375,
        "wires": [
            [
                "c9329f63.06708"
            ]
        ]
    },
    {
        "id": "c9329f63.06708",
        "type": "debug",
        "z": "e090c99b.574098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1291.0000610351562,
        "y": 246.916748046875,
        "wires": []
    },
    {
        "id": "e86093cc.b102b",
        "type": "catch",
        "z": "e090c99b.574098",
        "name": "",
        "scope": [
            "3e7f6d40.8182d2"
        ],
        "x": 1238.0000610351562,
        "y": 183.3333740234375,
        "wires": [
            []
        ]
    },
    {
        "id": "9c9d6d3a.9ebe5",
        "type": "function",
        "z": "e090c99b.574098",
        "name": "initialise modbus ama0",
        "func": "\n\nglobal.set(\"modbus\",{});\nglobal.set(\"modbus.ama0\",{});\nglobal.set(\"modbus.ama0.1\",0);\nglobal.set(\"modbus.ama0.2\",0);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1271.5500793457031,
        "y": 74.41680908203125,
        "wires": [
            []
        ]
    },
    {
        "id": "b12d7dd9.d2e78",
        "type": "inject",
        "z": "e090c99b.574098",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1061.5500793457031,
        "y": 74.41680908203125,
        "wires": [
            [
                "9c9d6d3a.9ebe5"
            ]
        ]
    },
    {
        "id": "e37f8350.e7e89",
        "type": "link in",
        "z": "e090c99b.574098",
        "name": "",
        "links": [
            "3f36e066.c5745",
            "662a3ff1.fea2f",
            "b634da65.916828"
        ],
        "x": 1155,
        "y": 1320,
        "wires": [
            [
                "d2f75ba3.2aea28"
            ]
        ]
    },
    {
        "id": "44039f90.98f0d",
        "type": "comment",
        "z": "e090c99b.574098",
        "name": "NOT USB0 - ama0",
        "info": "",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "b09bf03862f08c34",
        "type": "trigger",
        "z": "e090c99b.574098",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1700,
        "y": 1240,
        "wires": [
            [
                "76dccbf0.a9f6c4"
            ]
        ]
    },
    {
        "id": "974ccc44.d3304",
        "type": "serial in",
        "z": "b20313b.2bf7af",
        "name": "",
        "serial": "1effca4f.9db4f6",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "54012dab.d23cc4",
                "fa1bf6a1.eba458"
            ]
        ]
    },
    {
        "id": "a73e7ddb.4aa38",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1170,
        "y": 220,
        "wires": []
    },
    {
        "id": "2cae4a3a.8d1916",
        "type": "serial out",
        "z": "b20313b.2bf7af",
        "name": "",
        "serial": "1effca4f.9db4f6",
        "x": 1170,
        "y": 260,
        "wires": []
    },
    {
        "id": "69ce61c5.52596",
        "type": "function",
        "z": "b20313b.2bf7af",
        "name": "store HIU",
        "func": "// http://www.simplymodbus.ca/FC03.htm\n//11 03 006B 0003 7687\n// 11 03 06 AE41 5652 4340 49AD\n\n// uses address 17 as default.\n\nvar msgin = msg.payload;\n\nvar offs = 0;\nif  (msg.payload[0] === 0) { offs = 1; }\n\nvar address = msg.payload[offs + 0] ;\nvar fc = msg.payload[offs + 1] ;\nvar register = msg.payload[offs + 3] || 0 ;\nvar cnt = msg.payload[offs + 5] || 1 ;\nvar targetv = 999;\n\nif (address != 17) { return null; }\n\nif (fc != 3 && fc != 6 && fc != 16) { return null; }\n\n///if(register==107) { targetv = 23.5; }\n//else if(register==1) { targetv = 15.73; }\n\ntargetv = global.get(\"modbus.ama0.\"+register) || 0;\n\n\n//new\n\n\n\n//\n\n\n\n\nfunction crc16(buffer) {\n    var crc = 0xFFFF;\n    var odd;\n\n    for (var i = 0; i < buffer.length; i++) {\n        crc = crc ^ buffer[i];\n\n        for (var j = 0; j < 8; j++) {\n            odd = crc & 0x0001;\n            crc = crc >> 1;\n            if (odd) {\n                crc = crc ^ 0xA001;\n            }\n        }\n    }\n\n    return crc;\n}\n\nvar nval = 0;\nvar tosend = \"\";\nvar hexString  = \"\";\n\nfunction mbrrapush(pload) {\n        var mbrra = flow.get(\"mbrra\") || [];\n        var ok = 80;\n        var inn=\"\"; for (var i = 0; i < msgin.length; i++) {  inn += msgin[i] + \" \"; } \n        var oot=\"\"; for (i = 0; i < pload.length; i++) {  oot += pload[i] + \" \"; } \n        if (msgin.length<8) { ok = 20; } \n        mbrra.push({\"request\":inn, \"ok\":ok, \"address\":address, \"register\":register, \"function\": fc, \"count\":cnt, \"topic\": \"\", \"value\": targetv, \"response\": oot});\n        if (mbrra.length>14) { mbrra.shift(); }\n        flow.set(\"mbrra\",mbrra);\n    }\n    \n    \n    \nif (msg.payload.length<8) { mbrrapush(\"\");  return null; }    \n\n\n    \nif (fc == 3) {   // read\n\n    \n    tosend = String.fromCharCode(17) + String.fromCharCode(3) + String.fromCharCode(2);\n    \n    targetv = parseInt(targetv) ;\n    var hexStringValue  = \"0000\" + targetv.toString(16);\n    hexStringValue = hexStringValue.substr(-4);\n    \n    \n    tosend += String.fromCharCode(parseInt(hexStringValue.substr(0,2),16)) + String.fromCharCode(parseInt(hexStringValue.substr(2,2),16)) ;\n    \n    \n    msg.payload  = Buffer.from(tosend, 'ascii');\n    \n    msg.payload = crc16(msg.payload);\n    \n    hexString  = \"0000\" + msg.payload.toString(16);\n    hexString = hexString.substr(-4);\n    \n    \n    tosend += String.fromCharCode(parseInt(hexString.substr(2,2),16)) + String.fromCharCode(parseInt(hexString.substr(0,2),16)) ;\n    msg.payload  = Buffer.from(tosend, 'ascii');\n\n    mbrrapush(msg.payload);\n\n    \n    \n    return [msg,null];\n\n} else if (fc == 6) {    // write\n\n\n    nval = (256*msg.payload[4]) + msg.payload[5];\n\n    msg2={};\n    msg2.topic = register;\n    msg2.payload = nval;\n \n    msg3={};\n    msg3.payload = msg.payload[4] + \",\" + msg.payload[5];\n \n    mbrrapush(msg.payload);\n \n    return [msg,msg2,msg3];\n\n} else if (fc == 16) {    // write\n\n\n    nval = (256*msg.payload[7]) + msg.payload[8];\n\n    msg2={};\n    msg2.topic = register;\n    msg2.payload = nval;\n \n   \n \n  \n    tosend = String.fromCharCode(msg.payload[0]);\n    tosend +=  String.fromCharCode(msg.payload[1]);\n    tosend +=  String.fromCharCode(msg.payload[2]);\n    tosend +=  String.fromCharCode(msg.payload[3]);\n    tosend +=  String.fromCharCode(msg.payload[4]);\n    tosend +=  String.fromCharCode(1);\n   \n\n    msg.payload  = Buffer.from(tosend, 'ascii');\n    \n    msg.payload = crc16(msg.payload);\n    \n    hexString  = \"0000\" + msg.payload.toString(16);\n    hexString = hexString.substr(-4);\n    \n    \n    tosend += String.fromCharCode(parseInt(hexString.substr(2,2),16)) + String.fromCharCode(parseInt(hexString.substr(0,2),16)) ;\n    msg.payload  = Buffer.from(tosend, 'ascii');\n \n \n    mbrrapush(msg.payload);\n \n    return [msg,msg2];\n\n}\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 260,
        "wires": [
            [
                "a73e7ddb.4aa38",
                "2cae4a3a.8d1916",
                "df7a9fd8.1046f",
                "69b48d96.57ae94"
            ],
            [
                "464ac8c7.871258",
                "4d647ff4.e7181"
            ],
            [
                "ec128ceb.3b0ef"
            ]
        ]
    },
    {
        "id": "356720e0.d8ec4",
        "type": "comment",
        "z": "b20313b.2bf7af",
        "name": "Registers",
        "info": "1: Pr Flow Temp [C] [x10]\n2: Pr Diff Pressure [bar] [x100]\n3: State [0-10]\n4: PowerUpCounter [x1]\n5: ErrorCounter [x1]\n6: PressureModeAuto [0/1]\n10: Setpoint DHW [C] [x10]\n11: WarmupBoost [l/m] [x10]\n12: EcoMode [0/1]\n13: DHWAntiLegionella [0/1]\n14: DHWEcoHeatTemp [C] [x10]\n15: DHWEcoHeatTime [minutes] [x1]\n20: DHW Flow Rate [l/m] [x10]\n21: DHW Output Temp [C] [x10]\n22: Pr Rtn Temp DHW [C] [x10]\n23: Valve Position DHW [0-270] [x1]\n24: Pr Flow Rate DHW [l/m] [x10]\n30: DHReturnLimit [C] [x10]\n31: HESupply [C] [x10]\n32: PumpTimeout [s]\n33: HEProtectionMode [0/1]\n40: Room Thermostat [0/1]\n41: CH Output Temp [C] [x10]\n42: Pr Rtn Temp CH [C] [x10]\n43: Valve Position CH [0-270] [x1]\n44: Pr Flow Rate CH [l/m] [x10]\n45: CH System Pressure [bar] [x100]\n46: CH Pump [0/1] ",
        "x": 110.99998474121094,
        "y": 56.99998474121094,
        "wires": []
    },
    {
        "id": "6e4aee66.58b74",
        "type": "comment",
        "z": "b20313b.2bf7af",
        "name": "Links",
        "info": "http://www.simplymodbus.ca/FC03.htm\n",
        "x": 253.49996948242188,
        "y": 56.79998779296875,
        "wires": []
    },
    {
        "id": "7b9a9441.f353fc",
        "type": "comment",
        "z": "b20313b.2bf7af",
        "name": "Modifications to HIU",
        "info": "Remove USBO serial input and output\nAlter Rotate to remove USB0\nAlter backup to reference flows_ihiu_m8_modbus.json\nChange button USB0 to USB6\nAdded node to save modbus to global values\n",
        "x": 439.4499816894531,
        "y": 57.616668701171875,
        "wires": []
    },
    {
        "id": "464ac8c7.871258",
        "type": "function",
        "z": "b20313b.2bf7af",
        "name": "HSF modbus set",
        "func": "\nmsg.usb=\"ama0\";\n\n\nvar current = global.get(\"modbus.\"+msg.usb+\".\"+msg.topic);  \n\nif (msg.payload==current) { return null; }\n\nswitch(msg.topic) {\n    case 10: //setpoint\n        msg.hsfcode = 9;\n        msg.type = \"number\";\n        msg.multiply = 10;\n        break;\n        \n    case 11: //WarmupBoost \n        msg.hsfcode = 12;\n        msg.type = \"number\";\n        msg.multiply = 10;\n        break;\n        \n    case 12: //EcoMode \n        msg.hsfcode = 10;\n        msg.type = \"onoff\";\n        break;\n \n    case 13: //DHWAntiLegionella  \n        msg.hsfcode = 34;\n        msg.type = \"onoff\";\n        break;\n        \n    case 14: //DHWEcoHeatTemp \n        msg.hsfcode = 33;\n        msg.type = \"number\";\n        msg.multiply = 10;\n        break;\n        \n    case 15: //DHReturnLimit   \n        msg.hsfcode = 32;\n        msg.type = \"number\";\n        msg.multiply = 1;\n        break;\n        \n    case 30: //DHWEcoHeatTime  \n        msg.hsfcode = 21;\n        msg.type = \"number\";\n        msg.multiply = 10;\n        break;\n        \n    case 31: //HESupply   \n        msg.hsfcode = 22;\n        msg.type = \"number\";\n        msg.multiply = 10;\n        break;\n        \n    case 32: //PumpTimeout   \n        msg.hsfcode = 23;\n        msg.type = \"number\";\n        msg.multiply = 1;\n        break;\n    \n    case 33: //HEProtectionMode   \n        msg.hsfcode = 24;\n        msg.type = \"onoff\";\n        break;\n        \n        \n    case 34: //CentralHeatingControl\n        msg.hsfcode = 38;\n        msg.type = \"onoff\";\n        break;\n       \n    case 50: //PrePayShutOff\n        msg.hsfcode = 39;\n        msg.type = \"onoff\";\n        break;\n       \n        \n    default: \n        return null;\n} \n\n\n//msg.payload = \"Changing \"\n\n//global.set(\"modbus.\"+msg.usb+\".34\",parseInt(DAT.CentralHeatingControl));\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 580,
        "wires": [
            [
                "549edda8.e6fa94"
            ]
        ]
    },
    {
        "id": "549edda8.e6fa94",
        "type": "delay",
        "z": "b20313b.2bf7af",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 790,
        "y": 580,
        "wires": [
            [
                "85817f39.72219",
                "b634da65.916828"
            ]
        ]
    },
    {
        "id": "4d647ff4.e7181",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1170,
        "y": 320,
        "wires": []
    },
    {
        "id": "85817f39.72219",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1030,
        "y": 580,
        "wires": []
    },
    {
        "id": "75de437b.00717c",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 490,
        "y": 360,
        "wires": []
    },
    {
        "id": "c2926665.d7b1b8",
        "type": "switch",
        "z": "b20313b.2bf7af",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "17",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "75de437b.00717c",
                "430015e9.55d6ac"
            ]
        ]
    },
    {
        "id": "430015e9.55d6ac",
        "type": "change",
        "z": "b20313b.2bf7af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cread",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 320,
        "wires": [
            [
                "46fbcf29.43092"
            ]
        ]
    },
    {
        "id": "54012dab.d23cc4",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 330,
        "y": 120,
        "wires": []
    },
    {
        "id": "1773016d.89f57f",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "3da1d32.906a52c",
        "type": "ui_template",
        "z": "b20313b.2bf7af",
        "d": true,
        "group": "24d3d755.7feff8",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "39495eb1.9e3f72",
        "type": "function",
        "z": "b20313b.2bf7af",
        "name": "",
        "func": "var lc = flow.get(\"lc\") || 0;\nlc++;\nflow.set(\"lc\", lc);\n\nvar mbreq = flow.get(\"mbreq\") || \"\";\n\n\n\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    \n    mbreq += msg.payload[i] + \" \";\n    \n} \nmbreq += \"<br />\";\nflow.set(\"mbreq\", mbreq);\n\n\nmsg.payload = mbreq;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 80,
        "wires": [
            [
                "3da1d32.906a52c"
            ]
        ]
    },
    {
        "id": "dc43beb.ae8424",
        "type": "ui_template",
        "z": "b20313b.2bf7af",
        "d": true,
        "group": "19b1379d.e23038",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "df7a9fd8.1046f",
        "type": "function",
        "z": "b20313b.2bf7af",
        "name": "",
        "func": "\nvar mbres = flow.get(\"mbres\") || \"\";\n\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    \n    mbres += msg.payload[i] + \" \";\n    \n} \nmbres += \"<br />\";\nflow.set(\"mbres\", mbres);\n\n\nmsg.payload = mbres;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "dc43beb.ae8424"
            ]
        ]
    },
    {
        "id": "46fbcf29.43092",
        "type": "function",
        "z": "b20313b.2bf7af",
        "name": "",
        "func": "var lc = flow.get(\"lc\") || 0;\n\nif (lc>16) { \n    \n    mbreq=\"\";\n    lc = 0;\n    flow.set(\"mbres\", \"\");\n    flow.set(\"mbreq\", \"\");\n    flow.set(\"lc\", 0);\n    \n    \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            [
                "39495eb1.9e3f72",
                "69ce61c5.52596",
                "1773016d.89f57f"
            ]
        ]
    },
    {
        "id": "ec128ceb.3b0ef",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1170,
        "y": 360,
        "wires": []
    },
    {
        "id": "fa1bf6a1.eba458",
        "type": "switch",
        "z": "b20313b.2bf7af",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "17",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 240,
        "wires": [
            [
                "afa76373.ac7ca"
            ]
        ]
    },
    {
        "id": "afa76373.ac7ca",
        "type": "switch",
        "z": "b20313b.2bf7af",
        "name": "",
        "property": "payload[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 320,
        "wires": [
            [
                "c2926665.d7b1b8"
            ],
            [
                "c2926665.d7b1b8"
            ]
        ]
    },
    {
        "id": "b634da65.916828",
        "type": "link out",
        "z": "b20313b.2bf7af",
        "name": "",
        "links": [
            "e37f8350.e7e89"
        ],
        "x": 925.5500793457031,
        "y": 610.6833190917969,
        "wires": []
    },
    {
        "id": "2d409675.560aaa",
        "type": "function",
        "z": "b20313b.2bf7af",
        "name": "heating off",
        "func": "// http://www.simplymodbus.ca/FC03.htm\n//11 03 006B 0003 7687\n// 11 03 06 AE41 5652 4340 49AD\n\n// uses address 17 as default.\n\nvar offs = 0;\n\n    \n    //var tosend = String.fromCharCode(17) + String.fromCharCode(3) + String.fromCharCode(0) + String.fromCharCode(1)  + String.fromCharCode(0) + String.fromCharCode(1)  + String.fromCharCode(99) + String.fromCharCode(99);\n    \n    //tosend = tosend + String.fromCharCode(17) + String.fromCharCode(3) + String.fromCharCode(0) + String.fromCharCode(2)  + String.fromCharCode(0) + String.fromCharCode(1)  + String.fromCharCode(99) + String.fromCharCode(99);\n    //tosend = tosend + String.fromCharCode(17) + String.fromCharCode(6) + String.fromCharCode(0) + String.fromCharCode(34)  + String.fromCharCode(0) + String.fromCharCode(0)  + String.fromCharCode(99) + String.fromCharCode(99);\n    \n    var tosend = String.fromCharCode(17) + String.fromCharCode(6) + String.fromCharCode(0) + String.fromCharCode(34)  + String.fromCharCode(0) + String.fromCharCode(0)  + String.fromCharCode(99) + String.fromCharCode(99);\n    \n    //tosend = tosend + String.fromCharCode(17) + String.fromCharCode(16) + String.fromCharCode(0) + String.fromCharCode(12)  + String.fromCharCode(0) + String.fromCharCode(1)  + String.fromCharCode(2)  + String.fromCharCode(0) + String.fromCharCode(1) + String.fromCharCode(99) + String.fromCharCode(99);\n    \n    \n    msg.payload  = Buffer.from(tosend, 'ascii');\n    \n   \n   return msg;\n   \n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8c6373ea.b985c",
        "type": "inject",
        "z": "b20313b.2bf7af",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 180,
        "wires": [
            [
                "2d409675.560aaa"
            ]
        ]
    },
    {
        "id": "79b7954a.bac1bc",
        "type": "ui_table",
        "z": "b20313b.2bf7af",
        "group": "844e6809.aedfb8",
        "name": "",
        "order": 0,
        "width": "12",
        "height": "7",
        "columns": [
            {
                "field": "request",
                "title": "Request",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ok",
                "title": "ok",
                "width": "7%",
                "align": "left",
                "formatter": "traffic",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "address",
                "title": "Address",
                "width": "13%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "function",
                "title": "FC",
                "width": "7%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "register",
                "title": "Register",
                "width": "13%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "count",
                "title": "n",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "value",
                "title": "Value",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "response",
                "title": "Response",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1230,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "69b48d96.57ae94",
        "type": "change",
        "z": "b20313b.2bf7af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mbrra",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 460,
        "wires": [
            [
                "dae5a202.79ab3",
                "ad479ca0.4d97a"
            ]
        ]
    },
    {
        "id": "dae5a202.79ab3",
        "type": "debug",
        "z": "b20313b.2bf7af",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 520,
        "wires": []
    },
    {
        "id": "b4ce652c.aa1ba8",
        "type": "inject",
        "z": "b20313b.2bf7af",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "mbrra",
        "payloadType": "flow",
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "79b7954a.bac1bc"
            ]
        ]
    },
    {
        "id": "ad479ca0.4d97a",
        "type": "trigger",
        "z": "b20313b.2bf7af",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1020,
        "y": 460,
        "wires": [
            [
                "79b7954a.bac1bc"
            ]
        ]
    },
    {
        "id": "b6a4fced.51308",
        "type": "inject",
        "z": "b20313b.2bf7af",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 740,
        "wires": [
            [
                "50682811.477638"
            ]
        ]
    },
    {
        "id": "50682811.477638",
        "type": "change",
        "z": "b20313b.2bf7af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mbrra",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6f2f9689.4b74f",
        "type": "comment",
        "z": "c7c5e263.50a89",
        "name": "",
        "info": "http://www.maggiordomotic.it/implement-usernamepassword-mqttserver/\n\n\nmosquitto_passwd -c /etc/mosquitto/passwordfile nodereduser",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "9c71938a.1509b",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "add admin",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "sudo echo \"\" >> /etc/mosquitto/aclfile.acl\nsudo echo \"user {{payload.user}} \" >> /etc/mosquitto/aclfile.acl\nsudo echo \"topic ihiu/+/{{payload.serial}}/#\" >> /etc/mosquitto/aclfile.acl\nsudo echo \"{{payload.user}}:{{payload.pw}}\" > /home/pi/node-hiu/newuser.pw\nsudo mosquitto_passwd -U /home/pi/node-hiu/newuser.pw\nsudo cat /home/pi/node-hiu/newuser.pw >> /etc/mosquitto/passwordfile",
        "output": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "e0c57cdc.e98d1"
            ]
        ]
    },
    {
        "id": "487e3086.ad501",
        "type": "link in",
        "z": "c7c5e263.50a89",
        "name": "addmqttuser",
        "links": [
            "a3500172.a914f",
            "f3413ee1.8d20c"
        ],
        "x": 193.2857208251953,
        "y": 99.28570556640625,
        "wires": [
            [
                "c2dd8c3c.13bfe8",
                "1df5ad83.e93982"
            ]
        ]
    },
    {
        "id": "784ab369.9ae2f4",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "RESTART",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 197.8571319580078,
        "y": 457,
        "wires": [
            [
                "7b497219.c7104c"
            ]
        ]
    },
    {
        "id": "7b497219.c7104c",
        "type": "exec",
        "z": "c7c5e263.50a89",
        "command": "sudo docker restart mqtt",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 507.8571319580078,
        "y": 457,
        "wires": [
            [
                "c03bcab8.f744a"
            ],
            [],
            []
        ]
    },
    {
        "id": "bb419082.56723",
        "type": "exec",
        "z": "c7c5e263.50a89",
        "command": "sudo cat /home/pi/mqtt/aclfile.acl",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 424.3968048095703,
        "y": 649.0794067382812,
        "wires": [
            [
                "57280aab.e44a4c",
                "bfd20471.dbbea8"
            ],
            [],
            []
        ]
    },
    {
        "id": "57280aab.e44a4c",
        "type": "debug",
        "z": "c7c5e263.50a89",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 770,
        "y": 680,
        "wires": []
    },
    {
        "id": "ecae4ee2.3c82",
        "type": "exec",
        "z": "c7c5e263.50a89",
        "command": "sudo cat /home/pi/mqtt/passwordfile",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 443.2856903076172,
        "y": 736.8571548461914,
        "wires": [
            [
                "57280aab.e44a4c",
                "74a6280e.8237a"
            ],
            [],
            []
        ]
    },
    {
        "id": "1df5ad83.e93982",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "remove user",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "sudo cp /etc/mosquitto/passwordfile /etc/mosquitto/passwordfile.old\nsudo rm /etc/mosquitto/passwordfile.new\nsudo grep -v '{{payload.user}}' /etc/mosquitto/passwordfile > /etc/mosquitto/passwordfile.new\nsudo cp /etc/mosquitto/passwordfile.new /etc/mosquitto/passwordfile",
        "output": "str",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "e0c57cdc.e98d1"
            ]
        ]
    },
    {
        "id": "c2dd8c3c.13bfe8",
        "type": "trigger",
        "z": "c7c5e263.50a89",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "b558d66.298f5a8"
            ]
        ]
    },
    {
        "id": "6303c38d.5898dc",
        "type": "ui_button",
        "z": "c7c5e263.50a89",
        "name": "",
        "group": "4509e7eb.5ccb18",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 880,
        "wires": [
            [
                "4aba84e6e27ebf62"
            ]
        ]
    },
    {
        "id": "bfd20471.dbbea8",
        "type": "function",
        "z": "c7c5e263.50a89",
        "name": "",
        "func": "msg.payload = msg.payload.replace(/\\n/g, '<br />');\n\nmsg.payload = \"<small>\" + msg.payload + \"</small>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 620,
        "wires": [
            [
                "cd5bda23.86ab3"
            ]
        ]
    },
    {
        "id": "173d659a.1e92ca",
        "type": "link in",
        "z": "c7c5e263.50a89",
        "name": "restartmosquitto",
        "links": [
            "701f8d43.9236e4",
            "eaa1238a.20c06",
            "b0c82e44867eb395"
        ],
        "x": 295,
        "y": 500,
        "wires": [
            [
                "7b497219.c7104c"
            ]
        ]
    },
    {
        "id": "eaa1238a.20c06",
        "type": "link out",
        "z": "c7c5e263.50a89",
        "name": "",
        "links": [
            "173d659a.1e92ca"
        ],
        "x": 1055,
        "y": 280,
        "wires": []
    },
    {
        "id": "2143fce3.d57a84",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "add user",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "sudo echo \"\" >> /etc/mosquitto/aclfile.acl\nsudo echo \"user {{payload.user}} \" >> /etc/mosquitto/aclfile.acl\nsudo echo \"topic read ihiu/+/{{payload.serial}}/#\" >> /etc/mosquitto/aclfile.acl\nsudo echo \"topic ihiu/+/{{payload.serial}}/user/#\" >> /etc/mosquitto/aclfile.acl\nsudo echo \"{{payload.user}}:{{payload.pw}}\" > /home/pi/node-hiu/newuser.pw\nsudo mosquitto_passwd -U /home/pi/node-hiu/newuser.pw\nsudo cat /home/pi/node-hiu/newuser.pw >> /etc/mosquitto/passwordfile",
        "output": "str",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "e0c57cdc.e98d1"
            ]
        ]
    },
    {
        "id": "e0c57cdc.e98d1",
        "type": "subflow:a8d56bd2.c3c6f",
        "z": "c7c5e263.50a89",
        "name": "",
        "env": [],
        "x": 760,
        "y": 280,
        "wires": [
            [
                "ce9de74f.61a3e",
                "4b6ed054b727db0d"
            ]
        ]
    },
    {
        "id": "b558d66.298f5a8",
        "type": "switch",
        "z": "c7c5e263.50a89",
        "name": "",
        "property": "payload.user",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "admin@heatweb.com",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "9c71938a.1509b"
            ],
            [
                "2143fce3.d57a84"
            ]
        ]
    },
    {
        "id": "99d49a24.e56a98",
        "type": "link in",
        "z": "c7c5e263.50a89",
        "name": "refreshb",
        "links": [
            "e8149ae4.15bb1",
            "c9664a80.bb578",
            "4aba84e6e27ebf62"
        ],
        "x": 175,
        "y": 720,
        "wires": [
            [
                "bb419082.56723",
                "ecae4ee2.3c82",
                "ff724c1b.557598"
            ]
        ]
    },
    {
        "id": "4cdb1b16.f32324",
        "type": "link in",
        "z": "c7c5e263.50a89",
        "name": "addmqttnode",
        "links": [
            "770b7c7f.f6e824"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "ea71cf4.c11d6b"
            ]
        ]
    },
    {
        "id": "86dcd502.1d33c",
        "type": "ui_form",
        "z": "c7c5e263.50a89",
        "name": "",
        "label": "",
        "group": "5c04b019.69af5",
        "order": 0,
        "width": "6",
        "height": "6",
        "options": [
            {
                "label": "Unique ID (Node)",
                "value": "node",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "pw",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Read Topic (optional)",
                "value": "rtopic",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Write Topic (optional)",
                "value": "wtopic",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "node": "",
            "pw": "",
            "rtopic": "",
            "wtopic": ""
        },
        "payload": "",
        "submit": "OK",
        "cancel": "Cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "uiform",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "ea71cf4.c11d6b"
            ]
        ]
    },
    {
        "id": "ce9de74f.61a3e",
        "type": "trigger",
        "z": "c7c5e263.50a89",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 940,
        "y": 200,
        "wires": [
            [
                "c9664a80.bb578"
            ]
        ]
    },
    {
        "id": "c9664a80.bb578",
        "type": "link out",
        "z": "c7c5e263.50a89",
        "name": "",
        "links": [
            "99d49a24.e56a98"
        ],
        "x": 1055,
        "y": 200,
        "wires": []
    },
    {
        "id": "c0125feb.604238",
        "type": "debug",
        "z": "c7c5e263.50a89",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "37a6e3ea.329ca4",
        "type": "debug",
        "z": "c7c5e263.50a89",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 357,
        "wires": []
    },
    {
        "id": "c03bcab8.f744a",
        "type": "debug",
        "z": "c7c5e263.50a89",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 810,
        "y": 460,
        "wires": []
    },
    {
        "id": "74a6280e.8237a",
        "type": "function",
        "z": "c7c5e263.50a89",
        "name": "",
        "func": "var users = msg.payload.split(\"\\n\");\n\nvar userarr = [];\n\nmsg.payload=\"\";\nfor (var key in users) {\n    \n    msg.payload += users[key].split(\":\")[0] + \"<br />\";\n    \n    userarr.push(users[key].split(\":\")[0]);\n}\n\nflow.set(\"users\",userarr);\n//msg.payload = \"<small>\" + msg.payload + \"</small>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 740,
        "wires": [
            [
                "4f99dfe6.3f33"
            ]
        ]
    },
    {
        "id": "cd5bda23.86ab3",
        "type": "ui_template",
        "z": "c7c5e263.50a89",
        "group": "8e7666d0.22279",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "8",
        "format": "<br><div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "padd",
        "x": 940,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "4f99dfe6.3f33",
        "type": "ui_template",
        "z": "c7c5e263.50a89",
        "group": "4509e7eb.5ccb18",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "4",
        "format": "<br><div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "padd",
        "x": 940,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ea71cf4.c11d6b",
        "type": "function",
        "z": "c7c5e263.50a89",
        "name": "",
        "func": "\nvar scr = \"\";\n\nif (msg.payload.rtopic || msg.payload.wtopic) {\n    scr += 'sudo echo \"\" >> /etc/mosquitto/aclfile.acl\\n';\n    scr += 'sudo echo \"user ' + msg.payload.node + '\" >> /etc/mosquitto/aclfile.acl\\n';\n}\n\nif (msg.payload.rtopic) {\n    scr += 'sudo echo \"topic read ' + msg.payload.rtopic + '\" >> /etc/mosquitto/aclfile.acl\\n';\n}\nif (msg.payload.wtopic) {\n    scr += 'sudo echo \"topic write ' + msg.payload.wtopic + '\" >> /etc/mosquitto/aclfile.acl\\n';\n}\n\nscr += 'sudo echo \"' + msg.payload.node + ':' + msg.payload.pw + '\" > /home/pi/node-hiu/newuser.pw\\n';\nscr += 'sudo mosquitto_passwd -U /home/pi/node-hiu/newuser.pw\\n';\nscr += 'sudo cat /home/pi/node-hiu/newuser.pw >> /etc/mosquitto/passwordfile\\n';\n\nmsg.payload = scr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 280,
        "wires": [
            [
                "c0125feb.604238",
                "e0c57cdc.e98d1"
            ]
        ]
    },
    {
        "id": "a9455ca9.10c008",
        "type": "ui_form",
        "z": "c7c5e263.50a89",
        "name": "",
        "label": "",
        "group": "21a28cd2.45cda4",
        "order": 0,
        "width": "6",
        "height": "4",
        "options": [
            {
                "label": "Unique ID (Node)",
                "value": "user",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "user": ""
        },
        "payload": "",
        "submit": "OK",
        "cancel": "Cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "1df5ad83.e93982"
            ]
        ]
    },
    {
        "id": "1c08ec6.adafc14",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "Basic conf",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# Place your local configuration in /etc/mosquitto/conf.d/\n#\n# A full description of the configuration file is at\n# /usr/share/doc/mosquitto/examples/mosquitto.conf.example\n\nallow_anonymous true\n#password_file /mosquitto/config/passwordfile\n#acl_file /mosquitto/config/aclfile.acl\n\n#pid_file /var/run/mosquitto.pid\n\npersistence false\npersistence_location /mosquitto/data/\nlog_dest file /mosquitto/log/mosquitto.log\n\n#include_dir /etc/mosquitto/conf.d\n\nlistener 1883\n\n#listener 8883\n#certfile /etc/letsencrypt/live/hw1.ddns.net/cert.pem\n#cafile /etc/letsencrypt/live/hw1.ddns.net/chain.pem\n#keyfile /etc/letsencrypt/live/hw1.ddns.net/privkey.pem\n\n#listener 8080\n#protocol websockets\n\n#listener 8081\n#protocol websockets\n#certfile /etc/letsencrypt/live/hw1.ddns.net/cert.pem\n#cafile /etc/letsencrypt/live/hw1.ddns.net/chain.pem\n#keyfile /etc/letsencrypt/live/hw1.ddns.net/privkey.pem\n",
        "output": "str",
        "x": 490,
        "y": 1100,
        "wires": [
            [
                "b259d81e.59acb"
            ]
        ]
    },
    {
        "id": "a9a62998.97d94",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "conf",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "sudo mv /home/pi/mqtt/mosquitto.conf /home/pi/mqtt/mosquitto.conf.old\nsudo cat /home/pi/node-hiu/bridge.conf > /home/pi/mqtt/mosquitto.conf\nsudo rm /home/pi/node-hiu/bridge.conf",
        "output": "str",
        "x": 1010,
        "y": 1140,
        "wires": [
            [
                "a3e39a27.39d8b8"
            ]
        ]
    },
    {
        "id": "3a1b0b89.a41e8c",
        "type": "file",
        "z": "c7c5e263.50a89",
        "name": "",
        "filename": "/home/pi/node-hiu/bridge.conf",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 965,
        "y": 1062,
        "wires": [
            []
        ]
    },
    {
        "id": "3a77fb5f.5afb9c",
        "type": "trigger",
        "z": "c7c5e263.50a89",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 830,
        "y": 1138.9999389648438,
        "wires": [
            [
                "a9a62998.97d94"
            ]
        ]
    },
    {
        "id": "b259d81e.59acb",
        "type": "switch",
        "z": "c7c5e263.50a89",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 670,
        "y": 1100,
        "wires": [
            [
                "3a1b0b89.a41e8c",
                "3a77fb5f.5afb9c"
            ]
        ]
    },
    {
        "id": "65d540c6.06aea",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1100,
        "wires": [
            [
                "1c08ec6.adafc14"
            ]
        ]
    },
    {
        "id": "a3e39a27.39d8b8",
        "type": "link out",
        "z": "c7c5e263.50a89",
        "name": "",
        "links": [
            "b5bb10e7.8e03b"
        ],
        "x": 1125,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1277708b.b8297f",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "Bridge conf",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# Place your local configuration in /etc/mosquitto/conf.d/\n#\n# A full description of the configuration file is at\n# /usr/share/doc/mosquitto/examples/mosquitto.conf.example\n\nallow_anonymous false\npassword_file /mosquitto/config/passwordfile\nacl_file /mosquitto/config/aclfile.acl\n\npid_file /var/run/mosquitto.pid\n\npersistence true\npersistence_location /var/lib/mosquitto/\n\nport 1883\n\nlistener 1884\nprotocol websockets\n\nconnection mqtt89\n  address 192.168.0.89:1883\n  topic # in 0 pp/ ihiu/\n  try_private false\n  notifications false\n  start_type automatic\n  remote_username user_name\n  remote_password user_password\n  keepalive_interval 300\n  cleansession true\n  local_username nodered\n  local_password nodered_password\n  bridge_insecure true",
        "output": "str",
        "x": 490,
        "y": 1140,
        "wires": [
            [
                "b259d81e.59acb"
            ]
        ]
    },
    {
        "id": "9a24c27d.d722",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1140,
        "wires": [
            [
                "1277708b.b8297f"
            ]
        ]
    },
    {
        "id": "5725dfea.b8e2f",
        "type": "comment",
        "z": "c7c5e263.50a89",
        "name": "Source",
        "info": "https://community.home-assistant.io/t/mqtt-working-mosquitto-cloudmqtt-bridge/1830/44",
        "x": 150,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b5bb10e7.8e03b",
        "type": "link in",
        "z": "c7c5e263.50a89",
        "name": "mosquittorun",
        "links": [
            "a3e39a27.39d8b8"
        ],
        "x": 655,
        "y": 360,
        "wires": [
            [
                "e0c57cdc.e98d1"
            ]
        ]
    },
    {
        "id": "44d05737.e9136",
        "type": "comment",
        "z": "c7c5e263.50a89",
        "name": "PASSWORD REQUIRED",
        "info": "",
        "x": 509,
        "y": 1177.9999389648438,
        "wires": []
    },
    {
        "id": "2b96fae4.c67e0e",
        "type": "ui_template",
        "z": "c7c5e263.50a89",
        "group": "ebbde0ed.5df038",
        "name": "",
        "order": 1,
        "width": "12",
        "height": "8",
        "format": "<pre><div ng-bind-html=\"msg.payload\"></div></pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 940,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ff724c1b.557598",
        "type": "exec",
        "z": "c7c5e263.50a89",
        "command": "sudo cat /home/pi/mqtt/mosquitto.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 820,
        "wires": [
            [
                "5dd0cce7.2aee9c"
            ],
            [],
            []
        ]
    },
    {
        "id": "5dd0cce7.2aee9c",
        "type": "function",
        "z": "c7c5e263.50a89",
        "name": "",
        "func": "//msg.payload = msg.payload.replace(/password/g,\"***\");\n\nvar min = msg.payload.split(\"\\n\");\n\nfor(var ln in min) {\n    \n    if (min[ln].indexOf(\"_password \")>0) {\n        \n        var lno = min[ln].split(\"password\")[0] + \"password *****\";\n        \n        msg.payload = msg.payload.replace(min[ln],lno);\n        \n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 820,
        "wires": [
            [
                "2b96fae4.c67e0e"
            ]
        ]
    },
    {
        "id": "fafc3e3b.334dc",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "SSL",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# Place your local configuration in /etc/mosquitto/conf.d/\n#\n# A full description of the configuration file is at\n# /usr/share/doc/mosquitto/examples/mosquitto.conf.example\n\nallow_anonymous true\n#password_file /mosquitto/config/passwordfile\n#acl_file /mosquitto/config/aclfile.acl\n\n#pid_file /var/run/mosquitto.pid\n\npersistence false\npersistence_location /mosquitto/data/\nlog_dest file /mosquitto/log/mosquitto.log\n\n#include_dir /etc/mosquitto/conf.d\n\nlistener 1883\n\n#listener 8883\n#certfile /etc/letsencrypt/live/hw1.ddns.net/cert.pem\n#cafile /etc/letsencrypt/live/hw1.ddns.net/chain.pem\n#keyfile /etc/letsencrypt/live/hw1.ddns.net/privkey.pem\n\n#listener 8080\n#protocol websockets\n\n#listener 8081\n#protocol websockets\n#certfile /etc/letsencrypt/live/hw1.ddns.net/cert.pem\n#cafile /etc/letsencrypt/live/hw1.ddns.net/chain.pem\n#keyfile /etc/letsencrypt/live/hw1.ddns.net/privkey.pem\n",
        "output": "str",
        "x": 510,
        "y": 1060,
        "wires": [
            [
                "b259d81e.59acb"
            ]
        ]
    },
    {
        "id": "389312ad.97caf6",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1060,
        "wires": [
            [
                "fafc3e3b.334dc"
            ]
        ]
    },
    {
        "id": "6bcdfcfb.639d9c",
        "type": "template",
        "z": "c7c5e263.50a89",
        "name": "Standard",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# Place your local configuration in /etc/mosquitto/conf.d/\n#\n# A full description of the configuration file is at\n# /usr/share/doc/mosquitto/examples/mosquitto.conf.example\n\nallow_anonymous false\npassword_file /mosquitto/config/passwordfile\nacl_file /mosquitto/config/aclfile.acl\n\npid_file /var/run/mosquitto.pid\n\npersistence false\npersistence_location /mosquitto/data/\nlog_dest file /mosquitto/log/mosquitto.log\n\n#include_dir /etc/mosquitto/conf.d\n\nlistener 1883\n\n#listener 8883\n#certfile /etc/letsencrypt/live/hw1.ddns.net/cert.pem\n#cafile /etc/letsencrypt/live/hw1.ddns.net/chain.pem\n#keyfile /etc/letsencrypt/live/hw1.ddns.net/privkey.pem\n\n#listener 8080\n#protocol websockets\n\n#listener 8081\n#protocol websockets\n#certfile /etc/letsencrypt/live/hw1.ddns.net/cert.pem\n#cafile /etc/letsencrypt/live/hw1.ddns.net/chain.pem\n#keyfile /etc/letsencrypt/live/hw1.ddns.net/privkey.pem\n",
        "output": "str",
        "x": 500,
        "y": 1020,
        "wires": [
            [
                "b259d81e.59acb"
            ]
        ]
    },
    {
        "id": "59f079e7.5a687",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1020,
        "wires": [
            [
                "6bcdfcfb.639d9c"
            ]
        ]
    },
    {
        "id": "8a6ce22f.97624",
        "type": "ui_ui_control",
        "z": "c7c5e263.50a89",
        "name": "",
        "events": "all",
        "x": 1260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c0572001.20937",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "hide",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"disable\":\"MQTT Network\",\"hide\":\"MQTT Network\"}}",
        "payloadType": "json",
        "x": 1010,
        "y": 40,
        "wires": [
            [
                "8a6ce22f.97624"
            ]
        ]
    },
    {
        "id": "7c5ec7d8.6ff558",
        "type": "inject",
        "z": "c7c5e263.50a89",
        "name": "show",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"enable\":\"MQTT Network\",\"show\":\"MQTT Network\"}}",
        "payloadType": "json",
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "8a6ce22f.97624"
            ]
        ]
    },
    {
        "id": "7d35253bad07bdc2",
        "type": "ui_ui_control",
        "z": "c7c5e263.50a89",
        "name": "",
        "events": "change",
        "x": 140,
        "y": 940,
        "wires": [
            [
                "50b24305a2a211bc"
            ]
        ]
    },
    {
        "id": "50b24305a2a211bc",
        "type": "switch",
        "z": "c7c5e263.50a89",
        "name": "change",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 940,
        "wires": [
            [
                "c8f2e0e6d6be46ad"
            ]
        ]
    },
    {
        "id": "c8f2e0e6d6be46ad",
        "type": "switch",
        "z": "c7c5e263.50a89",
        "name": "change",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "MQTT Network",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 940,
        "wires": [
            [
                "4aba84e6e27ebf62"
            ]
        ]
    },
    {
        "id": "4aba84e6e27ebf62",
        "type": "link out",
        "z": "c7c5e263.50a89",
        "name": "",
        "links": [
            "99d49a24.e56a98"
        ],
        "x": 535,
        "y": 880,
        "wires": []
    },
    {
        "id": "b67fcbc285bf6433",
        "type": "ui_ui_control",
        "z": "c7c5e263.50a89",
        "name": "",
        "events": "all",
        "x": 700,
        "y": 80,
        "wires": [
            [
                "cd2ac590c82247b9"
            ]
        ]
    },
    {
        "id": "cd2ac590c82247b9",
        "type": "change",
        "z": "c7c5e263.50a89",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"disable\":\"MQTT Network\",\"hide\":\"MQTT Network\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "51c9ac1137515666"
            ]
        ]
    },
    {
        "id": "51c9ac1137515666",
        "type": "trigger",
        "z": "c7c5e263.50a89",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1030,
        "y": 80,
        "wires": [
            [
                "8a6ce22f.97624"
            ]
        ]
    },
    {
        "id": "4b6ed054b727db0d",
        "type": "trigger",
        "z": "c7c5e263.50a89",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 940,
        "y": 280,
        "wires": [
            [
                "eaa1238a.20c06"
            ]
        ]
    },
    {
        "id": "b0cd44982af7e4c7",
        "type": "mqtt in",
        "z": "543bdb0775b77d7e",
        "name": "mqtt1",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "71c1543469782501",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 550,
        "y": 1000,
        "wires": [
            [
                "bcd13d2052b362a4"
            ]
        ]
    },
    {
        "id": "a4bc7a6fb573016f",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 960,
        "wires": [
            [
                "b0cd44982af7e4c7"
            ]
        ]
    },
    {
        "id": "d3da8836485e8072",
        "type": "mqtt in",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1aff57e760e2779",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 550,
        "y": 1300,
        "wires": [
            [
                "f7fcd6223996486e"
            ]
        ]
    },
    {
        "id": "60ea5962b14dc190",
        "type": "status",
        "z": "543bdb0775b77d7e",
        "name": "",
        "scope": [
            "d3da8836485e8072",
            "b0cd44982af7e4c7",
            "c182b09e1b1543f4",
            "318096519eb12501"
        ],
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "67591d76cd396ec0",
                "49455a3ff3cd370c"
            ]
        ]
    },
    {
        "id": "67591d76cd396ec0",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "status.text",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0ff5c2aa54fe8e37",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 1260,
        "wires": [
            [
                "d3da8836485e8072"
            ]
        ]
    },
    {
        "id": "854dad29e043276e",
        "type": "ui_table",
        "z": "543bdb0775b77d7e",
        "group": "414e2a18d537ae1a",
        "name": "",
        "order": 1,
        "width": "12",
        "height": "5",
        "columns": [
            {
                "field": "channel",
                "title": "Channel",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "title",
                "title": "Title",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "13%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "broker",
                "title": "Broker",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "port",
                "title": "Port",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "12%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ok",
                "title": "ok",
                "width": "7%",
                "align": "left",
                "formatter": "traffic",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 730,
        "y": 360,
        "wires": [
            [
                "7550fbbc756647df",
                "08759d97a8a68a82",
                "5d22c807dabf4e01",
                "0696ee91c9efe54d",
                "8ad0aeb60a5e5182",
                "e125e3957ecaad1a",
                "b31363dc2581c904",
                "2accbbf68188e4ba",
                "848cce4fbccede5d",
                "58670bf23f01333d"
            ]
        ]
    },
    {
        "id": "323d367f759b8554",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "settings",
        "func": "\n//var tset = global.get(\"settings.mqtt.value\")||[];\n\nvar tset = flow.get(\"mqtt\")||[];\n\n\n//tset[0].status = 1;\n//tset[1][\"status\"] = 1;\n\nmsg.payload = tset; //JSON.parse(tset);\nflow.set(\"settingsout\",msg.payload);\n\n\n\nfor (var sv in msg.payload) {\n    \n    var svst = flow.get(msg.payload[sv][\"channel\"] + \"_status\") || \"\";\n    if (msg.payload[sv][\"broker\"]) { \n        msg.payload[sv][\"status\"] = svst; \n        msg.payload[sv][\"ok\"] = (svst ==\"connected\"?100:0); \n    }\n}\n\n// msg.payload[0][\"status\"] = flow.get(\"mqtt1_status\")==\"connected\"?100:0;\n// msg.payload[1][\"status\"] = flow.get(\"mqtt1s_status\")==\"connected\"?100:0;\n// msg.payload[0][\"status\"] = flow.get(\"mqtt1_status\")==\"connected\"?100:0;\n// msg.payload[1][\"status\"] = flow.get(\"mqtt1s_status\")==\"connected\"?100:0;\n\n\nflow.set(\"inset\",msg.payload);\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 360,
        "wires": [
            [
                "ab8c384837f9789d",
                "03f071ea578e4789"
            ]
        ]
    },
    {
        "id": "d52f419c604d75d6",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "323d367f759b8554"
            ]
        ]
    },
    {
        "id": "aa112d3e777dbd3d",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "b24ff8fd18aaf799"
            ]
        ]
    },
    {
        "id": "b24ff8fd18aaf799",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "factory default",
        "func": "\nvar io = [\n            {\"channel\":\"mqtt1\", \"type\":\"standard\", \"title\":\"Standard Broker 1\",\"port\":1883},\n            {\"channel\":\"mqtt2\", \"type\":\"standard\", \"title\":\"Standard Broker 2\",\"port\":1883},\n            {\"channel\":\"mqtts1\", \"type\":\"secure\", \"title\":\"Secure TSL Broker 1\",\"port\":8883},\n            {\"channel\":\"mqtts2\", \"type\":\"secure\", \"title\":\"Secure TSL Broker 2\",\"port\":8883}\n         ]\n\n\n//global.set(\"settings.mqtt.value\",JSON.stringify(io));\n//global.set(\"settings.mqtt.type\",\"json\");\n\nmsg.credvalue = JSON.stringify(io);\nmsg.credkey = \"mqtt\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "2526e45505e968a3"
            ]
        ]
    },
    {
        "id": "bb92d7b9df91992e",
        "type": "ui_ui_control",
        "z": "543bdb0775b77d7e",
        "name": "",
        "events": "all",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "85b1310a5e33ce7c"
            ]
        ]
    },
    {
        "id": "c56b4e58f297a3bf",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "9961ceebc81817ae"
            ]
        ]
    },
    {
        "id": "3670217f6d81ee9b",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "str",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "08759d97a8a68a82"
            ]
        ]
    },
    {
        "id": "62f75a9c8bb09869",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "Port",
        "tooltip": "",
        "group": "97ad9f3642bf898c",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "port",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1130,
        "y": 500,
        "wires": [
            [
                "4a997774f8326204"
            ]
        ]
    },
    {
        "id": "7550fbbc756647df",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "ae9ffaf4cfeff1a7",
        "type": "ui_template",
        "z": "543bdb0775b77d7e",
        "group": "97ad9f3642bf898c",
        "name": "Notes",
        "order": 14,
        "width": "3",
        "height": "1",
        "format": "Message count: <span ng-bind-html=\"msg.payload\"></span>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "b7b016042c73c4a9",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "User Name",
        "tooltip": "",
        "group": "97ad9f3642bf898c",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "username",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1150,
        "y": 560,
        "wires": [
            [
                "4a997774f8326204"
            ]
        ]
    },
    {
        "id": "c8b55363a9aaee2c",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "Broker Address",
        "tooltip": "",
        "group": "97ad9f3642bf898c",
        "order": 4,
        "width": "4",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "broker",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1160,
        "y": 440,
        "wires": [
            [
                "4a997774f8326204"
            ]
        ]
    },
    {
        "id": "9961ceebc81817ae",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "GoTo List",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"MQTT_Connect_MQTT_Setup\"],\"hide\":[\"MQTT_Connect_Server_Details\",\"MQTT_Connect_Subscriptions\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 640,
        "wires": [
            [
                "bb92d7b9df91992e",
                "323d367f759b8554"
            ]
        ]
    },
    {
        "id": "08759d97a8a68a82",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "GoTo Settings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"MQTT_Connect_MQTT_Setup\",\"MQTT_Connect_Subscriptions\"],\"show\":[\"MQTT_Connect_Server_Details\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 520,
        "wires": [
            [
                "bb92d7b9df91992e"
            ]
        ]
    },
    {
        "id": "5d22c807dabf4e01",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.password || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 620,
        "wires": [
            [
                "897f1faac5f86575"
            ]
        ]
    },
    {
        "id": "2271363120576f14",
        "type": "ui_text",
        "z": "543bdb0775b77d7e",
        "group": "97ad9f3642bf898c",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Channel",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "0696ee91c9efe54d",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.channel",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 260,
        "wires": [
            [
                "2271363120576f14"
            ]
        ]
    },
    {
        "id": "0f328e95920469ad",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "97ad9f3642bf898c",
        "order": 15,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "APPLY",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "7bc4974253da5638",
                "b8d91a39199e614f"
            ]
        ]
    },
    {
        "id": "292f13e5e0772f9b",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "97ad9f3642bf898c",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 620,
        "wires": [
            [
                "9961ceebc81817ae"
            ]
        ]
    },
    {
        "id": "09e9ae5d799de73a",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "97ad9f3642bf898c",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 780,
        "wires": [
            [
                "9a2ee7be366ba451"
            ]
        ]
    },
    {
        "id": "8ad0aeb60a5e5182",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "outset",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 200,
        "wires": [
            [
                "1527f45ceba94309"
            ]
        ]
    },
    {
        "id": "9a2ee7be366ba451",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "last",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 780,
        "wires": [
            [
                "0696ee91c9efe54d",
                "e125e3957ecaad1a",
                "b31363dc2581c904",
                "2accbbf68188e4ba",
                "848cce4fbccede5d"
            ]
        ]
    },
    {
        "id": "e125e3957ecaad1a",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.broker || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 440,
        "wires": [
            [
                "c8b55363a9aaee2c"
            ]
        ]
    },
    {
        "id": "b31363dc2581c904",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.port || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 500,
        "wires": [
            [
                "62f75a9c8bb09869"
            ]
        ]
    },
    {
        "id": "2accbbf68188e4ba",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.username || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 560,
        "wires": [
            [
                "b7b016042c73c4a9"
            ]
        ]
    },
    {
        "id": "848cce4fbccede5d",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.type || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            [
                "8760c4f32bb734f3"
            ]
        ]
    },
    {
        "id": "4a997774f8326204",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "\nflow.set(\"outset.\" + msg.topic,msg.payload);\nflow.set(\"outset.status\",null);\nflow.set(\"outset.ok\",null);\n\nvar oot = [];\n\n//var r = JSON.parse(global.get(\"settings.io.value\") || \"[]\");\nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==flow.get(\"outset.channel\")) {\n        \n        oot.push(flow.get(\"outset\"));\n        \n    } else {  oot.push(r[rr]);  }\n}\n\n//msg.payload = JSON.stringify(oot);\n//msg.topic = \"set/mqtt\";\n\nflow.set(\"settingsout\",oot);\n\n//msg.payload = JSON.stringify(flow.get(\"outset\"));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 520,
        "wires": [
            [
                "ed28f897f0508a16"
            ]
        ]
    },
    {
        "id": "ed28f897f0508a16",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 460,
        "wires": []
    },
    {
        "id": "7e0d0d1920fc2a9b",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "5345d5406a57b0b2"
        ],
        "x": 455,
        "y": 740,
        "wires": []
    },
    {
        "id": "7bc4974253da5638",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "SAVE",
        "func": "\n//global.set(\"settings.mqtt.value\",JSON.stringify(flow.get(\"settingsout\")));\nflow.set(\"mqtt\",flow.get(\"settingsout\"));\n\n//msg.topic = \"set/mqttSetAt\";\n//msg.payload = new Date().getTime();\n\nmsg.credkey = \"mqtt\";\nmsg.credvalue = JSON.stringify(flow.get(\"settingsout\"));\n\n\n\n// check for changes to subscriptions....\nvar me = flow.get(\"outset.channel\");\nmsg.channel = me;\n\n\nmsg.unsubscribe = null;\n \n \nflow.set(me+\"_status\",\"saved\"); \n \nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==me) {\n        \n        msg.channelindex = parseInt(rr);\n        \n        var subs = r[rr][\"subs\"] || [];\n        \n        var settingsout = flow.get(\"settingsout\");\n        for (var ss in settingsout) {\n    \n            if(settingsout[ss][\"channel\"]==me) {\n                \n                var nsubs = settingsout[ss][\"subs\"] || [];\n                \n                if (JSON.stringify(subs)!==JSON.stringify(nsubs)) {\n                    \n                    flow.set(msg.channel+\"_unsubscribe\",true);\n                }\n                \n                break;\n                \n            } \n        }\n        flow.set(msg.channel+\"_unsubscribe\",true);\n        \n    } \n}\n\n\n\nreturn msg;\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 740,
        "wires": [
            [
                "7e0d0d1920fc2a9b",
                "8bbe3882f310b9bf"
            ]
        ]
    },
    {
        "id": "85b1310a5e33ce7c",
        "type": "switch",
        "z": "543bdb0775b77d7e",
        "name": "change?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 600,
        "wires": [
            [
                "9961ceebc81817ae",
                "562fe688624d9df3"
            ]
        ]
    },
    {
        "id": "897f1faac5f86575",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "Password",
        "tooltip": "",
        "group": "97ad9f3642bf898c",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "password",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1140,
        "y": 620,
        "wires": [
            [
                "4a997774f8326204"
            ]
        ]
    },
    {
        "id": "ff6423549701403c",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "Name",
        "tooltip": "",
        "group": "97ad9f3642bf898c",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "title",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1130,
        "y": 320,
        "wires": [
            [
                "4a997774f8326204"
            ]
        ]
    },
    {
        "id": "58670bf23f01333d",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.title || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 320,
        "wires": [
            [
                "ff6423549701403c"
            ]
        ]
    },
    {
        "id": "8760c4f32bb734f3",
        "type": "ui_text",
        "z": "543bdb0775b77d7e",
        "group": "97ad9f3642bf898c",
        "order": 2,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 380,
        "wires": []
    },
    {
        "id": "49455a3ff3cd370c",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload = msg.status.text.split(\"status.\")[1];\n\nmsg.channel = msg.status.source.name;\nmsg.topic = msg.channel;\n\nflow.set(msg.channel+\"_status\",msg.payload);\n\nmsg2={};\nmsg2.topic = \"alarm/\" + msg.channel.replace(/ /g,\"\");\n\n\nmsg2.payload = \"\" + msg.payload;\nif (msg2.payload==\"connected\") { msg2.payload==\"ok\"; } \n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1258.9999465942383,
        "y": 1074.9999103546143,
        "wires": [
            [
                "53d29fc08a4e1a31"
            ],
            [
                "25f58d98b42b305e"
            ]
        ]
    },
    {
        "id": "d747a0934c396cef",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "86b4824873a1f53b",
            "00165647633f1784",
            "d5ccb843ec2318af",
            "462bc7da6fc2aa06",
            "9d3abbe598f27c41"
        ],
        "x": 255,
        "y": 440,
        "wires": [
            [
                "323d367f759b8554"
            ]
        ]
    },
    {
        "id": "00165647633f1784",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "d747a0934c396cef",
            "5d807e2379a67e9d"
        ],
        "x": 1515,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ab8c384837f9789d",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "ceacc71147a2a8d4",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "channel",
                "v": "mqtt1",
                "vt": "str"
            },
            {
                "p": "refresh",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payloadType": "date",
        "x": 1130,
        "y": 1400,
        "wires": [
            [
                "8606a7ef14bb9add"
            ]
        ]
    },
    {
        "id": "9e238aed8cf94a83",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "broker connect",
        "func": "var mymqtt;\n\nvar me = msg.channel; //\"mqtts1\";\n\n\nif (msg.refresh && flow.get(me+\"_status\")==\"connected\") { return null; }\n\n\n\nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==me) {\n       \n        mymqtt = r[rr];\n        break;\n    }\n}\n\n\nmsg.payload = null;\n\nif (!mymqtt.broker) { msg.action = \"disconnect\"; return msg; }\nif (!mymqtt.port) { msg.action = \"disconnect\"; return msg; }\n\n\nmymqtt.broker = mymqtt.broker.trim();\n\n//dont reconnect if already connected and recent data received\nvar now = new Date().getTime();\nvar ago = (now - (flow.get(me+\"_timestamp\")||0)) / 1000;\n\n\nmymqtt[\"force\"] = true; \n\nmsg.broker = mymqtt;\nmsg.action = \"connect\";\n\nmsg.payload = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1420,
        "wires": [
            [
                "15a8ec691a2a91a6",
                "ddc8848cdb1cf9ed"
            ]
        ]
    },
    {
        "id": "5345d5406a57b0b2",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "8c1f6755db5e3c39",
            "7e0d0d1920fc2a9b",
            "8606a7ef14bb9add"
        ],
        "x": 1455,
        "y": 1420,
        "wires": [
            [
                "9e238aed8cf94a83"
            ]
        ]
    },
    {
        "id": "c182b09e1b1543f4",
        "type": "mqtt in",
        "z": "543bdb0775b77d7e",
        "name": "mqtt2",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ac63dcd04f12b14",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "992fbbf19d3c2548"
            ]
        ]
    },
    {
        "id": "4349dda455f46a65",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "c182b09e1b1543f4"
            ]
        ]
    },
    {
        "id": "318096519eb12501",
        "type": "mqtt in",
        "z": "543bdb0775b77d7e",
        "name": "mqtts2",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "a06de9e4b9d03802",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 550,
        "y": 1480,
        "wires": [
            [
                "3e4784a019e7ecd6"
            ]
        ]
    },
    {
        "id": "25c38f9278eac945",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 1420,
        "wires": [
            [
                "318096519eb12501"
            ]
        ]
    },
    {
        "id": "0e4f409fc5f2fe25",
        "type": "ui_table",
        "z": "543bdb0775b77d7e",
        "group": "97ad9f3642bf898c",
        "name": "Subscriptions",
        "order": 8,
        "width": "6",
        "height": "3",
        "columns": [
            {
                "field": "subs",
                "title": "Subscriptions",
                "width": "98%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1900,
        "y": 320,
        "wires": [
            [
                "0b79323a6ff2834a",
                "166d0b00965dc15b"
            ]
        ]
    },
    {
        "id": "30ea78b0b8e894c6",
        "type": "ui_table",
        "z": "543bdb0775b77d7e",
        "group": "97ad9f3642bf898c",
        "name": "",
        "order": 9,
        "width": "6",
        "height": "3",
        "columns": [
            {
                "field": "topic",
                "title": "Topic",
                "width": "70%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload",
                "title": "Payload",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 710,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "755abcad2bc4f631",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "97ad9f3642bf898c",
        "order": 12,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Subscribe+",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1850,
        "y": 380,
        "wires": [
            [
                "f00b63e7dbae043e"
            ]
        ]
    },
    {
        "id": "c06b0db855621218",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "GoTo Subsriptions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"MQTT_Connect_MQTT_Setup\",\"MQTT_Connect_Server_Details\"],\"show\":[\"MQTT_Connect_Subscriptions\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 380,
        "wires": [
            [
                "e199717138fa3eb5"
            ]
        ]
    },
    {
        "id": "e199717138fa3eb5",
        "type": "ui_ui_control",
        "z": "543bdb0775b77d7e",
        "name": "",
        "events": "connect",
        "x": 2440,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6b127bcd4df02b0e",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "439b4e6d49601b9e",
        "order": 16,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2010,
        "y": 1080,
        "wires": [
            [
                "d05b9b1c80484c05"
            ]
        ]
    },
    {
        "id": "b6638fb7f1276ee1",
        "type": "mqtt out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "71c1543469782501",
        "x": 750,
        "y": 2120,
        "wires": []
    },
    {
        "id": "d3e9af296223df81",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "network",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "network",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2220,
        "y": 480,
        "wires": [
            [
                "94db73f61cc7f677"
            ]
        ]
    },
    {
        "id": "51685fba25499999",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "node",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "node",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 520,
        "wires": [
            [
                "94db73f61cc7f677"
            ]
        ]
    },
    {
        "id": "c12fadd679f3e847",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "device",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "device",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 560,
        "wires": [
            [
                "94db73f61cc7f677"
            ]
        ]
    },
    {
        "id": "18f36977bb16fce9",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "group",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "group",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 600,
        "wires": [
            [
                "94db73f61cc7f677"
            ]
        ]
    },
    {
        "id": "b05c9d60bb866884",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "key",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "key",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 640,
        "wires": [
            [
                "94db73f61cc7f677"
            ]
        ]
    },
    {
        "id": "b0b3d226439b2527",
        "type": "ui_template",
        "z": "543bdb0775b77d7e",
        "group": "439b4e6d49601b9e",
        "name": "Remote",
        "order": 1,
        "width": "12",
        "height": "1",
        "format": "<p style=\"padding-top:10px; padding-left:10px;\">Remote</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1380,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6fb75d0e61f8c908",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "network",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "network",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2220,
        "y": 720,
        "wires": [
            [
                "a2445f535e254bce"
            ]
        ]
    },
    {
        "id": "8e6e4311029253c5",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "node",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 9,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "node",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 760,
        "wires": [
            [
                "a2445f535e254bce"
            ]
        ]
    },
    {
        "id": "4ee5967cbc58f521",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "device",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "device",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 800,
        "wires": [
            [
                "a2445f535e254bce"
            ]
        ]
    },
    {
        "id": "5fd7dd4bc41726c0",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "group",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "group",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 840,
        "wires": [
            [
                "a2445f535e254bce"
            ]
        ]
    },
    {
        "id": "85467df467ba7abf",
        "type": "ui_text_input",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "key",
        "tooltip": "",
        "group": "439b4e6d49601b9e",
        "order": 12,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "key",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2210,
        "y": 880,
        "wires": [
            [
                "a2445f535e254bce"
            ]
        ]
    },
    {
        "id": "495b5eb2d4b910e8",
        "type": "ui_template",
        "z": "543bdb0775b77d7e",
        "group": "439b4e6d49601b9e",
        "name": "Local",
        "order": 7,
        "width": "12",
        "height": "1",
        "format": "<p style=\"padding-top:10px; padding-left:10px;\">Local</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1370,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c5e0d1af8ecc366f",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "439b4e6d49601b9e",
        "order": 14,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2020,
        "y": 1140,
        "wires": [
            [
                "69350a289ea17976"
            ]
        ]
    },
    {
        "id": "ed9b7792ccf5bd26",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "439b4e6d49601b9e",
        "order": 15,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2290,
        "y": 220,
        "wires": [
            [
                "88c5ace0451ec126"
            ]
        ]
    },
    {
        "id": "0b79323a6ff2834a",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 280,
        "wires": []
    },
    {
        "id": "94db73f61cc7f677",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "\nflow.set(\"subscriptions.\" + msg.topic,msg.payload);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "69350a289ea17976",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "GoTo List",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"MQTT_Connect_Server_Details\"],\"hide\":[\"MQTT_Connect_MQTT_Setup\",\"MQTT_Connect_Subscriptions\"]}}",
                "tot": "json"
            },
            {
                "t": "delete",
                "p": "subid",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 1140,
        "wires": [
            [
                "bfdf66f6cc8752cc"
            ]
        ]
    },
    {
        "id": "a2445f535e254bce",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "\nflow.set(\"submap.\" + msg.topic,msg.payload);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "d05b9b1c80484c05",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "\nvar r = flow.get(\"settingsout\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==flow.get(\"outset.channel\")) {\n        \n        var subs = r[rr][\"subs\"] || [];\n        \n        if(flow.get(\"subid\")!==null) {\n            \n            subs[flow.get(\"subid\")] = ({\"remote\":flow.get(\"subscriptions\"), \"local\":flow.get(\"submap\")||{}});({\"remote\":flow.get(\"subscriptions\"), \"local\":flow.get(\"submap\")||{}});\n            \n        } else {\n        \n            subs.push({\"remote\":flow.get(\"subscriptions\"), \"local\":flow.get(\"submap\")||{}});\n        \n        }\n        \n        r[rr][\"subs\"] = subs;\n        \n        flow.set(\"settingsout\",r);\n         \n        break;\n        \n    } \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 1080,
        "wires": [
            [
                "69350a289ea17976",
                "f6c6e3cef0dd9785"
            ]
        ]
    },
    {
        "id": "166d0b00965dc15b",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "flow.set(\"subid\",msg.payload.subid);\n\n\n\n\nvar r = flow.get(\"settingsout\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==flow.get(\"outset.channel\")) {\n        \n       var subs = r[rr][\"subs\"] || [];\n        \n       msg.payload =  subs[msg.payload.subid];\n       flow.set(\"subscriptions\",msg.payload.remote);\n       flow.set(\"submap\",msg.payload.local); \n    }\n}\n\nflow.set(\"lastsubinfo\",msg.payload);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 320,
        "wires": [
            [
                "c06b0db855621218",
                "bc117d62095ff333"
            ]
        ]
    },
    {
        "id": "f00b63e7dbae043e",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "subid=null",
        "func": "flow.set(\"subid\",null);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 380,
        "wires": [
            [
                "c06b0db855621218"
            ]
        ]
    },
    {
        "id": "bfdf66f6cc8752cc",
        "type": "ui_ui_control",
        "z": "543bdb0775b77d7e",
        "name": "",
        "events": "connect",
        "x": 2480,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "5897eca6b11d0fba",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "\nvar r = flow.get(\"settingsout\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==flow.get(\"outset.channel\")) {\n        \n        var subs = r[rr][\"subs\"] || [];\n        \n        msg.payload = [];\n        for (var s in subs) {\n            \n            var topic = (subs[s][\"remote\"][\"network\"] ||  global.get(\"networkId\")) + \"/\";\n            \n            if(!subs[s][\"remote\"][\"node\"] && !subs[s][\"remote\"][\"device\"] && !subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n            else {\n                \n                topic += (subs[s][\"remote\"][\"node\"]||\"+\")  + \"/\";\n                if(!subs[s][\"remote\"][\"device\"]   && !subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n                \n                else {\n                    \n                    topic += (subs[s][\"remote\"][\"device\"]||\"+\")  + \"/\";\n                    if(!subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n                    else {\n                        \n                        topic += (subs[s][\"remote\"][\"group\"]||\"+\")  + \"/\";\n                        if(!subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n                        else {\n                            \n                            topic += subs[s][\"remote\"][\"key\"] ;\n                            \n                        }\n                    }\n                }\n            }\n            \n            \n            msg.payload.push({\"subs\":topic,\"subid\":s});\n        }\n         \n        break;\n        \n    } \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 320,
        "wires": [
            [
                "0e4f409fc5f2fe25",
                "4d9672217a09bb87"
            ]
        ]
    },
    {
        "id": "77791837bde9e9fe",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1680,
        "y": 260,
        "wires": [
            [
                "5897eca6b11d0fba"
            ]
        ]
    },
    {
        "id": "4d9672217a09bb87",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 240,
        "wires": []
    },
    {
        "id": "1527f45ceba94309",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "3fc06920ee0fbf4c",
            "af40223976c03ff5"
        ],
        "x": 1115,
        "y": 200,
        "wires": []
    },
    {
        "id": "3fc06920ee0fbf4c",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "1527f45ceba94309",
            "f6c6e3cef0dd9785"
        ],
        "x": 1595,
        "y": 320,
        "wires": [
            [
                "5897eca6b11d0fba"
            ]
        ]
    },
    {
        "id": "89c3d28eb7e7a280",
        "type": "ui_template",
        "z": "543bdb0775b77d7e",
        "group": "439b4e6d49601b9e",
        "name": "Virtual Keyboard",
        "order": 13,
        "width": "12",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1840,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f6c6e3cef0dd9785",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "3fc06920ee0fbf4c"
        ],
        "x": 2275,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5d807e2379a67e9d",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "95709df5e53541e5",
            "00165647633f1784"
        ],
        "x": 1035,
        "y": 1300,
        "wires": [
            [
                "a60b4bcb034a0a5c",
                "24df010781b797b3"
            ]
        ]
    },
    {
        "id": "503d128a61a06a3b",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "bc117d62095ff333"
        ],
        "x": 1915,
        "y": 560,
        "wires": [
            [
                "91051c8db57bdbd8",
                "310c023718d3ffc5",
                "c8f99d65d5e95aac",
                "ee2acaa8fac16099",
                "264d95e511d9db1b"
            ]
        ]
    },
    {
        "id": "91051c8db57bdbd8",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.remote.network || global.get(\"networkId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 480,
        "wires": [
            [
                "d3e9af296223df81"
            ]
        ]
    },
    {
        "id": "310c023718d3ffc5",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.remote.node || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 520,
        "wires": [
            [
                "51685fba25499999"
            ]
        ]
    },
    {
        "id": "c8f99d65d5e95aac",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.remote.device || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 560,
        "wires": [
            [
                "c12fadd679f3e847"
            ]
        ]
    },
    {
        "id": "ee2acaa8fac16099",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.remote.group || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 600,
        "wires": [
            [
                "18f36977bb16fce9"
            ]
        ]
    },
    {
        "id": "264d95e511d9db1b",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.remote.key || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 640,
        "wires": [
            [
                "b05c9d60bb866884"
            ]
        ]
    },
    {
        "id": "bc117d62095ff333",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "503d128a61a06a3b",
            "4d94222ed8e79908",
            "bd7269a82ff102d0"
        ],
        "x": 2295,
        "y": 320,
        "wires": []
    },
    {
        "id": "0f6c4af2364de3d9",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "MQTTin",
        "links": [
            "072d319784cdc504",
            "9309001b620778dc",
            "cd9373695289a128",
            "fff223ac4d8db52c"
        ],
        "x": 235,
        "y": 1680,
        "wires": [
            [
                "26c888e9ba341692",
                "861ef207fd99b5a9"
            ]
        ]
    },
    {
        "id": "fff223ac4d8db52c",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "0f6c4af2364de3d9"
        ],
        "x": 775,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bcd13d2052b362a4",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "mqtt1",
        "rules": [
            {
                "t": "set",
                "p": "channel",
                "pt": "msg",
                "to": "mqtt1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "mqtt1_timestamp",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "fff223ac4d8db52c"
            ]
        ]
    },
    {
        "id": "072d319784cdc504",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "0f6c4af2364de3d9"
        ],
        "x": 815,
        "y": 1140,
        "wires": []
    },
    {
        "id": "992fbbf19d3c2548",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "mqtt2",
        "rules": [
            {
                "t": "set",
                "p": "mqtt2_timestamp",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1140,
        "wires": [
            [
                "072d319784cdc504"
            ]
        ]
    },
    {
        "id": "9309001b620778dc",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "0f6c4af2364de3d9"
        ],
        "x": 815,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f7fcd6223996486e",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1",
        "rules": [
            {
                "t": "set",
                "p": "channel",
                "pt": "msg",
                "to": "mqtts1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "mqtts1_timestamp",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1300,
        "wires": [
            [
                "9309001b620778dc"
            ]
        ]
    },
    {
        "id": "cd9373695289a128",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "0f6c4af2364de3d9"
        ],
        "x": 795,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3e4784a019e7ecd6",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "mqtt1",
        "rules": [
            {
                "t": "set",
                "p": "mqtts2_timestamp",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1480,
        "wires": [
            [
                "cd9373695289a128"
            ]
        ]
    },
    {
        "id": "26c888e9ba341692",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1680,
        "wires": []
    },
    {
        "id": "96910350d97e33dc",
        "type": "switch",
        "z": "543bdb0775b77d7e",
        "name": "",
        "property": "channel",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "outset.channel",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 1800,
        "wires": [
            [
                "b5544510c431ddc1"
            ]
        ]
    },
    {
        "id": "b5544510c431ddc1",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "var mlist = flow.get(\"mlist\") || [];\n\nif (msg.payload.length>10) { msg.payload = msg.payload.substr(0,7) + \"...\"; }\n\nmlist.push({\"topic\":msg.topic, \"payload\": msg.payload})\n\nif (mlist.length>6) { mlist = []; }\nif (mlist.length>5) { mlist.shift(); }\n\nflow.set(\"mlist\",mlist)\n\nmsg.payload = mlist;\n\n\nmsgcnt = flow.get(\"msgcnt\") || 0;\nmsgcnt++;\nflow.set(\"msgcnt\",msgcnt);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1840,
        "wires": [
            [
                "2f4f716adf8fdf3f",
                "b311d091a70c7413"
            ]
        ]
    },
    {
        "id": "2f4f716adf8fdf3f",
        "type": "trigger",
        "z": "543bdb0775b77d7e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 1880,
        "wires": [
            [
                "30ea78b0b8e894c6"
            ]
        ]
    },
    {
        "id": "2435ea7ed4f146ea",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "msgcnt",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1800,
        "wires": [
            [
                "30ea78b0b8e894c6",
                "b311d091a70c7413"
            ]
        ]
    },
    {
        "id": "af40223976c03ff5",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "1527f45ceba94309",
            "562fe688624d9df3"
        ],
        "x": 605,
        "y": 1800,
        "wires": [
            [
                "2435ea7ed4f146ea"
            ]
        ]
    },
    {
        "id": "b311d091a70c7413",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msgcnt",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1840,
        "wires": [
            [
                "ae9ffaf4cfeff1a7"
            ]
        ]
    },
    {
        "id": "daf6c9ce7adbdc52",
        "type": "ui_dropdown",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "Primary Uplink",
        "tooltip": "",
        "place": "Select option",
        "group": "414e2a18d537ae1a",
        "order": 2,
        "width": "5",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "set/mqttPrimaryUplink",
        "topicType": "str",
        "className": "",
        "x": 1620,
        "y": 1740,
        "wires": [
            [
                "2b500c07ee3ffae7"
            ]
        ]
    },
    {
        "id": "309bef61c072a887",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "options",
                "v": "[\"Choice 1\",\"Choice 2\",{\"Choice 3\":\"3\"}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "x": 1210,
        "y": 1740,
        "wires": [
            [
                "d8b137c54240e852"
            ]
        ]
    },
    {
        "id": "d8b137c54240e852",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "mqtt1 subscriptions",
        "func": "\nmsg.options = [\"none\"];\n \nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if ( r[rr][\"broker\"] ) {\n        \n        var xx =  '{\"' +  r[rr][\"title\"] + '\":\"' + r[rr][\"channel\"] + '\"}';\n        msg.options.push( JSON.parse(xx)  ); \n   \n    }\n       \n    \n}\n\nvar msg1={};\nmsg1.options = msg.options;\n\n\nmsg.payload=global.get(\"settings.mqttPrimaryUplink.value\") || \"none\";\nmsg1.payload=global.get(\"settings.mqttBackupUplink.value\") || \"none\";\n\nreturn [msg,msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1740,
        "wires": [
            [
                "daf6c9ce7adbdc52"
            ],
            [
                "ff537771f58718de"
            ]
        ]
    },
    {
        "id": "ff537771f58718de",
        "type": "ui_dropdown",
        "z": "543bdb0775b77d7e",
        "name": "",
        "label": "Backup Uplink",
        "tooltip": "",
        "place": "Select option",
        "group": "414e2a18d537ae1a",
        "order": 2,
        "width": "5",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "set/mqttBackupUplink",
        "topicType": "str",
        "className": "",
        "x": 1620,
        "y": 1800,
        "wires": [
            [
                "2b500c07ee3ffae7"
            ]
        ]
    },
    {
        "id": "49bf0d88788c2202",
        "type": "ui_ui_control",
        "z": "543bdb0775b77d7e",
        "name": "",
        "events": "all",
        "x": 1100,
        "y": 1660,
        "wires": [
            [
                "a63ea9eec2e3285a"
            ]
        ]
    },
    {
        "id": "a63ea9eec2e3285a",
        "type": "switch",
        "z": "543bdb0775b77d7e",
        "name": "me?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "MQTT Connect",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1660,
        "wires": [
            [
                "d8b137c54240e852"
            ]
        ]
    },
    {
        "id": "5d52bb8fe8ebb45d",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "414e2a18d537ae1a",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Sync Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "#",
        "payloadType": "str",
        "topic": "cmd/sync",
        "topicType": "str",
        "x": 1270,
        "y": 1920,
        "wires": [
            [
                "1309ab2cf486618e"
            ]
        ]
    },
    {
        "id": "2b500c07ee3ffae7",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1875,
        "y": 1740,
        "wires": []
    },
    {
        "id": "03eda15622c029f1",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "postMQTT",
        "links": [
            "4a7695e79d88af15"
        ],
        "x": 395,
        "y": 2220,
        "wires": [
            [
                "3a23c90539f4b538",
                "074e5f4d366b3062"
            ]
        ]
    },
    {
        "id": "15683e03305d05fc",
        "type": "comment",
        "z": "543bdb0775b77d7e",
        "name": "Uplink Data",
        "info": "",
        "x": 360,
        "y": 2140,
        "wires": []
    },
    {
        "id": "8cf143dc4210c0c2",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2080,
        "wires": []
    },
    {
        "id": "c995ebe75c820f4e",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2180,
        "wires": []
    },
    {
        "id": "2033d7feb5717367",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2280,
        "wires": []
    },
    {
        "id": "1de45b33eb0c8e7e",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3a23c90539f4b538",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 2320,
        "wires": []
    },
    {
        "id": "074e5f4d366b3062",
        "type": "switch",
        "z": "543bdb0775b77d7e",
        "name": "",
        "property": "settings.mqttPrimaryUplink.value",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "mqtt1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtt2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtts1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtts2",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 510,
        "y": 2220,
        "wires": [
            [
                "8cf143dc4210c0c2",
                "b6638fb7f1276ee1"
            ],
            [
                "c995ebe75c820f4e",
                "a07b5fa27a020b5b"
            ],
            [
                "2033d7feb5717367",
                "98f28dd26a350a1c"
            ],
            [
                "1de45b33eb0c8e7e",
                "104d8376d38f9e50"
            ]
        ]
    },
    {
        "id": "104d8376d38f9e50",
        "type": "mqtt out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a06de9e4b9d03802",
        "x": 750,
        "y": 2420,
        "wires": []
    },
    {
        "id": "98f28dd26a350a1c",
        "type": "mqtt out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b1aff57e760e2779",
        "x": 750,
        "y": 2320,
        "wires": []
    },
    {
        "id": "a07b5fa27a020b5b",
        "type": "mqtt out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ac63dcd04f12b14",
        "x": 750,
        "y": 2220,
        "wires": []
    },
    {
        "id": "03f071ea578e4789",
        "type": "trigger",
        "z": "543bdb0775b77d7e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "854dad29e043276e"
            ]
        ]
    },
    {
        "id": "4a837d4dcc6ad59d",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 555,
        "y": 1740,
        "wires": []
    },
    {
        "id": "861ef207fd99b5a9",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "mapping",
        "func": "if (!msg.channel) { return null; }\nvar me = msg.channel;\n\nvar topics = msg.topic.split(\"/\");\nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==me) {\n        \n        msg.me = me;\n        var subs = r[rr][\"subs\"] || [];\n        \n        for (var s in subs) {\n            \n            \n            \n            // contunue to next sub if there is a mismatch\n            if (subs[s][\"remote\"][\"network\"] && subs[s][\"remote\"][\"network\"] !== topics[0]) {  continue;  }\n            if (subs[s][\"remote\"][\"node\"] && subs[s][\"remote\"][\"node\"] !== topics[1]) {  continue;  }\n            if (subs[s][\"remote\"][\"device\"] && subs[s][\"remote\"][\"device\"] !== topics[2]) {  continue;  }\n            if (subs[s][\"remote\"][\"group\"] && subs[s][\"remote\"][\"group\"] !== topics[3]) {  continue;  }\n            if (subs[s][\"remote\"][\"key\"] && subs[s][\"remote\"][\"key\"] !== topics[4]) {  continue;  }\n            \n            // match\n            msg.mapping=subs[s];\n            \n            if (subs[s][\"local\"][\"network\"] && subs[s][\"local\"][\"network\"].substr(-1)==\"-\") {  topics[0] = subs[s][\"local\"][\"network\"] + topics[0];  }\n            else if (subs[s][\"remote\"][\"network\"] && subs[s][\"local\"][\"network\"]) {  topics[0] = subs[s][\"local\"][\"network\"];  }\n            \n            if (subs[s][\"local\"][\"node\"] && subs[s][\"local\"][\"node\"].substr(-1)==\"-\") {  topics[1] = subs[s][\"local\"][\"node\"] + topics[1];  }\n            if (subs[s][\"remote\"][\"node\"] && subs[s][\"local\"][\"node\"]) {  topics[1] = subs[s][\"local\"][\"node\"];  }\n            \n            if (subs[s][\"local\"][\"device\"] && subs[s][\"local\"][\"device\"].substr(-1)==\"-\") {  topics[2] = subs[s][\"local\"][\"device\"] + topics[2];  }\n            if (subs[s][\"remote\"][\"device\"] && subs[s][\"local\"][\"device\"]) {  topics[2] = subs[s][\"local\"][\"device\"];  }\n            \n            if (subs[s][\"remote\"][\"group\"] && subs[s][\"local\"][\"group\"]) {  topics[3] = subs[s][\"local\"][\"group\"];  }\n            if (subs[s][\"remote\"][\"key\"] && subs[s][\"local\"][\"key\"]) {  topics[4] = subs[s][\"local\"][\"key\"];  }\n            \n            \n            msg.topic= topics[0] + \"/\" + topics[1] + \"/\" + topics[2] + \"/\" + topics[3] + \"/\" + topics[4];   \n            break;\n           \n        }\n         \n        return msg;\n        \n    } \n}\n\n\n\nreturn null;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1720,
        "wires": [
            [
                "820bc527b65bdb0b",
                "4a837d4dcc6ad59d",
                "96910350d97e33dc"
            ]
        ]
    },
    {
        "id": "820bc527b65bdb0b",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1680,
        "wires": []
    },
    {
        "id": "bd7269a82ff102d0",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "bc117d62095ff333"
        ],
        "x": 1915,
        "y": 800,
        "wires": [
            [
                "28d5dcc7e933bb3f",
                "10b96cb9d69c2549",
                "e3daf9f1be2d7c8e",
                "9155b79fd4aa9f55",
                "822963bf4d0c3eeb"
            ]
        ]
    },
    {
        "id": "28d5dcc7e933bb3f",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.local.network || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 720,
        "wires": [
            [
                "6fb75d0e61f8c908"
            ]
        ]
    },
    {
        "id": "10b96cb9d69c2549",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.local.node || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 760,
        "wires": [
            [
                "8e6e4311029253c5"
            ]
        ]
    },
    {
        "id": "e3daf9f1be2d7c8e",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.local.device || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 800,
        "wires": [
            [
                "4ee5967cbc58f521"
            ]
        ]
    },
    {
        "id": "9155b79fd4aa9f55",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.local.group || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 840,
        "wires": [
            [
                "5fd7dd4bc41726c0"
            ]
        ]
    },
    {
        "id": "822963bf4d0c3eeb",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "msg.payload =  msg.payload.local.key || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 880,
        "wires": [
            [
                "85467df467ba7abf"
            ]
        ]
    },
    {
        "id": "aae055ac50e6084c",
        "type": "ui_button",
        "z": "543bdb0775b77d7e",
        "name": "",
        "group": "439b4e6d49601b9e",
        "order": 15,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "Delete subscription?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2010,
        "y": 940,
        "wires": [
            [
                "8d030c2af2f042bb"
            ]
        ]
    },
    {
        "id": "d78443ba091214c6",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "\nvar r = flow.get(\"settingsout\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==flow.get(\"outset.channel\")) {\n        \n        var subs = r[rr][\"subs\"] || [];\n        \n        if(flow.get(\"subid\")!==null) {\n            \n            //subs[flow.get(\"subid\")] = null;\n            subs.splice(flow.get(\"subid\"), 1);\n        } \n        \n        r[rr][\"subs\"] = subs;\n        \n        flow.set(\"settingsout\",r);\n        \n        flow.set(\"outset.resubscribe\",true);\n         \n        break;\n        \n    } \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 1020,
        "wires": [
            [
                "f6c6e3cef0dd9785",
                "69350a289ea17976"
            ]
        ]
    },
    {
        "id": "8d030c2af2f042bb",
        "type": "ui_toast",
        "z": "543bdb0775b77d7e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Delete",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2170,
        "y": 940,
        "wires": [
            [
                "cdd675678a7f662b"
            ]
        ]
    },
    {
        "id": "cdd675678a7f662b",
        "type": "switch",
        "z": "543bdb0775b77d7e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Delete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2330,
        "y": 940,
        "wires": [
            [
                "d78443ba091214c6"
            ]
        ]
    },
    {
        "id": "53d29fc08a4e1a31",
        "type": "rbe",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1410,
        "y": 1040,
        "wires": [
            [
                "00165647633f1784"
            ]
        ]
    },
    {
        "id": "b8d91a39199e614f",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "9961ceebc81817ae"
            ]
        ]
    },
    {
        "id": "a60b4bcb034a0a5c",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1240,
        "wires": []
    },
    {
        "id": "cf2abb10104bedd1",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1 subscriptions",
        "func": "var me = msg.channel; //\"mqtts1\";\nmsg.topic = [];\n \nvar r = flow.get(\"inset\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==me) {\n        \n        var subs = r[rr][\"subs\"] || [];\n        \n        msg.payload = [];\n        for (var s in subs) {\n            \n            var topic = (subs[s][\"remote\"][\"network\"] || global.get(\"networkId\")) + \"/\";\n            \n            if(!subs[s][\"remote\"][\"node\"] && !subs[s][\"remote\"][\"device\"] && !subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n            else {\n                \n                topic += (subs[s][\"remote\"][\"node\"]||\"+\")  + \"/\";\n                if(!subs[s][\"remote\"][\"device\"]   && !subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n                \n                else {\n                    \n                    topic += (subs[s][\"remote\"][\"device\"]||\"+\")  + \"/\";\n                    if(!subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n                    else {\n                        \n                        topic += (subs[s][\"remote\"][\"group\"]||\"+\")  + \"/\";\n                        if(!subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n                        else {\n                            \n                            topic += subs[s][\"remote\"][\"key\"] ;\n                            \n                        }\n                    }\n                }\n            }\n            \n            \n            msg.topic.push({\"topic\":topic, \"qos\":0});\n        }\n         \n        break;\n        \n    } \n}\n\nmsg.action=\"subscribe\"\nmsg.payload = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1280,
        "wires": [
            [
                "15a8ec691a2a91a6",
                "262621501c217c2d"
            ]
        ]
    },
    {
        "id": "c8dfc4b62269d0f7",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 1280,
        "wires": [
            [
                "cf2abb10104bedd1",
                "b56fed613fd50c14"
            ]
        ]
    },
    {
        "id": "7d75ec317cdb80b3",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 1340,
        "wires": [
            [
                "c4ae395d74144a30"
            ]
        ]
    },
    {
        "id": "c4ae395d74144a30",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1 unsubscriptions",
        "func": "var me = msg.channel; //\"mqtts1\";\nmsg.topic = [];\n \nvar r = flow.get(\"settingsout\");\n\nfor (var rr in r) {\n    \n    if(r[rr][\"channel\"]==me) {\n        \n        var subs = r[rr][\"subs\"] || [];\n        \n        msg.payload = [];\n        for (var s in subs) {\n            \n            var topic = (subs[s][\"remote\"][\"network\"] || global.get(\"networkId\")) + \"/\";\n            \n            if(!subs[s][\"remote\"][\"node\"] && !subs[s][\"remote\"][\"device\"] && !subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n            else {\n                \n                topic += (subs[s][\"remote\"][\"node\"]||\"+\")  + \"/\";\n                if(!subs[s][\"remote\"][\"device\"]   && !subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n                \n                else {\n                    \n                    topic += (subs[s][\"remote\"][\"device\"]||\"+\")  + \"/\";\n                    if(!subs[s][\"remote\"][\"group\"] && !subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n                    else {\n                        \n                        topic += (subs[s][\"remote\"][\"group\"]||\"+\")  + \"/\";\n                        if(!subs[s][\"remote\"][\"key\"]) { topic += \"#\"; } \n            \n                        else {\n                            \n                            topic += subs[s][\"remote\"][\"key\"] ;\n                            \n                        }\n                    }\n                }\n            }\n            \n            \n            msg.topic.push({\"topic\":topic, \"qos\":0});\n        }\n         \n        break;\n        \n    } \n}\n\nflow.set(msg.channel+\"_unsubscribe\",false);\n\nmsg.action=\"unsubscribe\"\nmsg.payload = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1340,
        "wires": [
            [
                "15a8ec691a2a91a6"
            ]
        ]
    },
    {
        "id": "1e2c3dc4f1a6d2b4",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1635,
        "y": 1980,
        "wires": []
    },
    {
        "id": "841c1daffe1cd5d8",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/sync",
        "payload": "#",
        "payloadType": "str",
        "x": 1270,
        "y": 1980,
        "wires": [
            [
                "1309ab2cf486618e"
            ]
        ]
    },
    {
        "id": "1309ab2cf486618e",
        "type": "trigger",
        "z": "543bdb0775b77d7e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1470,
        "y": 1980,
        "wires": [
            [
                "1e2c3dc4f1a6d2b4"
            ]
        ]
    },
    {
        "id": "f22778f8db6503b4",
        "type": "encrypt",
        "z": "543bdb0775b77d7e",
        "name": "",
        "key": "jvnvd8v7vfnvfqunfofnf",
        "x": 1600,
        "y": 2400,
        "wires": [
            [
                "d66880f37cfbc86a",
                "3180fa1bdb84028b"
            ]
        ]
    },
    {
        "id": "b21c44b5aca682d2",
        "type": "decrypt",
        "z": "543bdb0775b77d7e",
        "name": "",
        "key": "jvnvd8v7vfnvfqunfofnf",
        "x": 1760,
        "y": 2500,
        "wires": [
            [
                "cafa6540d36662f8"
            ]
        ]
    },
    {
        "id": "d66880f37cfbc86a",
        "type": "file",
        "z": "543bdb0775b77d7e",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1760,
        "y": 2400,
        "wires": [
            [
                "45d47d5d722276a9"
            ]
        ]
    },
    {
        "id": "1a3d53a739dd3e31",
        "type": "file in",
        "z": "543bdb0775b77d7e",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1600,
        "y": 2500,
        "wires": [
            [
                "b21c44b5aca682d2"
            ]
        ]
    },
    {
        "id": "0560dd3e0eb04f27",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "fgdgdffffffffffffffffffffffffff",
        "payloadType": "str",
        "x": 1260,
        "y": 2400,
        "wires": [
            [
                "432d3be4b65e0596"
            ]
        ]
    },
    {
        "id": "7bd3dfeb8985de80",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1260,
        "y": 2500,
        "wires": [
            [
                "9324a1a96ba29054"
            ]
        ]
    },
    {
        "id": "432d3be4b65e0596",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "if (!msg.credkey) { return null; }\n\nmsg.payload = msg.credvalue;\nmsg.filename=global.get(\"localDirectory\") + \"/credentials/\" + msg.credkey + \"/\" + msg.credkey + \".txt\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 2400,
        "wires": [
            [
                "f22778f8db6503b4"
            ]
        ]
    },
    {
        "id": "9324a1a96ba29054",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "if (!msg.credkey) { return null; }\n\n//msg.payload = msg.credvalue;\nmsg.filename=global.get(\"localDirectory\") + \"/credentials/\" + msg.credkey + \"/\" + msg.credkey + \".txt\";\n\nmsg.pl = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 2500,
        "wires": [
            [
                "1a3d53a739dd3e31"
            ]
        ]
    },
    {
        "id": "3180fa1bdb84028b",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 2360,
        "wires": []
    },
    {
        "id": "cafa6540d36662f8",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "credvalue",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pl",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 2500,
        "wires": [
            [
                "1a019d6064b0df94"
            ]
        ]
    },
    {
        "id": "5c6d7ef27606c78e",
        "type": "link call",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "be95833f61511d28"
        ],
        "timeout": "30",
        "x": 1390,
        "y": 2180,
        "wires": [
            [
                "70ce075f4fedc48e"
            ]
        ]
    },
    {
        "id": "cc8d0cda79592761",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "setcr",
        "links": [],
        "x": 1295,
        "y": 2340,
        "wires": [
            [
                "432d3be4b65e0596"
            ]
        ]
    },
    {
        "id": "1a019d6064b0df94",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2095,
        "y": 2500,
        "wires": []
    },
    {
        "id": "be95833f61511d28",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "getcr",
        "links": [],
        "x": 1295,
        "y": 2560,
        "wires": [
            [
                "9324a1a96ba29054"
            ]
        ]
    },
    {
        "id": "1efdee1f8adbb38d",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "credkey",
                "v": "mqtt1password",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1200,
        "y": 2180,
        "wires": [
            [
                "5c6d7ef27606c78e"
            ]
        ]
    },
    {
        "id": "70ce075f4fedc48e",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 2180,
        "wires": []
    },
    {
        "id": "6290df4c26d04a62",
        "type": "link call",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "cc8d0cda79592761"
        ],
        "timeout": "30",
        "x": 1390,
        "y": 2240,
        "wires": [
            [
                "0e36168d6ec7a2ae"
            ]
        ]
    },
    {
        "id": "150ef70ecc0e22ec",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "credkey",
                "v": "mqtt1password",
                "vt": "str"
            },
            {
                "p": "credvalue",
                "v": "this is a secret",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1190,
        "y": 2240,
        "wires": [
            [
                "6290df4c26d04a62"
            ]
        ]
    },
    {
        "id": "0e36168d6ec7a2ae",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 2240,
        "wires": []
    },
    {
        "id": "45d47d5d722276a9",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1935,
        "y": 2400,
        "wires": []
    },
    {
        "id": "d6802ee0da7f12d4",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1set",
        "links": [
            "c30bc73cea43428b"
        ],
        "x": 195,
        "y": 1300,
        "wires": [
            [
                "db4f9d35085d7d3c"
            ]
        ]
    },
    {
        "id": "15a8ec691a2a91a6",
        "type": "switch",
        "z": "543bdb0775b77d7e",
        "name": "",
        "property": "channel",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "mqtt1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtt2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtts1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtts2",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 1770,
        "y": 1420,
        "wires": [
            [
                "d804a49950f629dc"
            ],
            [
                "911e8ecab49e7c0b"
            ],
            [
                "c30bc73cea43428b"
            ],
            [
                "f503f76ef6bf9fc1"
            ]
        ]
    },
    {
        "id": "c30bc73cea43428b",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "d6802ee0da7f12d4"
        ],
        "x": 1915,
        "y": 1440,
        "wires": []
    },
    {
        "id": "8606a7ef14bb9add",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "5345d5406a57b0b2"
        ],
        "x": 1315,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ddc8848cdb1cf9ed",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 1500,
        "wires": []
    },
    {
        "id": "24df010781b797b3",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "",
        "func": "if (msg.payload!==\"connected\") { return null; }\n\n\nif ((flow.get(msg.channel+\"_unsubscribe\")||false)==true) { return [msg,msg]; } else  { return [msg,null]; }\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1300,
        "wires": [
            [
                "c8dfc4b62269d0f7"
            ],
            [
                "7d75ec317cdb80b3"
            ]
        ]
    },
    {
        "id": "db4f9d35085d7d3c",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "d3da8836485e8072"
            ]
        ]
    },
    {
        "id": "b56fed613fd50c14",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 1240,
        "wires": []
    },
    {
        "id": "17f1d46ca8bfdd87",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1set",
        "links": [
            "f503f76ef6bf9fc1"
        ],
        "x": 195,
        "y": 1480,
        "wires": [
            [
                "7c8479095456bc7d"
            ]
        ]
    },
    {
        "id": "7c8479095456bc7d",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 1480,
        "wires": [
            [
                "318096519eb12501"
            ]
        ]
    },
    {
        "id": "f503f76ef6bf9fc1",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "17f1d46ca8bfdd87"
        ],
        "x": 1915,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f9c8ff66aba3527e",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1set",
        "links": [
            "911e8ecab49e7c0b"
        ],
        "x": 195,
        "y": 1140,
        "wires": [
            [
                "54a816d675a7b0e9"
            ]
        ]
    },
    {
        "id": "54a816d675a7b0e9",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 1140,
        "wires": [
            [
                "c182b09e1b1543f4"
            ]
        ]
    },
    {
        "id": "9e224fa3e5a0134a",
        "type": "link in",
        "z": "543bdb0775b77d7e",
        "name": "mqtts1set",
        "links": [
            "d804a49950f629dc"
        ],
        "x": 235,
        "y": 1000,
        "wires": [
            [
                "abae23326645da04"
            ]
        ]
    },
    {
        "id": "abae23326645da04",
        "type": "delay",
        "z": "543bdb0775b77d7e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 1000,
        "wires": [
            [
                "b0cd44982af7e4c7",
                "70fa81436028a3ce"
            ]
        ]
    },
    {
        "id": "911e8ecab49e7c0b",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "f9c8ff66aba3527e"
        ],
        "x": 1915,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d804a49950f629dc",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "9e224fa3e5a0134a"
        ],
        "x": 1915,
        "y": 1320,
        "wires": []
    },
    {
        "id": "88c5ace0451ec126",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lastsubinfo",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2460,
        "y": 220,
        "wires": [
            [
                "bc117d62095ff333"
            ]
        ]
    },
    {
        "id": "562fe688624d9df3",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "af40223976c03ff5"
        ],
        "x": 695,
        "y": 660,
        "wires": []
    },
    {
        "id": "2526e45505e968a3",
        "type": "link call",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "cc8d0cda79592761"
        ],
        "timeout": "30",
        "x": 570,
        "y": 100,
        "wires": [
            [
                "e824c463fdacab25"
            ]
        ]
    },
    {
        "id": "e824c463fdacab25",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "1ba6cc5b7925c12a",
        "type": "link call",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "be95833f61511d28"
        ],
        "timeout": "30",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "613c8a3bce376482"
            ]
        ]
    },
    {
        "id": "0d493f2c14e423a2",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "2c49e4d5c94adf24",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "credkey",
                "v": "mqtt",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "1ba6cc5b7925c12a"
            ]
        ]
    },
    {
        "id": "613c8a3bce376482",
        "type": "json",
        "z": "543bdb0775b77d7e",
        "name": "",
        "property": "credvalue",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 140,
        "wires": [
            [
                "0063c1f04a0afe84"
            ]
        ]
    },
    {
        "id": "0063c1f04a0afe84",
        "type": "change",
        "z": "543bdb0775b77d7e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt",
                "pt": "flow",
                "to": "credvalue",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 140,
        "wires": [
            [
                "0d493f2c14e423a2"
            ]
        ]
    },
    {
        "id": "8bbe3882f310b9bf",
        "type": "link call",
        "z": "543bdb0775b77d7e",
        "name": "",
        "links": [
            "cc8d0cda79592761"
        ],
        "timeout": "30",
        "x": 270,
        "y": 840,
        "wires": [
            [
                "0aec4229fb8de7e8"
            ]
        ]
    },
    {
        "id": "0aec4229fb8de7e8",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "bd7d48d62f53c173",
        "type": "link out",
        "z": "543bdb0775b77d7e",
        "name": "",
        "mode": "link",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1575,
        "y": 1080,
        "wires": []
    },
    {
        "id": "aec2708bf862797e",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payloadType": "date",
        "x": 970,
        "y": 1140,
        "wires": [
            [
                "25f58d98b42b305e"
            ]
        ]
    },
    {
        "id": "25f58d98b42b305e",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "set alarms",
        "func": "var oot=[];\nvar mqtt = flow.get(\"mqtt\");\n\nfor (var ch in mqtt) { \n    \n    if(mqtt[ch].broker && mqtt[ch].broker!==\"\") {\n        \n        var sts=\"ok\";\n        if (!mqtt[ch][\"status\"]) { sts=\"error\"; }\n        else if (mqtt[ch][\"status\"]==\"connected\") { sts=\"ok\"; }\n        else { sts=mqtt[ch][\"status\"]; }\n        \n        oot.push({\"topic\":\"alarm/\"+mqtt[ch][\"channel\"].replace(/ /g,\"\"), \"payload\":sts})\n    } else {\n        oot.push({\"topic\":\"alarm/\"+mqtt[ch][\"channel\"].replace(/ /g,\"\"), \"payload\":\"off\"})\n    }\n}\n\nmsg.payload = oot;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1140,
        "wires": [
            [
                "73e69132656bdcee"
            ]
        ]
    },
    {
        "id": "73e69132656bdcee",
        "type": "split",
        "z": "543bdb0775b77d7e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1280,
        "y": 1140,
        "wires": [
            [
                "6ffa8d48c78c92b3"
            ]
        ]
    },
    {
        "id": "0ce0e02acac4d0dc",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6ffa8d48c78c92b3",
        "type": "function",
        "z": "543bdb0775b77d7e",
        "name": "msg",
        "func": "msg=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1140,
        "wires": [
            [
                "0ce0e02acac4d0dc",
                "bd7d48d62f53c173"
            ]
        ]
    },
    {
        "id": "9dbb9e860fe374a0",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "channel",
                "v": "mqtt2",
                "vt": "str"
            },
            {
                "p": "refresh",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payloadType": "date",
        "x": 1130,
        "y": 1440,
        "wires": [
            [
                "8606a7ef14bb9add"
            ]
        ]
    },
    {
        "id": "b773d1ae50788297",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "channel",
                "v": "mqtts1",
                "vt": "str"
            },
            {
                "p": "refresh",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payloadType": "date",
        "x": 1130,
        "y": 1480,
        "wires": [
            [
                "8606a7ef14bb9add"
            ]
        ]
    },
    {
        "id": "b89a408f03062cd4",
        "type": "inject",
        "z": "543bdb0775b77d7e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "channel",
                "v": "mqtts2",
                "vt": "str"
            },
            {
                "p": "refresh",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payloadType": "date",
        "x": 1130,
        "y": 1520,
        "wires": [
            [
                "8606a7ef14bb9add"
            ]
        ]
    },
    {
        "id": "70fa81436028a3ce",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1060,
        "wires": []
    },
    {
        "id": "262621501c217c2d",
        "type": "debug",
        "z": "543bdb0775b77d7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "482b6710247f8f61",
        "type": "ui_template",
        "z": "543bdb0775b77d7e",
        "d": true,
        "group": "97ad9f3642bf898c",
        "name": "Virtual Keyboard & Notes",
        "order": 14,
        "width": "3",
        "height": "1",
        "format": "Message count: <span ng-bind-html=\"msg.payload\"></span>\n<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n<div id=\"empty\"></div>\n<button style=\"display:none\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "3ccf6b40.057534",
        "type": "ui_text",
        "z": "d26c3be6.b5ef58",
        "group": "cb203bcb.f1ec68",
        "order": 1,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "LAN IP Address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 540,
        "y": 460,
        "wires": []
    },
    {
        "id": "fbc3ab38.2e80e8",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "b70b897d.314328"
            ]
        ]
    },
    {
        "id": "b70b897d.314328",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "func": "\nmsg.payload = global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_1_ip4.value\") ||  global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_2_ip4.value\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 460,
        "wires": [
            [
                "3ccf6b40.057534"
            ]
        ]
    },
    {
        "id": "5f94911c.24a54",
        "type": "ui_text",
        "z": "d26c3be6.b5ef58",
        "group": "cb203bcb.f1ec68",
        "order": 3,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "Identity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 520,
        "y": 400,
        "wires": []
    },
    {
        "id": "d5c0bd4b.23571",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "bc743a6c.843208"
            ]
        ]
    },
    {
        "id": "bc743a6c.843208",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "func": "\nmsg.payload = global.get(\"networkId\") + \" / \" + global.get(\"node\") ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 400,
        "wires": [
            [
                "5f94911c.24a54"
            ]
        ]
    },
    {
        "id": "7671fe52.7dd1b",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "Rotate Screen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "60eac61d.347078"
            ]
        ]
    },
    {
        "id": "60eac61d.347078",
        "type": "file in",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "filename": "/boot/config.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 240,
        "wires": [
            [
                "abd68b9d.1e2288"
            ]
        ]
    },
    {
        "id": "209a5b3.ceb89a4",
        "type": "split",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "4cbbf15a.e1f5f"
            ]
        ]
    },
    {
        "id": "4cbbf15a.e1f5f",
        "type": "switch",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "lcd_rotate=2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 400,
        "wires": [
            [
                "5a570147.818fb",
                "bda08c25.bf0b9"
            ]
        ]
    },
    {
        "id": "bda08c25.bf0b9",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "5a570147.818fb",
        "type": "switch",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "#lcd",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "92b93d30.932fe"
            ],
            [
                "1835b27a.3a211e"
            ]
        ]
    },
    {
        "id": "bf20d69a.90b028",
        "type": "trigger",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1320,
        "y": 600,
        "wires": [
            [
                "423c266c.16d6f8"
            ]
        ]
    },
    {
        "id": "c8b0429c.3a7c5",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 1310,
        "y": 660,
        "wires": []
    },
    {
        "id": "423c266c.16d6f8",
        "type": "exec",
        "z": "d26c3be6.b5ef58",
        "command": "bash",
        "addpay": false,
        "append": "/home/pi/lcd_rotate.sh",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1450,
        "y": 600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "abd68b9d.1e2288",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "configtxt",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "209a5b3.ceb89a4"
            ]
        ]
    },
    {
        "id": "1835b27a.3a211e",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "configtxt",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "lcd_rotate",
                "fromt": "str",
                "to": "#lcd_rotate",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 500,
        "wires": [
            [
                "111b3535.defdfb"
            ]
        ]
    },
    {
        "id": "92b93d30.932fe",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "configtxt",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "#lcd_rotate",
                "fromt": "str",
                "to": "lcd_rotate",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 460,
        "wires": [
            [
                "111b3535.defdfb"
            ]
        ]
    },
    {
        "id": "111b3535.defdfb",
        "type": "file",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "filename": "/home/pi/config.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1190,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3487cfb8.28fdf",
        "type": "ui_text_input",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "label": "System Name",
        "tooltip": "e.g. St.Trinians",
        "group": "cb203bcb.f1ec68",
        "order": 8,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": "5000",
        "topic": "set/name",
        "topicType": "str",
        "x": 520,
        "y": 640,
        "wires": [
            [
                "93e55623.1ae628"
            ]
        ]
    },
    {
        "id": "c346ae2f.2c43e",
        "type": "ui_template",
        "z": "d26c3be6.b5ef58",
        "d": true,
        "group": "36b47e47.04f1c2",
        "name": "Virtual Keyboard",
        "order": 5,
        "width": "3",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button class=\"VK\" style=\"display:none\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "efc92398.82dbf",
        "type": "ui_text_input",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "label": "Email Address",
        "tooltip": "",
        "group": "cb203bcb.f1ec68",
        "order": 9,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "email",
        "delay": "5000",
        "topic": "set/email",
        "topicType": "str",
        "x": 520,
        "y": 680,
        "wires": [
            [
                "bbcdf11f.f906a"
            ]
        ]
    },
    {
        "id": "47a69ad7.0a5b94",
        "type": "ui_text_input",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "label": "Alarm Temperature",
        "tooltip": "",
        "group": "cb203bcb.f1ec68",
        "order": 10,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": "5000",
        "topic": "set/tAlarm",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 720,
        "wires": [
            [
                "cd030cb5.b6dcf"
            ]
        ]
    },
    {
        "id": "bf47904.d275a7",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 640,
        "wires": [
            [
                "ee777bb4.05aa88",
                "f8a0f6f2.95b158",
                "343dbd59.0f0e52"
            ]
        ]
    },
    {
        "id": "ee777bb4.05aa88",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "tAlarm",
        "func": "msg.payload = parseFloat(global.get(\"settings.tAlarm.value\") || 55);\nmsg.topic = \"set/tAlarm\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 720,
        "wires": [
            [
                "47a69ad7.0a5b94",
                "bc8363a8.8fcbe"
            ]
        ]
    },
    {
        "id": "cd030cb5.b6dcf",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/tAlarm",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "msg",
                "to": "°C",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Alarm temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 720,
        "wires": [
            [
                "e44a91c9.939dc",
                "10386a58.ef2e16"
            ]
        ]
    },
    {
        "id": "bbcdf11f.f906a",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/email",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Email address for alarms",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 680,
        "wires": [
            [
                "e44a91c9.939dc",
                "10386a58.ef2e16",
                "3ca1cdfc.ddcb12"
            ]
        ]
    },
    {
        "id": "93e55623.1ae628",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set/title",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "System name",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 640,
        "wires": [
            [
                "e44a91c9.939dc",
                "10386a58.ef2e16"
            ]
        ]
    },
    {
        "id": "e44a91c9.939dc",
        "type": "link out",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1035,
        "y": 640,
        "wires": []
    },
    {
        "id": "f8a0f6f2.95b158",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "name",
        "func": "msg.payload = global.get(\"settings.title.value\") || global.get(\"iotnode\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 640,
        "wires": [
            [
                "3487cfb8.28fdf"
            ]
        ]
    },
    {
        "id": "343dbd59.0f0e52",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "email",
        "func": "msg.payload = global.get(\"settings.email.value\") || \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "efc92398.82dbf"
            ]
        ]
    },
    {
        "id": "cfa092d4.4a897",
        "type": "change",
        "z": "d26c3be6.b5ef58",
        "name": "post changes",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "cmd/request",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local/+/+/settings/#",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 720,
        "wires": [
            [
                "e44a91c9.939dc"
            ]
        ]
    },
    {
        "id": "10386a58.ef2e16",
        "type": "trigger",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 760,
        "wires": [
            [
                "cfa092d4.4a897"
            ]
        ]
    },
    {
        "id": "ea82bc01.ed0f6",
        "type": "ui_ui_control",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "6aac662b.dcf9e8",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"hide\":\"Setup\"}}",
        "payloadType": "json",
        "x": 180,
        "y": 860,
        "wires": [
            [
                "ea82bc01.ed0f6"
            ]
        ]
    },
    {
        "id": "f8a1c186.e772c",
        "type": "ui_template",
        "z": "d26c3be6.b5ef58",
        "group": "db644eb4.b9d0a",
        "name": "css etc",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<style>\n\n   .md-button {\n        text-transform: none;\n    }\n    .myB {\n        box-shadow: 2px 2px 2px grey;\n        padding: 1px 8px 0px 8px;\n        width: 100%;\n    }\n    .tdLS {\n        padding: 0px 8px 0px 0px;\n    }\n  .filled { \n      height: 100% !important;\n\n      padding: 0 !important;\n      margin: 0 !important;\n  }\n  .nr-dashboard-template {\n      padding: 0;\n      margin: 0;\n  }\n  \n  .rounded {\n  border-radius: 6px 6px 6px 6px;\n}\n \n   .bigfont {\n  font-size: 18px;\n}\n\n   .smallfont {\n  font-size: 12px;\n}\n.smB { \n    width: 100px;\n    display: inline-block;\n}\n.thinB { \n    height: 20px;\n    0px 0px 0px 0px;\n}\n.maxsiz {\n\n    width: 100%; \n    height: 100%;\n\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "x": 290,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "2c37422a.c4432e",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"show\":\"Setup\"}}",
        "payloadType": "json",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "ea82bc01.ed0f6"
            ]
        ]
    },
    {
        "id": "3ca1cdfc.ddcb12",
        "type": "trigger",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 840,
        "wires": [
            [
                "334db306.ec4e5c"
            ]
        ]
    },
    {
        "id": "334db306.ec4e5c",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "attach",
        "func": "msg.to = msg.payload;\n\nmsg.payload=\"Update from \"+global.get(\"node\");\nmsg.topic=\"Change of email on \"+global.get(\"node\");\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "162d2a4d.5abdb6"
            ]
        ]
    },
    {
        "id": "162d2a4d.5abdb6",
        "type": "link out",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 1175,
        "y": 900,
        "wires": []
    },
    {
        "id": "2d0e49f7.e5dea6",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NETWORK",
        "payloadType": "env",
        "x": 760,
        "y": 60,
        "wires": [
            [
                "7764bb64.c73e14"
            ]
        ],
        "info": "https://discourse.nodered.org/t/using-environment-variable-as-password-for-mqtt-in-node/26318\nhttps://pimylifeup.com/environment-variables-linux/"
    },
    {
        "id": "7764bb64.c73e14",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 60,
        "wires": []
    },
    {
        "id": "16bba053.442da",
        "type": "ui_text",
        "z": "d26c3be6.b5ef58",
        "group": "cb203bcb.f1ec68",
        "order": 2,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "WAN IP Address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 540,
        "y": 500,
        "wires": []
    },
    {
        "id": "c01b8f85.fe258",
        "type": "inject",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "98ca4c9d.3b46"
            ]
        ]
    },
    {
        "id": "98ca4c9d.3b46",
        "type": "function",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "func": "\nmsg.payload = global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".system.ipWan.value\") || \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "16bba053.442da"
            ]
        ]
    },
    {
        "id": "bc8363a8.8fcbe",
        "type": "debug",
        "z": "d26c3be6.b5ef58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 780,
        "wires": []
    },
    {
        "id": "4c0c2dc2.b27d04",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "apee4ooF",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "apee4ooF",
        "payloadType": "str",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "a21187af.21a728"
            ]
        ]
    },
    {
        "id": "a21187af.21a728",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "Nodeware",
        "func": "global.set(\"Nodeware\", \"tihat_v01.08.22\") ; \n\nmsg.payload = global.get(\"Nodeware\") ; \nmsg.topic = \"system/Nodeware\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 160,
        "wires": [
            [
                "ae865c20.2fec3"
            ]
        ]
    },
    {
        "id": "2f4faaf.de84556",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "BACKUP SOFTWARE",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "a21187af.21a728",
                "188d04eb.5e61ab"
            ]
        ]
    },
    {
        "id": "188d04eb.5e61ab",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "outputs": 1,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "5d1caef7.6d7ca"
            ]
        ]
    },
    {
        "id": "5d1caef7.6d7ca",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "attach",
        "func": "msg.payload=\"Software Backup attached from \"+global.get(\"node\");\nmsg.topic=\"Node-RED Software Backup from \"+global.get(\"node\");\nvar nw = \"flows_ihiu_\" + global.get(\"Nodeware\") || \"\";\nmsg.attachments = [{   // utf-8 string as an attachment \n            filename:  nw + '.json',\n            path: '/home/pi/.node-red/flows_ihiu.json'\n        },\n        {   // utf-8 string as an attachment \n            filename: nw + '_cred.json',\n            path: '/home/pi/.node-red/flows_ihiu_cred.json'\n        },\n        {   // utf-8 string as an attachment \n            filename: 'settings.js',\n            path: '/home/pi/.node-red/settings.js'\n        }];\n\nmsg.to=\"setup@heatweb.com, nodered@heatweb.com\";\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "9c5f6a01.7abfd8"
            ]
        ]
    },
    {
        "id": "9c5f6a01.7abfd8",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 815,
        "y": 100,
        "wires": []
    },
    {
        "id": "2eb67577.c3d0f2",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "pwgen -B -1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 400,
        "wires": [
            [
                "60f2a12c.9ad8d",
                "c21e8eff.725fa"
            ],
            [],
            []
        ]
    },
    {
        "id": "2d9e199.d1e7066",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "Refresh Random",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "afe11f5a.15ac2"
            ]
        ]
    },
    {
        "id": "60f2a12c.9ad8d",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 360,
        "wires": []
    },
    {
        "id": "c21e8eff.725fa",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "newnode",
        "func": "msg.payload = msg.payload.trim();\n\nflow.set(\"newnode\", msg.payload);\nflow.set(\"newnetwork\", msg.payload + \"-\" + msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a1744584.91173",
        "type": "link in",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "9c5f6a01.7abfd8",
            "162d2a4d.5abdb6",
            "8e2f7245.7dc94",
            "330292c9.7440ae",
            "ce07b36ff1b6b4ca"
        ],
        "x": 385,
        "y": 260,
        "wires": [
            [
                "f933bdc8a3b48903"
            ]
        ]
    },
    {
        "id": "65658ff.e75c27",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 180,
        "wires": [
            [
                "6f4f1505.582314"
            ]
        ]
    },
    {
        "id": "6f4f1505.582314",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1490,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "aa3585f1.9ded8",
        "type": "file in",
        "z": "caf59ec6.61c85",
        "name": "",
        "filename": "/etc/hostname",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 600,
        "y": 460,
        "wires": [
            [
                "f92c39c.55b0848"
            ]
        ]
    },
    {
        "id": "f92c39c.55b0848",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "hostname",
        "func": "flow.set(\"hostname\",msg.payload.trim());\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "38cc9c30.d04654",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1520,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bdad4049.b8d448",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "38cc9c30.d04654"
            ]
        ]
    },
    {
        "id": "e97fbed5.80f718",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo node-red-restart",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1520,
        "y": 340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5fcf0e85.427da8",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "e97fbed5.80f718"
            ]
        ]
    },
    {
        "id": "ae865c20.2fec3",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 555,
        "y": 160,
        "wires": []
    },
    {
        "id": "5d64f9af.79a558",
        "type": "comment",
        "z": "caf59ec6.61c85",
        "name": "",
        "info": "https://itnext.io/raspberry-pi-read-only-kiosk-mode-the-complete-tutorial-for-2021-58a860474215",
        "x": 1680,
        "y": 40,
        "wires": []
    },
    {
        "id": "6b9176cd.8d5378",
        "type": "template",
        "z": "caf59ec6.61c85",
        "name": "rofs",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "#!/bin/sh\n\n#  Read-only Root-FS for Raspian using overlayfs\n#  Version 1.1:\n#  Changed to use /proc/mounts rathern than /etc/fstab for deriving the root filesystem.\n#\n#  Version 1:\n#  Created 2017 by Pascal Suter @ DALCO AG, Switzerland to work on Raspian as custom init script\n#  (raspbian does not use an initramfs on boot)\n#\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#    You should have received a copy of the GNU General Public License\n#    along with this program.  If not, see\n#    <http://www.gnu.org/licenses/>.\n#\n#\n#  Tested with Raspbian mini, 2017-01-11\n#\n#  This script will mount the root filesystem read-only and overlay it with a temporary tempfs \n#  which is read-write mounted. This is done using the overlayFS which is part of the linux kernel \n#  since version 3.18. \n#  when this script is in use, all changes made to anywhere in the root filesystem mount will be lost \n#  upon reboot of the system. The SD card will only be accessed as read-only drive, which significantly\n#  helps to prolong its life and prevent filesystem coruption in environments where the system is usually\n#  not shut down properly \n#\n#  Install: \n#  copy this script to /sbin/overlayRoot.sh and add \"init=/sbin/overlayRoot.sh\" to the cmdline.txt \n#  file in the raspbian image's boot partition. \n#  I strongly recommend to disable swapping before using this. it will work with swap but that just does \n#  not make sens as the swap file will be stored in the tempfs which again resides in the ram.\n#  run these commands on the booted raspberry pi BEFORE you set the init=/sbin/overlayRoot.sh boot option:\n#  sudo dphys-swapfile swapoff\n#  sudo dphys-swapfile uninstall\n#  sudo update-rc.d dphys-swapfile remove\n#\n#  To install software, run upgrades and do other changes to the raspberry setup, simply remove the init= \n#  entry from the cmdline.txt file and reboot, make the changes, add the init= entry and reboot once more. \n \nfail(){\n\techo -e \"$1\"\n\t/bin/bash\n}\n \n# load module\nmodprobe overlay\nif [ $? -ne 0 ]; then\n    fail \"ERROR: missing overlay kernel module\"\nfi\n# mount /proc\nmount -t proc proc /proc\n\n# create a writable fs to then create our mountpoints \nmount -t tmpfs inittemp /mnt\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not create a temporary filesystem to mount the base filesystems for overlayfs\"\nfi\nmkdir /mnt/lower\nmkdir /mnt/rw\nmount -t tmpfs root-rw /mnt/rw\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not create tempfs for upper filesystem\"\nfi\nmkdir /mnt/rw/upper\nmkdir /mnt/rw/work\nmkdir /mnt/newroot\n\n# mount root filesystem readonly \nrootDev=`awk '$2 == \"/\" {print $1}' /proc/mounts`\nrootMountOpt=`awk '$2 == \"/\" {print $4}' /proc/mounts`\nrootFsType=`awk '$2 == \"/\" {print $3}' /proc/mounts`\nmount -t ${rootFsType} -o ${rootMountOpt},ro ${rootDev} /mnt/lower\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not ro-mount original root partition\"\nfi\nmount -t overlay -o lowerdir=/mnt/lower,upperdir=/mnt/rw/upper,workdir=/mnt/rw/work overlayfs-root /mnt/newroot\nif [ $? -ne 0 ]; then\n    fail \"ERROR: could not mount overlayFS\"\nfi\n# create mountpoints inside the new root filesystem-overlay\nmkdir /mnt/newroot/ro\nmkdir /mnt/newroot/rw\n# remove root mount from fstab (this is already a non-permanent modification)\ngrep -v \"$rootDev\" /mnt/lower/etc/fstab > /mnt/newroot/etc/fstab\necho \"#the original root mount has been removed by overlayRoot.sh\" >> /mnt/newroot/etc/fstab\necho \"#this is only a temporary modification, the original fstab\" >> /mnt/newroot/etc/fstab\necho \"#stored on the disk can be found in /ro/etc/fstab\" >> /mnt/newroot/etc/fstab\n# change to the new overlay root\ncd /mnt/newroot\npivot_root . mnt\nexec chroot . sh -c \"$(cat <<END\n# move ro and rw mounts to the new root\nmount --move /mnt/mnt/lower/ /ro\nif [ $? -ne 0 ]; then\n    echo \"ERROR: could not move ro-root into newroot\"\n    /bin/bash\nfi\nmount --move /mnt/mnt/rw /rw\nif [ $? -ne 0 ]; then\n    echo \"ERROR: could not move tempfs rw mount into newroot\"\n    /bin/bash\nfi\n# unmount unneeded mounts so we can unmout the old readonly root\numount /mnt/mnt\numount /mnt/proc\numount -l -f /mnt/dev\numount -l -f /mnt\n# continue with regular init\nexec /sbin/init\nEND\n)\"\n",
        "output": "str",
        "x": 1690,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "afe11f5a.15ac2",
        "type": "change",
        "z": "caf59ec6.61c85",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "2eb67577.c3d0f2",
                "aa3585f1.9ded8"
            ]
        ]
    },
    {
        "id": "54864e96.ab682",
        "type": "link in",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "9bd2209.563a4e"
        ],
        "x": 255,
        "y": 480,
        "wires": [
            [
                "afe11f5a.15ac2"
            ]
        ]
    },
    {
        "id": "e0e0515a.86385",
        "type": "ui_button",
        "z": "caf59ec6.61c85",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Shutdown now",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 240,
        "wires": [
            [
                "6803aeb1.a8f08"
            ]
        ]
    },
    {
        "id": "6803aeb1.a8f08",
        "type": "ui_toast",
        "z": "caf59ec6.61c85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "3b18b185.0cc4fe"
            ]
        ]
    },
    {
        "id": "3b18b185.0cc4fe",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 240,
        "wires": [
            [
                "38cc9c30.d04654"
            ],
            []
        ]
    },
    {
        "id": "aae309cc.38b1f8",
        "type": "ui_button",
        "z": "caf59ec6.61c85",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Reboot now",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 140,
        "wires": [
            [
                "bad6cbe2.1ffd48"
            ]
        ]
    },
    {
        "id": "bad6cbe2.1ffd48",
        "type": "ui_toast",
        "z": "caf59ec6.61c85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Continue",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "2b8db478.456f1c"
            ]
        ]
    },
    {
        "id": "2b8db478.456f1c",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Continue",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 140,
        "wires": [
            [
                "6f4f1505.582314"
            ],
            []
        ]
    },
    {
        "id": "8bd72823.48ffa8",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "906024b7.9e3e48",
            "96558a40.5d4f48"
        ],
        "x": 1095,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd75b998.3e21f8",
        "type": "ui_button",
        "z": "caf59ec6.61c85",
        "name": "",
        "group": "36b47e47.04f1c2",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Screen Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "cmd:screenoff",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "8bd72823.48ffa8"
            ]
        ]
    },
    {
        "id": "f9330051.032dd",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "curl -4 icanhazip.com",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "8533301e.131c5",
                "b86156e4eee3efcb"
            ],
            [
                "b86156e4eee3efcb"
            ],
            []
        ]
    },
    {
        "id": "b402523e.a6f91",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "f9330051.032dd"
            ]
        ]
    },
    {
        "id": "e94e294.1344bd8",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1240,
        "wires": []
    },
    {
        "id": "eea65fc3.a3816",
        "type": "ui_ui_control",
        "z": "caf59ec6.61c85",
        "name": "",
        "events": "change",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "52d28d2d.cbdfc4"
            ]
        ]
    },
    {
        "id": "52d28d2d.cbdfc4",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "f9330051.032dd"
            ]
        ]
    },
    {
        "id": "6ce87828.9e4298",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 835,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8533301e.131c5",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "",
        "func": "msg.topic = \"system/ipWan\";\n\nif (msg.payload.indexOf(\":\")>-1) { msg.topic = \"system/ip6Wan\"; }\nelse if (msg.payload.indexOf(\".\")>-1) { \n    \n    msg.topic = \"system/ipWan\"; \n    \n    flow.set(\"lastInternet\", new Date().getTime());\n\n}\nelse { return null; }\n\nmsg.payload = msg.payload.trim();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "e94e294.1344bd8",
                "6ce87828.9e4298",
                "f335e175.6df9c",
                "556a92c0.e7270c"
            ]
        ]
    },
    {
        "id": "36ea6531.c3034a",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "f9330051.032dd"
            ]
        ]
    },
    {
        "id": "ad159fc9.694d2",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "curl -6 icanhazip.com",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "8533301e.131c5"
            ],
            [],
            []
        ]
    },
    {
        "id": "3de2e538.b1573a",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "90",
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "ad159fc9.694d2"
            ]
        ]
    },
    {
        "id": "f335e175.6df9c",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "190",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 900,
        "y": 1060,
        "wires": [
            [
                "e818139f.e4767",
                "b21bf83.249c908"
            ]
        ]
    },
    {
        "id": "954f4e2a.469b3",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "d": true,
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1410,
        "y": 1060,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e818139f.e4767",
        "type": "delay",
        "z": "caf59ec6.61c85",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1100,
        "y": 1060,
        "wires": [
            [
                "954f4e2a.469b3",
                "9814f3c8ce55aa94"
            ]
        ]
    },
    {
        "id": "a1c82691.72a528",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1275,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b21bf83.249c908",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "rebootCountNoInternet",
        "func": "msg.topic = \"set/rebootCountNoInternet\";\nmsg.title = \"No Internet Reboot Counter\";\n\nmsg.payload = global.get(\"settings.rebootCountNoInternet.value\") || 0;\n\nmsg.payload = parseInt(msg.payload) + 1;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1120,
        "wires": [
            [
                "a1c82691.72a528"
            ]
        ]
    },
    {
        "id": "57951fb3.4ee4",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "24ebaea5.b9caa2"
        ],
        "x": 1075,
        "y": 1180,
        "wires": []
    },
    {
        "id": "556a92c0.e7270c",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "125",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 900,
        "y": 1180,
        "wires": [
            [
                "a635c368.ad31f",
                "57951fb3.4ee4"
            ]
        ]
    },
    {
        "id": "9abe6fd2.97b23",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1275,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a635c368.ad31f",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "resetModemCount",
        "func": "msg.topic = \"set/resetModemCount\";\nmsg.title = \"No Internet Reset Modem Counter\";\n\nmsg.payload = global.get(\"settings.resetModemCount.value\") || 0;\n\nmsg.payload = parseInt(msg.payload) + 1;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1240,
        "wires": [
            [
                "9abe6fd2.97b23"
            ]
        ]
    },
    {
        "id": "3e283cd4.ba17d4",
        "type": "comment",
        "z": "caf59ec6.61c85",
        "name": "INTERNET CONNECTIN WATCHDOG",
        "info": "",
        "x": 970,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f3e7f125f704571f",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo service --status-all",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "8bf751a05ae972a3"
            ],
            [
                "8bf751a05ae972a3"
            ],
            []
        ]
    },
    {
        "id": "e0df63888c7c8d67",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "f3e7f125f704571f"
            ]
        ]
    },
    {
        "id": "8bf751a05ae972a3",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 720,
        "wires": []
    },
    {
        "id": "bb5d90aa9b8b8de4",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 550,
        "y": 1320,
        "wires": [
            [
                "a1c4cbe2b8ce9045"
            ]
        ]
    },
    {
        "id": "a1c4cbe2b8ce9045",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "internet alarms",
        "func": "var lastin = flow.get(\"lastInternet\") || 0;\n\nvar timin = new Date().getTime();\n\nvar age = (timin - lastin)/1000;\n\nmsg.topic = \"alarm/internet\";\nmsg.title = \"Internet connection\";\nif (age < (60*35)) { msg.payload = \"ok\"; }\nelse { msg.payload = \"No internet\"; }\n\n\n// var msg2 = {};\n// msg2.topic = \"alarm/modemLTE\";\n// msg2.title = \"Modem LTE 4G connection\";\n// var online = flow.get(\"online\") || false;\n// if (msg.payload !== \"ok\") { msg2.payload = \"No modem response\";  }\n// else if (online==true) { msg2.payload = \"ok\"; }\n// else { msg2.payload = \"No LTE connection\"; }\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1320,
        "wires": [
            [
                "392d126135d185ae"
            ]
        ]
    },
    {
        "id": "392d126135d185ae",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 875,
        "y": 1320,
        "wires": []
    },
    {
        "id": "b86156e4eee3efcb",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3b81355f577c5ed0",
        "type": "ip",
        "z": "caf59ec6.61c85",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": true,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 270,
        "y": 1260,
        "wires": [
            [
                "f9250d333c4118ea"
            ]
        ]
    },
    {
        "id": "7c78ffbdf659f35e",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1260,
        "wires": [
            [
                "3b81355f577c5ed0"
            ]
        ]
    },
    {
        "id": "f9250d333c4118ea",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1360,
        "wires": []
    },
    {
        "id": "9814f3c8ce55aa94",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1340,
        "y": 1000,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fae86fdae8a260b0",
        "type": "inject",
        "z": "caf59ec6.61c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 370,
        "y": 840,
        "wires": [
            [
                "ba70b18364f6cb97"
            ]
        ]
    },
    {
        "id": "ba70b18364f6cb97",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "newnode",
        "property": "node",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "newnode",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 840,
        "wires": [
            [
                "b71148848e2bf0c4",
                "eabe8d1364d5d4d6"
            ],
            [
                "5ebfc67f51971a9b"
            ]
        ]
    },
    {
        "id": "b71148848e2bf0c4",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "NAMES",
        "func": "\n//msg.newnode = global.get(\"node\").toLowerCase();\nmsg.newnode = \"zcc\" + flow.get(\"newnode\").toLowerCase();\nmsg.newnetwork = flow.get(\"newnode\").toLowerCase();\nmsg.newgroup = \"new\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 600,
        "wires": [
            [
                "0c8e4f9ba98b5549",
                "17de64753eebbe39"
            ]
        ]
    },
    {
        "id": "eabe8d1364d5d4d6",
        "type": "change",
        "z": "caf59ec6.61c85",
        "name": "Renaming Host...",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Renaming Host...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 760,
        "wires": [
            [
                "f6d473f40db484d1"
            ]
        ]
    },
    {
        "id": "5ebfc67f51971a9b",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "ls /etc/connect/service/",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 860,
        "y": 900,
        "wires": [
            [
                "61cd65e615237acd",
                "3d59f4f15bee38f8"
            ],
            [],
            []
        ]
    },
    {
        "id": "0c8e4f9ba98b5549",
        "type": "delay",
        "z": "caf59ec6.61c85",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 600,
        "wires": [
            [
                "ee3de00d68af001d"
            ]
        ]
    },
    {
        "id": "17de64753eebbe39",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo rm /etc/connect/service/settings.json",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1160,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f6d473f40db484d1",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "3de9243a.1e77fc",
            "560266b59151de97"
        ],
        "x": 1295,
        "y": 760,
        "wires": []
    },
    {
        "id": "61cd65e615237acd",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "settings.json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 900,
        "wires": [
            [],
            [
                "8db53daeb38d71c9"
            ]
        ]
    },
    {
        "id": "3d59f4f15bee38f8",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 860,
        "wires": []
    },
    {
        "id": "ee3de00d68af001d",
        "type": "template",
        "z": "caf59ec6.61c85",
        "name": "newnode",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\nn=\"{{newnetwork}}\"\nb=\"{{newnode}}\"\n\nc=\"/g\"\n\nh=\"newnetwork\"\na=\"s/$h/\"\nSED_ARG=\"$a$n$c\"\necho $SED_ARG\nsudo sed -i -e $SED_ARG /boot/heatweb/config.json\n\nh=\"newnode\"\na=\"s/$h/\"\nSED_ARG=\"$a$b$c\"\necho $SED_ARG\nsudo sed -i -e $SED_ARG /boot/heatweb/config.json\n\nh=$(cat /etc/hostname)\na=\"s/$h/\"\nSED_ARG=\"$a$b$c\"\necho $SED_ARG\nsudo sed -i -e $SED_ARG /etc/hostname\nsudo sed -i -e $SED_ARG /etc/hosts\n\n\n",
        "output": "str",
        "x": 1240,
        "y": 600,
        "wires": [
            [
                "b22cdb936fef512f"
            ]
        ]
    },
    {
        "id": "8db53daeb38d71c9",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "NAMES",
        "func": "\nmsg.newnode = global.get(\"node\");\nmsg.newgroup = \"new\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 900,
        "wires": [
            [
                "ce5847766f4b0346"
            ]
        ]
    },
    {
        "id": "b22cdb936fef512f",
        "type": "switch",
        "z": "caf59ec6.61c85",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 600,
        "wires": [
            [
                "10009c749c3e694f",
                "adacce0945ee4d08",
                "09188e09a11c4047",
                "f74be062730bbc2b"
            ]
        ]
    },
    {
        "id": "ce5847766f4b0346",
        "type": "delay",
        "z": "caf59ec6.61c85",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 900,
        "wires": [
            [
                "3821ed536c0d82b2"
            ]
        ]
    },
    {
        "id": "10009c749c3e694f",
        "type": "file",
        "z": "caf59ec6.61c85",
        "name": "",
        "filename": "/home/pi/node-hiu-newname.sh",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1630,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "adacce0945ee4d08",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1550,
        "y": 680,
        "wires": [
            [
                "ac51970a6b1b32e9"
            ]
        ]
    },
    {
        "id": "09188e09a11c4047",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 1630,
        "y": 520,
        "wires": []
    },
    {
        "id": "f74be062730bbc2b",
        "type": "function",
        "z": "caf59ec6.61c85",
        "name": "attach",
        "func": "\nvar ip = global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_1_ip4.value\") ||  global.get(\"readings.\" + global.get(\"localNetworkId\") + \".\" + global.get(\"node\") + \".cpu.net_2_ip4.value\")\n\nmsg.payload=\"New Node \"+msg.newnode + \" on \" + ip;\nmsg.topic=\"New Node \"+msg.newnode + \" on \" + ip;\n\n\nmsg.to=\"setup@heatweb.com\";\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 560,
        "wires": [
            [
                "ce07b36ff1b6b4ca"
            ]
        ]
    },
    {
        "id": "3821ed536c0d82b2",
        "type": "template",
        "z": "caf59ec6.61c85",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "sudo wget -O - \"https://connect.jfrog.io/v2/install_connect\" | sudo sh -s HKFpL8CSxjiG8HPrcpwBY5cUpukezbRg9A heatwebremote -n={{newnode}} -g={{newgroup}}\n",
        "output": "str",
        "x": 1620,
        "y": 900,
        "wires": [
            [
                "ea6c7419d9a5790b"
            ]
        ]
    },
    {
        "id": "ac51970a6b1b32e9",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "bash",
        "addpay": false,
        "append": "/home/pi/node-hiu-newname.sh",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1680,
        "y": 680,
        "wires": [
            [
                "2410b06e6b368222",
                "4dfe5619f04e9913",
                "ebfec58fefedf84c"
            ],
            [],
            [
                "2410b06e6b368222"
            ]
        ]
    },
    {
        "id": "ce07b36ff1b6b4ca",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "4bf50365.a06d4c",
            "a1744584.91173"
        ],
        "x": 1725,
        "y": 560,
        "wires": []
    },
    {
        "id": "ea6c7419d9a5790b",
        "type": "subflow:a8d56bd2.c3c6f",
        "z": "caf59ec6.61c85",
        "name": "",
        "x": 1760,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "2410b06e6b368222",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1910,
        "y": 760,
        "wires": []
    },
    {
        "id": "4dfe5619f04e9913",
        "type": "trigger",
        "z": "caf59ec6.61c85",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1900,
        "y": 680,
        "wires": [
            [
                "f2ca3839a6320ce7",
                "09bb118a25975493"
            ]
        ]
    },
    {
        "id": "ebfec58fefedf84c",
        "type": "change",
        "z": "caf59ec6.61c85",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rebooting...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 580,
        "wires": [
            [
                "2b0fd762d5e46184"
            ]
        ]
    },
    {
        "id": "8d44588036dcb5d3",
        "type": "debug",
        "z": "caf59ec6.61c85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 900,
        "wires": []
    },
    {
        "id": "f2ca3839a6320ce7",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "d": true,
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2140,
        "y": 680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "09bb118a25975493",
        "type": "exec",
        "z": "caf59ec6.61c85",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 2130,
        "y": 740,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2b0fd762d5e46184",
        "type": "link out",
        "z": "caf59ec6.61c85",
        "name": "",
        "links": [
            "3de9243a.1e77fc",
            "560266b59151de97"
        ],
        "x": 2025,
        "y": 580,
        "wires": []
    },
    {
        "id": "f933bdc8a3b48903",
        "type": "e-mail",
        "z": "caf59ec6.61c85",
        "server": "auth.smtp.1and1.co.uk",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 550,
        "y": 260,
        "wires": []
    },
    {
        "id": "97d4f0dbe521c35a",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1250,
        "y": 940,
        "wires": []
    },
    {
        "id": "83b384b84b66bf57",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "flows",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/flows\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n\nif (msg.mqttpass) {\n\n   var cfrom = '\"broker\": \"mqtt\"';\n   var cto = '\"broker\": \"mqtt\", \"credentials\":{\"user\":\"admin\", \"password\":\"' + msg.mqttpass + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\nif (msg.mysqlpass) {\n\n   var cfrom = '\"type\": \"MySQLdatabase\"';\n   var cto = '\"type\": \"MySQLdatabase\", \"credentials\":{\"user\":\"root\", \"password\":\"' + msg.mysqlpass + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\nif (msg.influxdbpass) {\n\n   var cfrom = '\"type\": \"influxdb\"';\n   var cto = '\"type\": \"influxdb\", \"credentials\":{\"token\":\"' + msg.influxdbpass + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\n\n// if (global.get(\"settings.flow\")==\"flows_ihiu_setup\") {\n    \n//    var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n//    var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"setup\",\"password\":\"setup\"}';\n//    msg.payload = msg.payload.replace(cfrom, cto);\n\n// } else {\n\n//    var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n//    var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n//    msg.payload = msg.payload.replace(cfrom, cto);\n\n// }\n\n\n// var cfrom = '\"broker\":\"192.168.0.3\"';\n// var cto = '\"broker\":\"192.168.0.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n// msg.payload = msg.payload.replace(cfrom, cto);\n\n// var cfrom = '\"broker\":\"192.168.1.3\"';\n// var cto = '\"broker\":\"192.168.1.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n// msg.payload = msg.payload.replace(cfrom, cto);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 940,
        "wires": [
            [
                "09c4bf47696ba509"
            ]
        ]
    },
    {
        "id": "09c4bf47696ba509",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "97d4f0dbe521c35a"
            ]
        ]
    },
    {
        "id": "77f11d734a52178e",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "func": "//var cmd = \"curl http://localhost:5002/auth/token --data 'client_id=node-red-admin&grant_type=password&scope=*&username=admin&password=Duu1cahe'\";\n\nmsg.payload={};\nmsg.payload['client_id']=\"node-red-admin\";\nmsg.payload['grant_type']=\"password\";\nmsg.payload['scope']=\"*\";\nmsg.payload['username']=\"admin\";\nmsg.payload['password']=\"admin\";\n\n\nmsg.url = \"http://localhost:\" + msg.port + \"/auth/token\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "e6bc002c7392e0dc"
            ]
        ]
    },
    {
        "id": "e6bc002c7392e0dc",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 530,
        "y": 200,
        "wires": [
            [
                "7901b3b9835df8ba",
                "1461b78dcaf19c57"
            ]
        ]
    },
    {
        "id": "d5f3e40036a26a89",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1250,
        "y": 200,
        "wires": []
    },
    {
        "id": "8a6e146d074ff03f",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "auth",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "d5f3e40036a26a89"
            ]
        ]
    },
    {
        "id": "c197dad2e2a88b90",
        "type": "json",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "pretty": false,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "8a6e146d074ff03f"
            ]
        ]
    },
    {
        "id": "8796446282db9c4e",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flow_mysql_influxdb.json",
        "filename": "/home/pi/plumbing-controller/flows/flow_mysql_influxdb.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 390,
        "y": 940,
        "wires": [
            [
                "d99fe9fa0d42f1cf"
            ]
        ]
    },
    {
        "id": "7901b3b9835df8ba",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 140,
        "wires": []
    },
    {
        "id": "2833d5e736c34b2a",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 360,
        "wires": []
    },
    {
        "id": "bc2f0f01a91c72e4",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "2833d5e736c34b2a",
                "fba270245f716790"
            ]
        ]
    },
    {
        "id": "1c52a518306f8854",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "aea492096a0be938"
            ]
        ]
    },
    {
        "id": "139f657b2eac6bf4",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 420,
        "wires": []
    },
    {
        "id": "fba270245f716790",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-mysql ",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-mysql\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 420,
        "wires": [
            [
                "0d62659052a95287"
            ]
        ]
    },
    {
        "id": "0d62659052a95287",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "139f657b2eac6bf4",
                "0d3fd0022e222db3"
            ]
        ]
    },
    {
        "id": "aea492096a0be938",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-influxdb",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-influxdb\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 360,
        "wires": [
            [
                "bc2f0f01a91c72e4"
            ]
        ]
    },
    {
        "id": "384a352230451649",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "email",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\":\"e-mail\"",
                "fromt": "str",
                "to": "\"type\":\"e-mail\", \"credentials\":{\"userid\":\"nodered@heatweb.com\", \"password\":\"nodered@heatweb.com\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "1461b78dcaf19c57",
        "type": "switch",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "access_token",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 200,
        "wires": [
            [
                "c197dad2e2a88b90"
            ]
        ]
    },
    {
        "id": "288eaef20e642ecb",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1110,
        "y": 1320,
        "wires": []
    },
    {
        "id": "15de0fd6f58a78be",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "flow",
        "func": "\nmsg.payload = JSON.stringify({\n   \"id\": \"91ad452.0000111\",\n   \"label\": \"Public MQTT\",\n   \"nodes\": JSON.parse(msg.payload),\n   \"configs\": []\n});\n\n\n\n\nmsg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/flow\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n\nif (global.get(\"noderedmqttpass\")) {\n\n   var cfrom = '\"broker\":\"localhost\"';\n   var cto = '\"broker\":\"localhost\", \"credentials\":{\"user\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n\n}\n\nif (global.get(\"settings.flow\")==\"flows_ihiu_setup\") {\n    \n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"setup\",\"password\":\"setup\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n} else {\n\n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\nvar cfrom = '\"broker\":\"192.168.0.3\"';\nvar cto = '\"broker\":\"192.168.0.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\nvar cfrom = '\"broker\":\"192.168.1.3\"';\nvar cto = '\"broker\":\"192.168.1.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1320,
        "wires": [
            [
                "032c14af78649f3b"
            ]
        ]
    },
    {
        "id": "b7bed141afd0d73b",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 930,
        "y": 1320,
        "wires": [
            [
                "288eaef20e642ecb"
            ]
        ]
    },
    {
        "id": "0fc04fa639364717",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "nodes_public_mqtt.json",
        "filename": "/home/pi/plumbing-controller/flows/nodes_public_mqtt.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "15de0fd6f58a78be"
            ]
        ]
    },
    {
        "id": "032c14af78649f3b",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "Credentials",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"MySQLdatabase\"",
                "fromt": "str",
                "to": "\"type\": \"MySQLdatabase\", \"credentials\":{\"user\":\"root\", \"password\":\"zccamei4ies@\"}",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"influxdb\"",
                "fromt": "str",
                "to": "\"type\": \"influxdb\", \"credentials\":{\"token\":\"oHyHPxoTEHQysurXl_4Kxbmj5EnpWtsg3RnSXoMnLeO01ICmIBUXIo3yXNEsLxMtPzTb9lwgzHDX5tL4ipOzjw==\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "b7bed141afd0d73b"
            ]
        ]
    },
    {
        "id": "67c009f0411c8299",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 940,
        "wires": [
            [
                "8796446282db9c4e"
            ]
        ]
    },
    {
        "id": "85f6f1001955c4ee",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "0fc04fa639364717"
            ]
        ]
    },
    {
        "id": "f6e133436ac4793a",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 480,
        "wires": []
    },
    {
        "id": "0d3fd0022e222db3",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-crypto-js",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-crypto-js\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "9c0b93ed15db32a2"
            ]
        ]
    },
    {
        "id": "9c0b93ed15db32a2",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "f6e133436ac4793a",
                "980f0f34f77b13b7"
            ]
        ]
    },
    {
        "id": "021aa70716465253",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Request for Authorisation where password is set",
        "info": "",
        "x": 220,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c426c02c64b266c",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Install Nodes required for Flows",
        "info": "",
        "x": 170,
        "y": 300,
        "wires": []
    },
    {
        "id": "775445f28c7e016c",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Deploy Complete Flows",
        "info": "",
        "x": 140,
        "y": 820,
        "wires": []
    },
    {
        "id": "753c89bda373e552",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Deploy Individual Tab",
        "info": "",
        "x": 140,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7db1854d246ef6bc",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "77f11d734a52178e"
            ]
        ]
    },
    {
        "id": "cd85c4a980403ed1",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1190,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d0d5d4dda1d26f70",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "flow",
        "func": "\n\nmsg.headers = {};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/flow\";\n\n\n// {\n//    \"id\": \"e090c99b.574098\",\n//       \"type\": \"tab\",\n//          \"label\": \"HIU\",\n//             \"disabled\": false,\n//                \"info\": \"\"\n// },\n\n\nfunction checkTab(nodeitem) {\n   return nodeitem.type == \"tab\";\n}\n\nfunction filterTab(nodeitem) {\n   return nodeitem.type != \"tab\";\n}\n\nmsg.payload = JSON.parse(msg.payload);\n\nvar tabf = msg.payload.filter(checkTab)[0];\n\ntabf.nodes = msg.payload.filter(filterTab);\n\n// msg.payload = JSON.stringify({\n//    \"id\": \"91ad452.0000112\",\n//    \"label\": \"HIU\",\n//    \"nodes\": JSON.parse(msg.payload),\n//    \"configs\": []\n// });\n\nmsg.payload = tabf;\nreturn msg;\n\n\n\n\n\n\nmsg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url = \"http://localhost:\" + msg.port + \"/flow\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n\nif (global.get(\"noderedmqttpass\")) {\n\n   var cfrom = '\"broker\":\"localhost\"';\n   var cto = '\"broker\":\"localhost\", \"credentials\":{\"user\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n\n}\n\nif (global.get(\"settings.flow\")==\"flows_ihiu_setup\") {\n    \n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"setup\",\"password\":\"setup\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n} else {\n\n   var cfrom = '\"broker\":\"mqtt.heatweb.com\"';\n   var cto = '\"broker\":\"mqtt.heatweb.com\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n   msg.payload = msg.payload.replace(cfrom, cto);\n\n}\n\n\nvar cfrom = '\"broker\":\"192.168.0.3\"';\nvar cto = '\"broker\":\"192.168.0.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\nvar cfrom = '\"broker\":\"192.168.1.3\"';\nvar cto = '\"broker\":\"192.168.1.3\",\"credentials\":{\"user\":\"' + global.get(\"settings.node\") + '\",\"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\nmsg.payload = msg.payload.replace(cfrom, cto);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "cf586d4bd7f24034",
                "aca36bf3864cc267"
            ]
        ]
    },
    {
        "id": "be86f14993865fe2",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 1120,
        "wires": [
            [
                "cd85c4a980403ed1"
            ]
        ]
    },
    {
        "id": "aca36bf3864cc267",
        "type": "change",
        "z": "ac900a3fdc09a7bf",
        "name": "Credentials",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"MySQLdatabase\"",
                "fromt": "str",
                "to": "\"type\": \"MySQLdatabase\", \"credentials\":{\"user\":\"root\", \"password\":\"zccamei4ies@\"}",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"type\": \"influxdb\"",
                "fromt": "str",
                "to": "\"type\": \"influxdb\", \"credentials\":{\"token\":\"oHyHPxoTEHQysurXl_4Kxbmj5EnpWtsg3RnSXoMnLeO01ICmIBUXIo3yXNEsLxMtPzTb9lwgzHDX5tL4ipOzjw==\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1120,
        "wires": [
            [
                "be86f14993865fe2"
            ]
        ]
    },
    {
        "id": "429afe0f293b591a",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "fd0ab91fb5e3b28c"
            ]
        ]
    },
    {
        "id": "53e684ac2805fd16",
        "type": "comment",
        "z": "ac900a3fdc09a7bf",
        "name": "Deploy Individual Tab",
        "info": "",
        "x": 140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cf586d4bd7f24034",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1180,
        "wires": []
    },
    {
        "id": "fd0ab91fb5e3b28c",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flow_public_mqtt.json",
        "filename": "/home/pi/plumbing-controller/flows/flow_public_mqtt.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "d0d5d4dda1d26f70"
            ]
        ]
    },
    {
        "id": "d99fe9fa0d42f1cf",
        "type": "credentials",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "props": [
            {
                "value": "mqttpass",
                "type": "msg"
            },
            {
                "value": "mysqlpass",
                "type": "msg"
            },
            {
                "value": "influxdbpass",
                "type": "msg"
            }
        ],
        "x": 690,
        "y": 940,
        "wires": [
            [
                "83b384b84b66bf57"
            ]
        ]
    },
    {
        "id": "b25ce75334084ab2",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flow_hiu.json",
        "filename": "/home/pi/plumbing-controller/flows/flow_hiu.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 390,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "ec78d36e0893ad3e",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 540,
        "wires": []
    },
    {
        "id": "980f0f34f77b13b7",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-heatweb",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-heatweb\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 540,
        "wires": [
            [
                "91719cf724984c02"
            ]
        ]
    },
    {
        "id": "91719cf724984c02",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 540,
        "wires": [
            [
                "ec78d36e0893ad3e",
                "9004c86aa9528228"
            ]
        ]
    },
    {
        "id": "0253cc725be8d6da",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 600,
        "wires": []
    },
    {
        "id": "9004c86aa9528228",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-email",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-email\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 600,
        "wires": [
            [
                "87c8ca5dbc0f0e54"
            ]
        ]
    },
    {
        "id": "87c8ca5dbc0f0e54",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 600,
        "wires": [
            [
                "0253cc725be8d6da",
                "5affa22be9a8ea42"
            ]
        ]
    },
    {
        "id": "745d17b668022a10",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "5affa22be9a8ea42",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-credentials",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-credentials\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 660,
        "wires": [
            [
                "5a15e7560b6938c7"
            ]
        ]
    },
    {
        "id": "5a15e7560b6938c7",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 660,
        "wires": [
            [
                "745d17b668022a10",
                "e55559ebb19b655d"
            ]
        ]
    },
    {
        "id": "d174518f0ceca3be",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 720,
        "wires": []
    },
    {
        "id": "e55559ebb19b655d",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-contrib-m-bus",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-contrib-m-bus\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 720,
        "wires": [
            [
                "b0b26977e57af52c"
            ]
        ]
    },
    {
        "id": "b0b26977e57af52c",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 720,
        "wires": [
            [
                "d174518f0ceca3be",
                "a2ab75a409af4b07"
            ]
        ]
    },
    {
        "id": "79df35ef89cb3231",
        "type": "debug",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "a2ab75a409af4b07",
        "type": "function",
        "z": "ac900a3fdc09a7bf",
        "name": "node-red-node-ui-table",
        "func": "msg.headers={};\n\nmsg.headers.Authorization = \"Bearer \" + flow.get(\"auth.access_token\");\nmsg.headers['Content-type'] = \"application/json\";\nmsg.headers['Node-RED-Deployment-Type'] = \"full\";\n\nmsg.url=\"http://localhost:\" + msg.port + \"/nodes\";\n\n//var cfrom = '\"broker\":\"localhost\"';\n//var cto = '\"broker\":\"localhost\", \"credentials\":{\"username\":\"nodereduser\", \"password\":\"' + global.get(\"noderedmqttpass\") + '\"}';\n\nmsg.payload = { \"module\": \"node-red-node-ui-table\" };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 780,
        "wires": [
            [
                "3c3483790635f883"
            ]
        ]
    },
    {
        "id": "3c3483790635f883",
        "type": "http request",
        "z": "ac900a3fdc09a7bf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 870,
        "y": 780,
        "wires": [
            [
                "79df35ef89cb3231"
            ]
        ]
    },
    {
        "id": "bfe7b40b9bc0ae5d",
        "type": "file in",
        "z": "ac900a3fdc09a7bf",
        "name": "flows_original.json",
        "filename": "/home/pi/plumbing-controller/flows/flows_original.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 410,
        "y": 880,
        "wires": [
            [
                "d99fe9fa0d42f1cf"
            ]
        ]
    },
    {
        "id": "3f0777a813e5c8b4",
        "type": "inject",
        "z": "ac900a3fdc09a7bf",
        "name": "5002",
        "props": [
            {
                "p": "port",
                "v": "5002",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "bfe7b40b9bc0ae5d"
            ]
        ]
    },
    {
        "id": "a858abda.b7d77",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "9f13027f.9f8808"
            ]
        ]
    },
    {
        "id": "45473e03.df3498",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "cat /dev/rfcomm0",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 700,
        "wires": [
            [
                "51c88b2.956b274",
                "a996be6a.e727"
            ],
            [],
            [
                "b992978f.665558"
            ]
        ]
    },
    {
        "id": "4a2fb33a.62f5fc",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 680,
        "wires": []
    },
    {
        "id": "385e693.de33216",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo hciconfig hci0 piscan",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 320,
        "wires": [
            [
                "897c437d.39759"
            ],
            [],
            [
                "1493d3ef.6fa4e4"
            ]
        ]
    },
    {
        "id": "1493d3ef.6fa4e4",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo sdptool add --channel=22 SP",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "a8057537.49018"
            ],
            [],
            [
                "dc16379b.4717a"
            ]
        ]
    },
    {
        "id": "dc16379b.4717a",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sdptool browse local",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 480,
        "wires": [
            [
                "dcedb959.ee39c8"
            ],
            [],
            [
                "a74efa98.2a58b"
            ]
        ]
    },
    {
        "id": "9a4a61a8.5e423",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "933ad751.a89f8"
            ]
        ]
    },
    {
        "id": "16e4e3e.218451c",
        "type": "comment",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "info": "https://puravidaapps.com/btchat.php\n\nhttps://raspberrypi.stackexchange.com/questions/41776/failed-to-connect-to-sdp-server-on-ffffff000000-no-such-file-or-directory\n\nExploring Beaglebone Page 373\n\n> sudo nano /etc/systemd/system/dbus-org.bluez.service\n> \n> Change \tExecStart=/usr/lib/bluetooth/bluetoothd\n> \n> \n> To \tExecStart=/usr/lib/bluetooth/bluetoothd --compat\n> \t\tExecStartPost=/usr/bin/sdptool add --channel=22 SP\n> ",
        "x": 1480,
        "y": 200,
        "wires": []
    },
    {
        "id": "933ad751.a89f8",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo chmod 777 /var/run/sdp",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "7170a91d.d4af78"
            ],
            [],
            [
                "385e693.de33216"
            ]
        ]
    },
    {
        "id": "7170a91d.d4af78",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "897c437d.39759",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "a8057537.49018",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 400,
        "wires": []
    },
    {
        "id": "dcedb959.ee39c8",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 480,
        "wires": []
    },
    {
        "id": "a74efa98.2a58b",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 560,
        "wires": [
            [
                "4ff1b6b2.3d3e08",
                "cd254164.8a57d"
            ]
        ]
    },
    {
        "id": "ad5f7bdd.d340a",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "59928121.15ae7",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=1",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 700,
        "wires": [
            [
                "45473e03.df3498"
            ]
        ]
    },
    {
        "id": "b992978f.665558",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=0",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "repeat",
                "pt": "flow",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 740,
        "wires": [
            [
                "4719ec99.fd797c"
            ]
        ]
    },
    {
        "id": "cd254164.8a57d",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "connected",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 310,
        "y": 760,
        "wires": [
            [
                "4719ec99.fd797c"
            ],
            [
                "906a651c.30cf08"
            ],
            [
                "a7ecee69.045eb"
            ],
            []
        ]
    },
    {
        "id": "a996be6a.e727",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 580,
        "wires": []
    },
    {
        "id": "906a651c.30cf08",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=2",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 800,
        "wires": [
            [
                "7f66b6d8.e4b7d8"
            ]
        ]
    },
    {
        "id": "2bc11c9d.250c74",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "a74efa98.2a58b"
            ]
        ]
    },
    {
        "id": "eb818ae9.47fc7",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sdptool browse local",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1560,
        "y": 420,
        "wires": [
            [
                "af9eedcd.3004a"
            ],
            [],
            []
        ]
    },
    {
        "id": "52fedb65.af6bec",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1520,
        "y": 360,
        "wires": [
            [
                "eb818ae9.47fc7"
            ]
        ]
    },
    {
        "id": "d151aa96.212d38",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 520,
        "wires": []
    },
    {
        "id": "af9eedcd.3004a",
        "type": "split",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "splt": "Service Name:",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1560,
        "y": 480,
        "wires": [
            [
                "d151aa96.212d38"
            ]
        ]
    },
    {
        "id": "f235db6c.9658a",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "kill",
                "v": "SIGINT",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGINT",
        "payloadType": "str",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "4ff1b6b2.3d3e08"
            ]
        ]
    },
    {
        "id": "5aab3443.d2e0bc",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "connected=3 ?",
        "property": "connected",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 660,
        "wires": [
            [
                "4a2fb33a.62f5fc",
                "56eb85b3.cc4c64"
            ]
        ]
    },
    {
        "id": "ec8563.de6bdaa",
        "type": "file",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "filename": "/dev/rfcomm0",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2140,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "7f66b6d8.e4b7d8",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "Hello",
        "func": "msg.payload = \"Connecting.\";\n\nflow.set(\"conecttime\",new Date().getTime());\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 900,
        "wires": [
            [
                "cff37297.f5ef78"
            ]
        ]
    },
    {
        "id": "cff37297.f5ef78",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=3",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "setup",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 900,
        "wires": [
            [
                "1ebcd37c.8f61fd"
            ]
        ]
    },
    {
        "id": "c3670a6f.38c7d",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "1ebcd37c.8f61fd",
            "6e596ef3.307ab8",
            "84542de.7fb905",
            "120c59a1.6bcdd6"
        ],
        "x": 955,
        "y": 980,
        "wires": [
            [
                "d3d31d4c.d59fc"
            ]
        ]
    },
    {
        "id": "1ebcd37c.8f61fd",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "c3670a6f.38c7d",
            "c28ee7d6.c232c8",
            "ae09edb9.dd02a"
        ],
        "x": 945,
        "y": 900,
        "wires": []
    },
    {
        "id": "a9f406b0.ce4cf8",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 880,
        "wires": [
            [
                "7f66b6d8.e4b7d8"
            ]
        ]
    },
    {
        "id": "3def2c9c.fe4194",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1490,
        "y": 60,
        "wires": [
            [
                "aabb62fd.defb68"
            ]
        ]
    },
    {
        "id": "bc6ce2b2.1851d8",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "buttons",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "aabb62fd.defb68",
        "type": "template",
        "z": "cb3266cf.ceb2a",
        "name": "Buttons",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<style>\n    \n    .sectionhead {\n\t\n\tfont-size: 16px;\n\ttext-align: center;\n\tpadding: 8px 8px;\n\t\n\t\n    }\n    \n    .cmd {\n\t\n\tpadding: 7px 10px;\n\t\n\t\n    }\n\n</style>",
        "output": "str",
        "x": 1480,
        "y": 100,
        "wires": [
            [
                "bc6ce2b2.1851d8"
            ]
        ]
    },
    {
        "id": "56eb85b3.cc4c64",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "2c665455.66217c"
        ],
        "x": 1375,
        "y": 720,
        "wires": []
    },
    {
        "id": "2c665455.66217c",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "56eb85b3.cc4c64"
        ],
        "x": 275,
        "y": 120,
        "wires": [
            [
                "50fd5790.ed22a"
            ]
        ]
    },
    {
        "id": "cda41707.b604e8",
        "type": "comment",
        "z": "cb3266cf.ceb2a",
        "name": "User Input",
        "info": "",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "84542de.7fb905",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "c3670a6f.38c7d",
            "52ce1bce.f094ac"
        ],
        "x": 1155,
        "y": 80,
        "wires": []
    },
    {
        "id": "c65d02d1.45fc5",
        "type": "comment",
        "z": "cb3266cf.ceb2a",
        "name": "User Output",
        "info": "",
        "x": 1270,
        "y": 80,
        "wires": []
    },
    {
        "id": "50fd5790.ed22a",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "User Interface",
        "func": "\nvar incP = msg.payload;\nvar incT = msg.topic;\n\n\nif (msg.payload.split(\":\")[0]!==\"1234\") {\n    \n    msg.payload = \"Connection refused.\"\n    return [msg,null];\n}\n\n\nvar userReq = msg.payload.substr(msg.payload.indexOf(\":\")+1);\n\nif (userReq.substr(0,8)==\"readings\") {\n    \n    \n    return [null,null,msg];\n}\n\n// MQTT JSON\nelse if (userReq.substr(0,6)==\"MQTT:{\") {\n    \n    \n    var oot = {};\n    var mqttobj = JSON.parse(userReq.substr(5));\n    if(mqttobj[\"set\"]) {\n        for(var ss in mqttobj[\"set\"]) {\n            oot[\"set\" + \"/\" + ss] = mqttobj[\"set\"][ss];\n        }\n    }\n    msg.payload = oot;\n    return [null,msg];\n}\n\nelse if (userReq.substr(0,5)==\"MQTT:\") {\n    \n    var topc = userReq.substr(5);\n    var vv = topc.split(\"=\")[1];\n    topc = topc.split(\"=\")[0];\n    \n    msg.payload = {};\n    msg.payload[topc] = vv;\n    return [null,msg];\n}\n\n\n\nvar readings = global.get(\"readings.\" +  global.get(\"localNetworkId\") + \".\" + global.get(\"node\"));\n\nvar btns = \"\";\nfor (var g in readings) {\n        \n     btns += '<button class=\"button\" onclick=\"myFunction(' + \"'\" + g + \"/#'\" + ')\">' + g +'</button>';\n           \n}\n\nmsg.delay=\"\";\nmsg.payload = \"\";\nvar filter = \"\";\n\n\n\nif (userReq==\"cmd\") {\n    \n    var cmds = JSON.parse(readings.json.commands.value) || [];\n    var cbtns=\"\";\n\n    //msg.payload=\"<b>\" + global.get(\"node\") + \"/\" + grp + \"/#<hr>\";\n    msg.payload += \"<div class='sectionhead' width='100%'>Standard Commands</div>\";\n        //}\n        \n    for (var k in cmds) {\n        \n         cbtns += '<button class=\"button cmd\" onclick=\"myFunction(' + \"'MQTT:\" + cmds[k][\"topic\"] + \"=\" + cmds[k][\"default\"] + \"'\" + ')\">' + cmds[k][\"title\"] +'</button>';\n     \n\n    }\n    \n    msg.payload += cbtns; \n    msg.payload += flow.get(\"buttons\"); \n    flow.set(\"repeat\",\"\");  \n    msg.delay=0; \n    \n}\n\n\n\nelse if (userReq.indexOf(\"/\")>0) {\n    \n    var grp = userReq.split(\"/\")[0];\n    if(userReq.split(\"/\").length==3) { \n        \n        grp = userReq.split(\"/\")[1]; \n        \n        if (userReq.split(\"/\")[2]!==\"#\") {  filter=userReq.split(\"/\")[2]; }\n    }\n    \n    \n    \n\n    //msg.payload=\"<b>\" + global.get(\"node\") + \"/\" + grp + \"/#<hr>\";\n    msg.payload += \"<div class='sectionhead' width='100%'>\" + global.get(\"node\") + \" / \" + grp + \" / \" + (filter || \"#\") + \"</div>\";\n        //}\n        \n    for (var k in readings[grp]) {\n        \n        \n        if (filter!==\"\" && filter!==k) { continue; }\n        \n        var units =  readings[grp][k].units || \"\";\n        if (units!==\"\") { units = \"<td width='1px'><small>\" + units + \"</small></td>\"; }\n        //if (readings[grp][k].title) {\n        \n         msg.payload += '<div onclick=\"myFunction(' + \"'\" + global.get(\"node\") + \"/\" + grp + \"/\" + k + \"'\" + ')\">' ;\n    \n        \n            msg.payload += \"<table width='100%'><tr><td><small>\" + (readings[grp][k].title || k) + \"</td><td align='right'><b>\" + readings[grp][k].value + \"</b></td>\" + units + \"</tr></table><hr class='hr'>\";\n        \n        msg.payload += '</div>';\n        \n         if (filter!==\"\" && grp==\"settings\") { \n             \n             var opt = global.get(\"settings\");\n             if (opt[k] && opt[k][\"options\"]) {\n                var opts = opt[k][\"options\"].split(\",\");\n                for (var optss in opts) {\n                    msg.payload += '<button class=\"button cmd\" onclick=\"myFunction(' + \"'MQTT:\" + global.get(\"node\") + \"/set/\" + k + \"=\" + opts[optss].split(\":\")[0] + \"'\" + ')\">' + (opts[optss].split(\":\")[1] || opts[optss]) +'</button>';\n                }    \n             }\n             else if (opt[k] && (opt[k][\"min\"]||opt[k][\"min\"]===0) && opt[k][\"max\"]) {\n                \n                for (var rc = parseInt(opt[k][\"min\"]); rc<=parseInt(opt[k][\"max\"]); rc++) {\n                    msg.payload += '<button class=\"button cmd\" onclick=\"myFunction(' + \"'MQTT:\" + global.get(\"node\") + \"/set/\" + k + \"=\" + rc + \"'\" + ')\">' + rc + (opt[k][\"units\"]||\"\") +'</button>';\n                }    \n             }\n             \n         }\n         \n        //  else if (filter!==\"\" && !isNaN(readings[grp][k].value)) { \n        \n        //         msg.payload += flow.get(\"chartjs\");\n                \n        //  }\n        //}\n    }\n    \n    msg.payload += flow.get(\"buttons\"); \n    \n    if (grp==\"ana\"||grp==\"dat\"||grp==\"stat\"||grp==\"system\") { msg.delay=10000; }\n    else { msg.delay=55000; }\n    \n}\n\n\n\n\nelse {\n    \n    \n    //var readings = global.get(\"readings.local.\" + global.get(\"node\"));\n\n    msg.payload=\"<hr class='hr'>\";\n    \n    for (var k in readings[\"system\"]) {\n        \n        if (readings[\"system\"][k].title) {\n            msg.payload += \"<table width='100%'><tr><td><small>\" + readings[\"system\"][k].title + \"</td><td align='right'><b>\" + readings[\"system\"][k].value + \"</b></td></tr></table><hr class='hr'>\";\n        }\n    }\n    \n    \n    msg.payload += \"<table width='100%'><tr><td><small>Local IP Address</td><td align='right'><b>\" + readings[\"cpu\"][\"net_1_ip4\"].value + \"</b></td></tr></table><hr class='hr'>\";\n    \n    msg.payload += \"<table width='100%'><tr><td><small>Current State</td><td align='right'><b>\" + readings[\"stat\"][\"state\"].value + \"</b></td></tr></table><hr class='hr'>\";\n    \n    msg.payload += btns; //'<button onclick=\"myFunction(' + \"'ana/#'\" + ')\">Analogue</button>';\n    msg.payload += flow.get(\"buttons\"); \n        \n    \n}\n\nif (msg.delay>0) { \n \n    flow.set(\"repeat\",10000);  \n    flow.set(\"incP\",incP);  \n    flow.set(\"incT\",incT);  \n    \n} else {\n    flow.set(\"repeat\",\"\");  \n}\n\nmsg.payload = '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\\n' + msg.payload;\n\nreturn [msg,null];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "fdb411ee.2b1ae",
                "b79969e6.39f9d"
            ],
            [
                "5ce66945.bda39",
                "e25d1fb2.a6c7d"
            ],
            [
                "31dc491a.e5bb46"
            ]
        ]
    },
    {
        "id": "29507ab.16cdd06",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "30844a14.a4fee6"
        ],
        "x": 555,
        "y": 920,
        "wires": [
            [
                "7f66b6d8.e4b7d8"
            ]
        ]
    },
    {
        "id": "ea58f756.366fc",
        "type": "comment",
        "z": "cb3266cf.ceb2a",
        "name": "Output to Serial Port",
        "info": "",
        "x": 1090,
        "y": 940,
        "wires": []
    },
    {
        "id": "5652c39d.6f5d4c",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo rfkill unblock bluetooth",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1860,
        "y": 860,
        "wires": [
            [
                "49e73943.fd2168"
            ],
            [],
            []
        ]
    },
    {
        "id": "d4651b44.e7dd38",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1800,
        "y": 820,
        "wires": [
            [
                "5652c39d.6f5d4c"
            ]
        ]
    },
    {
        "id": "49e73943.fd2168",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "54e664a9.155e0c",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1660,
        "wires": [
            [
                "a8680785.16fa1"
            ]
        ]
    },
    {
        "id": "a8680785.16fa1",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "pidof rfcomm",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 1660,
        "wires": [
            [
                "473755e1.a7d06c"
            ],
            [],
            []
        ]
    },
    {
        "id": "e4a99f78.47a8e8",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1660,
        "wires": []
    },
    {
        "id": "473755e1.a7d06c",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "kill",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 560,
        "y": 1660,
        "wires": [
            [
                "e4a99f78.47a8e8"
            ],
            [],
            [
                "b0e1d8fd.5b9f3"
            ]
        ]
    },
    {
        "id": "265915ff.ee2922",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=0",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2d1f7336.efffbc",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "90",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1570,
        "y": 860,
        "wires": [
            [
                "5652c39d.6f5d4c"
            ]
        ]
    },
    {
        "id": "864a3d3.8c868c",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "timin",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "412e666c.7bb86"
            ]
        ]
    },
    {
        "id": "412e666c.7bb86",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "repeat",
        "func": "\nif ((flow.get(\"repeat\")||\"\")!==\"\") {\n    \n    var lastrun = flow.get(\"lastrun\")|| 0;\n    \n    if (lastrun==0) { \n        flow.set(\"lastrun\",msg.timin);\n        return null;\n    }\n    \n    if ((msg.timin - lastrun) > parseInt(flow.get(\"repeat\"))) {\n        \n        flow.set(\"lastrun\",msg.timin);\n        \n        msg.payload = flow.get(\"incP\");  \n        \n        if (msg.payload.indexOf(\":Authenticate\")>0) { return null; }\n        msg.topic = flow.get(\"incT\");  \n        return msg;\n    }\n    \n    \n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "4dfdc755.fa0058",
                "50fd5790.ed22a"
            ]
        ]
    },
    {
        "id": "4dfdc755.fa0058",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "44dd6b38.b7cc7c",
        "type": "template",
        "z": "cb3266cf.ceb2a",
        "name": "Buttons",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "\n<link rel=\"stylesheet\" href=\"editor.css\">\n\n<style>\n    \n    \n.button {\n\tpadding: 4px 8px;\n\tmargin: 3px 3px;\n\tdisplay: inline;\n\ttext-decoration: none;\n\tcolor: #fff;\n\tbackground: #FF0000;\n\tborder: none;\n\tcursor: pointer;\n\tborder-radius: 4px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n}\n    \n</style>\n\n\n<p id=\"demo\"></p>\n\n<script>\nfunction myFunction(str) {\n  document.getElementById(\"demo\").innerHTML = \"ok\";\n  \n  window.AppInventor.setWebViewString(str);\n  \n}\n</script>",
        "output": "str",
        "x": 1500,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d3d31d4c.d59fc",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "<heatweb>",
        "func": "msg.payload = \"<heatweb>\"+ msg.payload +\"</heatweb>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "be3028c8.7705a8"
            ]
        ]
    },
    {
        "id": "5ce66945.bda39",
        "type": "split",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "2e64263d.16f84a",
                "b10035dd.9be9c"
            ]
        ]
    },
    {
        "id": "2e64263d.16f84a",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 200,
        "wires": []
    },
    {
        "id": "b10035dd.9be9c",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "b172c8c3.95bbb8"
        ],
        "x": 1155,
        "y": 140,
        "wires": []
    },
    {
        "id": "e8496276.1d6328",
        "type": "comment",
        "z": "cb3266cf.ceb2a",
        "name": "Handler",
        "info": "",
        "x": 1250,
        "y": 140,
        "wires": []
    },
    {
        "id": "d8e922a.bbde9e",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fdb411ee.2b1ae",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "51c88b2.956b274",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "heatweb>",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "<heatweb",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1050,
        "y": 660,
        "wires": [
            [],
            [],
            [
                "5aab3443.d2e0bc",
                "11ab92ef.7bf31d",
                "8578febd.ec67b"
            ]
        ]
    },
    {
        "id": "11ab92ef.7bf31d",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 620,
        "wires": []
    },
    {
        "id": "b79969e6.39f9d",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 940,
        "y": 80,
        "wires": [
            [
                "84542de.7fb905"
            ]
        ]
    },
    {
        "id": "1cbaca4a.27a28e",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "47461eb4.bbecc8"
            ]
        ]
    },
    {
        "id": "6ce2c24e.e086ac",
        "type": "json",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "9bb74df6.b6e48"
            ]
        ]
    },
    {
        "id": "47461eb4.bbecc8",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "readings",
        "func": "var net = global.get(\"networkId\");\nvar netloc = global.get(\"localNetworkId\");\n    \n\nmsg.payload={\"readings\":{}};\nmsg.payload.readings[net] = global.get(\"readings.\"+netloc);\n\nflow.set(\"conecttime\",new Date().getTime() - 15000);  // pause mqtt stream\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 1340,
        "wires": [
            [
                "6ce2c24e.e086ac"
            ]
        ]
    },
    {
        "id": "2223b646.cb92fa",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo hciconfig hci0 piscan",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1100,
        "y": 300,
        "wires": [
            [
                "429b05c7.6dabc4"
            ],
            [],
            []
        ]
    },
    {
        "id": "429b05c7.6dabc4",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 300,
        "wires": []
    },
    {
        "id": "7c44b076.869f",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "2223b646.cb92fa"
            ]
        ]
    },
    {
        "id": "5f614321.79168c",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "1493d3ef.6fa4e4"
            ]
        ]
    },
    {
        "id": "29acb962.85c74e",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "hcitool scan",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "38a89f96.687cf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "38a89f96.687cf8",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 380,
        "wires": []
    },
    {
        "id": "ffdefbe2.26243",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "29acb962.85c74e"
            ]
        ]
    },
    {
        "id": "fddaf6ab.8662",
        "type": "template",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n    <script>\n      let url = \"{{{payload}}}\";\n      window.location.href = url;\n    </script>",
        "output": "str",
        "x": 580,
        "y": 1520,
        "wires": [
            [
                "120c59a1.6bcdd6"
            ]
        ]
    },
    {
        "id": "120c59a1.6bcdd6",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "c3670a6f.38c7d",
            "52ce1bce.f094ac"
        ],
        "x": 695,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5b3f4ea2.ae6b5",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "lsusb",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1030,
        "y": 460,
        "wires": [
            [
                "7b6c3ffe.c51f"
            ],
            [],
            []
        ]
    },
    {
        "id": "7b6c3ffe.c51f",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 460,
        "wires": []
    },
    {
        "id": "cf0fe6e5.4e68e8",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 460,
        "wires": [
            [
                "5b3f4ea2.ae6b5"
            ]
        ]
    },
    {
        "id": "520c01c5.89b838",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1520,
        "wires": [
            [
                "f5d67734.a2b6"
            ]
        ]
    },
    {
        "id": "f5d67734.a2b6",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "heatweb link",
        "func": "\n    \n    flow.set(\"repeat\",\"\");  // stop current feeds\n    msg.payload = \"https://heatweb.co.uk\";\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 1520,
        "wires": [
            [
                "fddaf6ab.8662"
            ]
        ]
    },
    {
        "id": "be3028c8.7705a8",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "connected=3 ?",
        "property": "connected",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 1220,
        "y": 1060,
        "wires": [
            [
                "d8e922a.bbde9e",
                "ce8994cb.580f6"
            ]
        ]
    },
    {
        "id": "a9e5c82c.cf12b",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "4b86eab9.b898e4",
            "4c669252.b819dc",
            "2d24025.c774efe",
            "ccf5bf24.ed3048",
            "993bdecd.032078"
        ],
        "x": 955,
        "y": 1060,
        "wires": [
            [
                "be3028c8.7705a8"
            ]
        ]
    },
    {
        "id": "4c669252.b819dc",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "a9e5c82c.cf12b"
        ],
        "x": 875,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ae09edb9.dd02a",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "chkngrok",
        "links": [
            "1ebcd37c.8f61fd",
            "f0582338.0aaab8",
            "31dc491a.e5bb46"
        ],
        "x": 95,
        "y": 1380,
        "wires": [
            [
                "354f3d26.97af62"
            ]
        ]
    },
    {
        "id": "9068049.8c5e978",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "func": "flow.set(\"lastrun\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e25d1fb2.a6c7d",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 940,
        "y": 180,
        "wires": [
            [
                "9068049.8c5e978"
            ]
        ]
    },
    {
        "id": "fbed7ee4.d7e658",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "btin",
        "links": [
            "6e6115bd.173444",
            "adae7e8a.85a74"
        ],
        "x": 195,
        "y": 1040,
        "wires": [
            [
                "c2490ab1.3a8ae"
            ]
        ]
    },
    {
        "id": "51f26193.fcb9e",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "SEND",
        "func": "\nvar sd = flow.get(\"sendData\");\nflow.set(\"sendData\",{});\nflow.set(\"sendJSON\",{});\nfor (var topic in sd) {\n    \n    var tops = topic.split(\"/\");\n    if (!tops[4]) { continue; }\n    \n    var net = tops[0];\n    \n    if (net == global.get(\"networkId\")) { net = global.get(\"localNetworkId\"); }\n    \n    var read = global.get(\"readings.\"+net+\".\"+tops[2]+\".\"+tops[3]+\".\"+tops[4]) || {};\n    \n    //flow.set(\"sendJSON.readings.\"+tops[0]+\".\"+tops[2]+\".\"+tops[3]+\".\"+tops[4], read);\n    \n    if (net == global.get(\"localNetworkId\")) { net = global.get(\"networkId\"); }\n    \n    flow.set(\"sendJSON.readings.\"+net+\".\"+tops[2]+\".\"+tops[3]+\".\"+tops[4], read);\n    \n}\n\nmsg.payload = flow.get(\"sendJSON\") || {};\nif (msg.payload =={}) { return null; }\n\nmsg.payload = JSON.stringify(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 1180,
        "wires": [
            [
                "ccf5bf24.ed3048"
            ]
        ]
    },
    {
        "id": "c2490ab1.3a8ae",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "SAVE for sending is connected over 30s",
        "func": "\nif (flow.get(\"connected\")!==\"3\") { return null; }\n\nvar timin = new Date().getTime();\n\n\n\n\n\nflow.set(\"sendData.\" + msg.topic,msg.payload);\n\nif (timin - (flow.get(\"conecttime\")||timin) < 30000) { return null; }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "2b735871.dc808"
            ]
        ]
    },
    {
        "id": "23c03e8c.0b74f2",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "ece31af6.a734e"
            ]
        ]
    },
    {
        "id": "ccf5bf24.ed3048",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "a9e5c82c.cf12b"
        ],
        "x": 855,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ece31af6.a734e",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 1180,
        "wires": [
            [
                "51f26193.fcb9e"
            ]
        ]
    },
    {
        "id": "93994666.56b1b8",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 620,
        "wires": [
            [
                "265915ff.ee2922"
            ]
        ]
    },
    {
        "id": "354f3d26.97af62",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "d0277b0b.b465b8"
            ]
        ]
    },
    {
        "id": "d0277b0b.b465b8",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 270,
        "y": 1420,
        "wires": [
            [
                "47461eb4.bbecc8"
            ]
        ]
    },
    {
        "id": "2b735871.dc808",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/settings/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/system/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/xpVSet",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 310,
        "y": 1100,
        "wires": [
            [
                "ece31af6.a734e"
            ],
            [
                "ece31af6.a734e"
            ],
            [
                "ece31af6.a734e"
            ],
            [
                "23c03e8c.0b74f2"
            ]
        ]
    },
    {
        "id": "df45cc5d.ae295",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1750,
        "y": 60,
        "wires": [
            [
                "2c0c77c8.965748"
            ]
        ]
    },
    {
        "id": "bcc30118.d23c8",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chartjs",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2c0c77c8.965748",
        "type": "template",
        "z": "cb3266cf.ceb2a",
        "name": "Chart",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "\nGraph:\n\n<script src=\"Chart.min.js\"></script>\n<script src=\"utils.js\"></script>\n<!--<script src=\"file:///appinventor_asset/utils.js\"></script>-->\n\n<style>\n    canvas {\n        -moz-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n    }\n</style>\n\n\n<!-- <section style=\"height: 100vh; background: #cbced8\"> -->\n\n<!-- <p>This page recieves real-time tap use data, showing flow rates in each property as well as delivery temperatures.  -->\n\n<div id=\"canvas-holder\" style=\"width:90%;\">\n    <canvas id=\"chart-area\"></canvas>\n</div>\n<!-- <button id=\"randomizeData\">Randomize Data</button>\n<button id=\"addData\">Add Data</button>\n<button id=\"removeData\">Remove Data</button> -->\n<script>\n    var randomScalingFactor = function() {\n        return Math.round(Math.random() * 100);\n    };\n\n    const config = {\n      type: 'line',\n      data: data,\n    };\n    \n    const labels = Utils.months({count: 7});\n    const data = {\n      labels: labels,\n      datasets: [{\n        label: 'My First Dataset',\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    };\n    \n   var ctx = document.getElementById('chart-area');\n   window.myPolarArea = new Chart(ctx, config);\n    \n</script>\n\n<!--<div id=\"mqlist\">-->\n<!-- Waiting for data... -->\n<!--</div>-->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 1730,
        "y": 100,
        "wires": [
            [
                "bcc30118.d23c8"
            ]
        ]
    },
    {
        "id": "f9a7af10.7dff08",
        "type": "template",
        "z": "cb3266cf.ceb2a",
        "name": "Chart",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js\" type=\"text/javascript\"></script>\n\n<script>\nvar readings = {};\n</script>\n\n<style>\n\n.tt {\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n.tt td, #customers th {\n  border: 1px solid #ddd;\n  padding: 5px 25px 5px 5px;\n}\n\n.tt tr:nth-child(even){background-color: #f2f2f2;}\n\n.tt tr:hover {background-color: #ddd;}\n\n.tt th {\n  padding: 5px;\n  text-align: left;\n  background-color: #303c43;;\n  color: white;\n}\n</style>\n\n\n</head>\n<body>\n<script type=\"text/javascript\">\n\nvar a = new Date();\n \t\t\n// Create a client instance\n//client = new Paho.MQTT.Client(\"hw3.ddns.net\", Number(8083), \"cl\"+a.getTime());\nclient = new Paho.MQTT.Client(\"broker.hivemq.com\", Number(8000), \"cl\"+a.getTime());\n\n// set callback handlers\nclient.onConnectionLost = onConnectionLost;\nclient.onMessageArrived = onMessageArrived;\n\n///client.username_pw_set(username=\"oop7zooR\",password=\"oop7zooRoop7zooR\")\n// now can connect\n\n// connect the client\n///client.connect({onSuccess:onConnect, useSSL:true});\n\n// Connect the client, with a Username and Password\n//client.connect({onSuccess:onConnect, userName:'oop7zooR', password:'oop7zooRoop7zooR', useSSL:true});\nclient.connect({onSuccess:onConnect, useSSL:false});\n\n// called when the client connects\nfunction onConnect() {\n  // Once a connection has been made, make a subscription and send a message.\n  console.log(\"onConnect\");\n  client.subscribe(\"hw/diversitydemo/+/+/fC\"); // hw/diversitydemo/+/+/fC    //  ihiu/oop7zooR/#\n  message = new Paho.MQTT.Message(\"1\");\n  message.destinationName = \"hw/diversitydemo/start\";   //  ihiu/oop7zooR/oop7zooR/test/test\n  client.send(message);\n}\n\n// called when the client loses its connection\nfunction onConnectionLost(responseObject) {\n  if (responseObject.errorCode !== 0) {\n    console.log(\"onConnectionLost:\"+responseObject.errorMessage);\n}\n}\n\n// called when a message arrives\nfunction onMessageArrived(message) {\n  console.log(\"onMessageArrived:\"+message.payloadString);\n  \n  //document.getElementById(\"mqlist\").innerHTML = mql + message.destinationName + \": \" + message.payloadString + \"<br>\";\n\n  \n  if(!readings[message.destinationName]) {  // if new system add to plot\n\n\n    if (config.data.datasets.length > 0) {\n            config.data.labels.push('HIU' + (config.data.labels.length + 1));\n            config.data.datasets.forEach(function(dataset) {\n                var colorName = colorNames[config.data.labels.length % colorNames.length];\n                dataset.backgroundColor.push(window.chartColors[colorName]);\n                dataset.data.push(parseFloat(message.payloadString));\n            });\n            window.myPolarArea.update();\n        }\n\n        readings[message.destinationName] = { \"topic\":message.destinationName, \"payload\":message.payloadString, \"id\": config.data.labels.length - 1};\n        \n  } else {\n\n        readings[message.destinationName].payload = message.payloadString ;\n  \n\n  }\n\n  readings[message.destinationName].payload = parseFloat(readings[message.destinationName].payload);\n  if (readings[message.destinationName].payload < 0.1) { readings[message.destinationName].payload = 0;}\n  //config.data.datasets[i].data[j] = randomScalingFactor();\n\n  config.data.datasets[0].data[readings[message.destinationName][\"id\"]] = parseFloat(readings[message.destinationName][\"payload\"]);\n  //config.data.labels[readings[message.destinationName][\"id\"]] = \"HIU\" +readings[message.destinationName][\"id\"] + \": \" + parseFloat(readings[message.destinationName][\"payload\"]);\n  window.myPolarArea.update();\n\n\n  \n//   var sortable = [];\n// \tfor (var mqt in readings) {\n// \t\tsortable.push([mqt]);\n// \t}\n\n// \tsortable.sort(function(a, b) {\n// \t\treturn a[0] > b[0];\n// \t});\n  \n  \n  \n// \tvar mql = '<table class=\"tt\"><tr><th align=\"left\">Topic</th><th>Data</th></tr>';\n\t\n// \tfor (var kk in sortable) {\n// \t\tvar k = sortable[kk][0];\n// \t\tmql += \"<tr><td>\" + k.replace(/\\//g,\" / \") + \"</td><td>\" + readings[k].payload + \"</td></tr>\";\n// \t}\n// \tmql += \"</table>\";\n\t\n\t\n// \tdocument.getElementById(\"mqlist\").innerHTML = mql;\n  \n}\n\n\n\n\n</script>\n\n\n\n<script src=\"/includes/chart.js/Chart.min.js\"></script>\n<script src=\"/includes/chart.js/utils.js\"></script>\n\n<style>\n    canvas {\n        -moz-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n    }\n</style>\n\n\n<!-- <section style=\"height: 100vh; background: #cbced8\"> -->\n\n<!-- <p>This page recieves real-time tap use data, showing flow rates in each property as well as delivery temperatures.  -->\n\n<div id=\"canvas-holder\" style=\"width:80%;\">\n    <canvas id=\"chart-area\"></canvas>\n</div>\n<!-- <button id=\"randomizeData\">Randomize Data</button>\n<button id=\"addData\">Add Data</button>\n<button id=\"removeData\">Remove Data</button> -->\n<script>\n    var randomScalingFactor = function() {\n        return Math.round(Math.random() * 100);\n    };\n\n    var chartColors = window.chartColors;\n    var color = Chart.helpers.color;\n\n    //new Chart(document.getElementById(\"chart-area\"), \n    \n     \n    var config= {\n        type: 'bar',\n        data: {\n          labels: [],\n          datasets: [\n            {\n              label: \"\",\n              backgroundColor: [],\n              data: []\n            }\n          ]\n        },\n        options: {\n          legend: { display: false },\n          title: {\n            display: false,\n            text: ''\n          }\n        }\n    }\n    //);\n\n    var colorNames = Object.keys(window.chartColors);\n    \n   window.onload = function() {\n        var ctx = document.getElementById('chart-area');\n        window.myPolarArea = new Chart(ctx, config);\n    };\n</script>\n\n<!--<div id=\"mqlist\">-->\n<!-- Waiting for data... -->\n<!--</div>-->\n\n</body>\n\n</html>",
        "output": "str",
        "x": 1950,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f17d50af.eabce8",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1220,
        "y": 1200,
        "wires": [
            [
                "ce8994cb.580f6"
            ]
        ]
    },
    {
        "id": "6fbc1d45.a379e4",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "ls /dev/rfcomm*",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1580,
        "y": 1200,
        "wires": [
            [
                "3ad1278e.1d43f",
                "36498f40.14529"
            ],
            [],
            []
        ]
    },
    {
        "id": "46f16e2f.84d9c",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3ad1278e.1d43f",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "rfcomm0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1750,
        "y": 1200,
        "wires": [
            [
                "dba354ef.0b8ce8"
            ]
        ]
    },
    {
        "id": "ce8994cb.580f6",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tosend",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 1200,
        "wires": [
            [
                "6fbc1d45.a379e4"
            ]
        ]
    },
    {
        "id": "dba354ef.0b8ce8",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tosend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1200,
        "wires": [
            [
                "46f16e2f.84d9c",
                "ec8563.de6bdaa"
            ]
        ]
    },
    {
        "id": "7372bfb0.521728",
        "type": "comment",
        "z": "cb3266cf.ceb2a",
        "name": "Experimental - onlt send if port exists to prevent locking",
        "info": "",
        "x": 1560,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c8d2484.9ea44b8",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1740,
        "wires": [
            [
                "b0e1d8fd.5b9f3"
            ]
        ]
    },
    {
        "id": "b0e1d8fd.5b9f3",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo rm /dev/rfcomm0",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 1740,
        "wires": [
            [],
            [],
            [
                "88cdb8.72e84248"
            ]
        ]
    },
    {
        "id": "88cdb8.72e84248",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=0",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "repeat",
                "pt": "flow",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1820,
        "wires": [
            [
                "5ac521d4.3816f"
            ]
        ]
    },
    {
        "id": "d0fd7c6a.83eb48",
        "type": "link in",
        "z": "cb3266cf.ceb2a",
        "name": "startbt",
        "links": [
            "c05d5830.ea922",
            "5665ac17.be145c"
        ],
        "x": 155,
        "y": 280,
        "wires": [
            [
                "933ad751.a89f8"
            ]
        ]
    },
    {
        "id": "5665ac17.be145c",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "d0fd7c6a.83eb48"
        ],
        "x": 355,
        "y": 2020,
        "wires": []
    },
    {
        "id": "5ac521d4.3816f",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "sudo rfkill unblock bluetooth",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 1900,
        "wires": [
            [],
            [],
            [
                "ab1779c7.7c6c8"
            ]
        ]
    },
    {
        "id": "ab1779c7.7c6c8",
        "type": "delay",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 400,
        "y": 1960,
        "wires": [
            [
                "5665ac17.be145c"
            ]
        ]
    },
    {
        "id": "36498f40.14529",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 1260,
        "wires": []
    },
    {
        "id": "31dc491a.e5bb46",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "ae09edb9.dd02a"
        ],
        "x": 815,
        "y": 200,
        "wires": []
    },
    {
        "id": "5e534e26.5f3c2",
        "type": "status",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "scope": [
            "45473e03.df3498"
        ],
        "x": 790,
        "y": 820,
        "wires": [
            [
                "33c1a290.9e961e"
            ]
        ]
    },
    {
        "id": "bf116262.979b48",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "status",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 820,
        "wires": []
    },
    {
        "id": "33c1a290.9e961e",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rfstatus",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 820,
        "wires": [
            [
                "bf116262.979b48"
            ]
        ]
    },
    {
        "id": "a7ecee69.045eb",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "rfstatus.text",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "pid",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 840,
        "wires": [
            [],
            [
                "bc818077.51ea1"
            ]
        ]
    },
    {
        "id": "bc818077.51ea1",
        "type": "change",
        "z": "cb3266cf.ceb2a",
        "name": "connected=0",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "repeat",
                "pt": "flow",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 840,
        "wires": [
            [
                "cd254164.8a57d"
            ]
        ]
    },
    {
        "id": "e579f71f.2267d",
        "type": "mqtt in",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "topic": "+/+/+/url/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ad2997b.42a908",
        "inputs": 0,
        "x": 200,
        "y": 960,
        "wires": [
            [
                "c2490ab1.3a8ae"
            ]
        ]
    },
    {
        "id": "ddd90b6d.e6ec2",
        "type": "mqtt in",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "topic": "+/+/+/cmd/uploadFlows",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ad2997b.42a908",
        "inputs": 0,
        "x": 1080,
        "y": 1340,
        "wires": [
            [
                "2647d203.193996"
            ]
        ]
    },
    {
        "id": "2647d203.193996",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1310,
        "y": 1340,
        "wires": [
            [
                "42a589ae.f7b8b"
            ]
        ]
    },
    {
        "id": "48cb9bd.5b14564",
        "type": "exec",
        "z": "cb3266cf.ceb2a",
        "command": "cat",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1210,
        "y": 1440,
        "wires": [
            [
                "18d953b8.70e02c"
            ],
            [],
            []
        ]
    },
    {
        "id": "dd3a9c4b.da01f8",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 1500,
        "wires": [
            [
                "42a589ae.f7b8b"
            ]
        ]
    },
    {
        "id": "b6b964ee.a118b",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 1500,
        "wires": []
    },
    {
        "id": "42a589ae.f7b8b",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "func": "\nmsg.payload = \"/var/lib/node-red/.node-red/flows_\"+global.get(\"node\")+\".json\";\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 1440,
        "wires": [
            [
                "48cb9bd.5b14564",
                "235f0957.0a4dae"
            ]
        ]
    },
    {
        "id": "235f0957.0a4dae",
        "type": "debug",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1500,
        "wires": []
    },
    {
        "id": "18d953b8.70e02c",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": ".{",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1350,
        "y": 1440,
        "wires": [
            [
                "b6b964ee.a118b",
                "d29b08d4.8cd3d"
            ]
        ]
    },
    {
        "id": "993bdecd.032078",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "a9e5c82c.cf12b"
        ],
        "x": 1775,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d29b08d4.8cd3d",
        "type": "function",
        "z": "cb3266cf.ceb2a",
        "name": "<flow>",
        "func": "flow.set(\"conecttime\",new Date().getTime() - 25000);  // pause mqtt stream\n\nmsg.payload = \"<flow>\"+ msg.payload +\"</flow>\"\nmsg.payload = \"<heatweb>\"+ msg.payload +\"</heatweb>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1510,
        "y": 1440,
        "wires": [
            [
                "a2e115d5.d72668"
            ]
        ]
    },
    {
        "id": "a2e115d5.d72668",
        "type": "delay",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1660,
        "y": 1440,
        "wires": [
            [
                "993bdecd.032078"
            ]
        ]
    },
    {
        "id": "9bb74df6.b6e48",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 1340,
        "wires": [
            [
                "4c669252.b819dc"
            ]
        ]
    },
    {
        "id": "4549fe80.a822e",
        "type": "inject",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/request",
        "payload": "#",
        "payloadType": "str",
        "x": 290,
        "y": 1260,
        "wires": [
            [
                "a5aaf6e6.3db5c"
            ]
        ]
    },
    {
        "id": "a5aaf6e6.3db5c",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "b172c8c3.95bbb8"
        ],
        "x": 455,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9f13027f.9f8808",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "rfstatus.text",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "pid",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 760,
        "wires": [
            [],
            [
                "cd254164.8a57d"
            ]
        ]
    },
    {
        "id": "4719ec99.fd797c",
        "type": "trigger",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 740,
        "wires": [
            [
                "59928121.15ae7"
            ]
        ]
    },
    {
        "id": "4ff1b6b2.3d3e08",
        "type": "daemon",
        "z": "cb3266cf.ceb2a",
        "name": "rfcomm listen",
        "command": "sudo",
        "args": "rfcomm watch /dev/rfcomm0 22",
        "autorun": false,
        "cr": false,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 330,
        "y": 640,
        "wires": [
            [
                "ad5f7bdd.d340a"
            ],
            [],
            [
                "265915ff.ee2922"
            ]
        ]
    },
    {
        "id": "8578febd.ec67b",
        "type": "switch",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": ":home",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 780,
        "wires": [
            [
                "458b947d.ded5bc"
            ]
        ]
    },
    {
        "id": "30844a14.a4fee6",
        "type": "link out",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "links": [
            "29507ab.16cdd06"
        ],
        "x": 1635,
        "y": 780,
        "wires": []
    },
    {
        "id": "458b947d.ded5bc",
        "type": "delay",
        "z": "cb3266cf.ceb2a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1520,
        "y": 780,
        "wires": [
            [
                "30844a14.a4fee6"
            ]
        ]
    },
    {
        "id": "e7fb0e95.0efeb",
        "type": "ui_template",
        "z": "31a18cc4.31ff54",
        "group": "b389df50.19473",
        "name": "Vid_screen",
        "order": 28,
        "width": "10",
        "height": "6",
        "format": "<div style=\"overflow:hidden\">\n     <video id=\"video\" width=\"100%\" heigth=\"100%\"></video>\n</div>\n\n<script> \n    (function(scope) {\n        // Watch for messages being send to this template node\n        scope.$watch('msg', function (msg) {      \n            if (msg) {\n\n                var video = document.getElementById('video');\n                video.src = msg.payload;\n                video.play();\n            }       \n         }); \n    })(scope); \n</script>\n\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7cfabbcb.703634",
        "type": "ui_button",
        "z": "31a18cc4.31ff54",
        "name": "",
        "group": "94ca1edb.cfcae",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "https://storage.googleapis.com/coverr-main/mp4/The-Slow-Dock.mp4",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "e7fb0e95.0efeb"
            ]
        ]
    },
    {
        "id": "903b1ad6.d3b1e8",
        "type": "ui_button",
        "z": "31a18cc4.31ff54",
        "name": "",
        "group": "94ca1edb.cfcae",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "https://storage.googleapis.com/coverr-main/mp4/Night-Traffic.mp4",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "e7fb0e95.0efeb"
            ]
        ]
    },
    {
        "id": "d815f77b.54d1e8",
        "type": "tcp in",
        "z": "c1c0e71a.90aae",
        "name": "",
        "server": "client",
        "host": "localhost",
        "port": "2000",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "\\n",
        "topic": "",
        "base64": false,
        "x": 290,
        "y": 1020,
        "wires": [
            [
                "19d3b036.e8f208"
            ]
        ]
    },
    {
        "id": "f983ff67.0a0ba",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 940,
        "wires": []
    },
    {
        "id": "19d3b036.e8f208",
        "type": "json",
        "z": "c1c0e71a.90aae",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "f983ff67.0a0ba",
                "86f8428.e233ac"
            ]
        ]
    },
    {
        "id": "6a42bd96.7a6c3c",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "neighboutListRequest",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"objectType\":\"neighboutListRequest\"}",
        "payloadType": "json",
        "x": 260,
        "y": 760,
        "wires": [
            [
                "9445e61b.ef4fa8"
            ]
        ]
    },
    {
        "id": "9445e61b.ef4fa8",
        "type": "json",
        "z": "c1c0e71a.90aae",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 570,
        "y": 800,
        "wires": [
            [
                "c210b1b4.e38bb",
                "a78ca723.e6da78"
            ]
        ]
    },
    {
        "id": "c210b1b4.e38bb",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 740,
        "wires": []
    },
    {
        "id": "a78ca723.e6da78",
        "type": "tcp request",
        "z": "c1c0e71a.90aae",
        "name": "",
        "server": "localhost",
        "port": "2001",
        "out": "char",
        "splitc": "\\n",
        "x": 770,
        "y": 800,
        "wires": [
            [
                "7794d4a8.c5f39c",
                "a09ed8cf.9c60d"
            ]
        ]
    },
    {
        "id": "7794d4a8.c5f39c",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 740,
        "wires": []
    },
    {
        "id": "a09ed8cf.9c60d",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "",
        "func": "msg.payload = msg.payload.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 800,
        "wires": [
            [
                "843ad1b5.9ec458"
            ]
        ]
    },
    {
        "id": "eeddd83d.9b6748",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 800,
        "wires": []
    },
    {
        "id": "3c2f6c6c.cab96c",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "nodeInfoRequest",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "{\"objectType\":\"nodeInfoRequest\"}",
        "payloadType": "json",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "9445e61b.ef4fa8"
            ]
        ]
    },
    {
        "id": "796a432.d23963c",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "networkCommand",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"objectType\":\"networkCommand\",\"nodeId\":16,\"cmd\":0,\"payload\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}",
        "payloadType": "json",
        "x": 270,
        "y": 800,
        "wires": [
            [
                "9445e61b.ef4fa8"
            ]
        ]
    },
    {
        "id": "8404ea51.ca2608",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "sendPayload",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"objectType\":\"sendPayload\",\"payloadType\":\"acknowledged\",\"nodeId\":16,\"port\":0,\"payload\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}",
        "payloadType": "json",
        "x": 290,
        "y": 840,
        "wires": [
            [
                "9445e61b.ef4fa8"
            ]
        ]
    },
    {
        "id": "f784dbaf.3def38",
        "type": "change",
        "z": "c1c0e71a.90aae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.nodeId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "system/meshNodeId",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Mesh Node Id",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 960,
        "wires": [
            [
                "dca8e026.029a48"
            ]
        ]
    },
    {
        "id": "86f8428.e233ac",
        "type": "switch",
        "z": "c1c0e71a.90aae",
        "name": "",
        "property": "payload.objectType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nodeInfoReply",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "receivedPayload",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 1020,
        "wires": [
            [
                "f784dbaf.3def38",
                "791575f2.45935c"
            ],
            [
                "64097a15.3f7b14"
            ]
        ]
    },
    {
        "id": "791575f2.45935c",
        "type": "change",
        "z": "c1c0e71a.90aae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.nodeType",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "system/meshNodeType",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Mesh Node Type",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 1000,
        "wires": [
            [
                "dca8e026.029a48"
            ]
        ]
    },
    {
        "id": "dca8e026.029a48",
        "type": "link out",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "22b79bdf.56f684"
        ],
        "x": 1085,
        "y": 980,
        "wires": []
    },
    {
        "id": "843ad1b5.9ec458",
        "type": "json",
        "z": "c1c0e71a.90aae",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1110,
        "y": 800,
        "wires": [
            [
                "eeddd83d.9b6748"
            ]
        ]
    },
    {
        "id": "f8dd942d.a64d48",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "plain text 0",
        "func": "//var buff = Buffer.from(msg.payload);\n\nvar buff=[];\n\nfor (i = 0; i < msg.payload.length; i++) { \n    buff.push(msg.payload.charCodeAt(i));\n}\n\n\nvar cmd ={\n    \"objectType\": \"sendPayload\",\n    \"payloadType\": \"acknowledged\",\n    \"nodeId\": msg.targetNode || 16,\n    \"port\": msg.port|| 0, \n    \"payload\": buff\n}\n\n\nmsg.payload = cmd;\n//msg.payload.payload = buff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 560,
        "wires": [
            [
                "d3b21334.f320f8"
            ]
        ]
    },
    {
        "id": "9db4ac04.f9c28",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Does it work?",
        "payloadType": "str",
        "x": 290,
        "y": 420,
        "wires": [
            [
                "8008c307.479458"
            ]
        ]
    },
    {
        "id": "5531f501.55d8a4",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "plain text",
        "func": "\nvar stdata = \"\";\n\nfor (var c in msg.payload.payload) {\n\n    \n    stdata +=String.fromCharCode(msg.payload.payload[c]); \n    //\n}\n\nmsg.payload = msg.nodeId + \"/\" + stdata;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 1080,
        "wires": [
            [
                "46ffbe35.1da9a"
            ]
        ]
    },
    {
        "id": "46ffbe35.1da9a",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "aba976e9.c5f518",
        "type": "switch",
        "z": "c1c0e71a.90aae",
        "name": "",
        "property": "payload.port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 780,
        "y": 1100,
        "wires": [
            [
                "5531f501.55d8a4"
            ],
            [
                "759c67ed.bdf32"
            ],
            [
                "d86a18c.035ab68"
            ],
            []
        ]
    },
    {
        "id": "ca7584d2.bc2d1",
        "type": "link in",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "b1974c10.ad4e68",
            "44c8809a.69ba3"
        ],
        "x": 175,
        "y": 560,
        "wires": [
            [
                "f8dd942d.a64d48"
            ]
        ]
    },
    {
        "id": "b1974c10.ad4e68",
        "type": "link out",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "ca7584d2.bc2d1"
        ],
        "x": 595,
        "y": 420,
        "wires": []
    },
    {
        "id": "d3b21334.f320f8",
        "type": "delay",
        "z": "c1c0e71a.90aae",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 510,
        "y": 600,
        "wires": [
            [
                "9445e61b.ef4fa8",
                "f589504f.9573b"
            ]
        ]
    },
    {
        "id": "64097a15.3f7b14",
        "type": "change",
        "z": "c1c0e71a.90aae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nodeId",
                "pt": "msg",
                "to": "payload.nodeId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1100,
        "wires": [
            [
                "aba976e9.c5f518"
            ]
        ]
    },
    {
        "id": "9163f13c.0f317",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "phex1/dat/tH",
        "payload": "34.55",
        "payloadType": "num",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "c7d33c2d.fb1f"
            ]
        ]
    },
    {
        "id": "450f3141.bdbcf8",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "slice payload",
        "func": "// bit 0: list/device type id\n// bits 1+2: topic id\n// bit 3: part number\n// bit 4: number of parts\n\nvar msg2=null;\nvar topics = msg.topic.split(\"/\");\n\nif (topics.length==1) { msg.topic =  \"dat/\" + msg.topic;  }\nif (topics.length==2) { msg.topic = global.get(\"node\") + \"/\" + msg.topic;  }\ntopics = msg.topic.split(\"/\");\n\nif (topics.length<3) { return null; }\n\nvar val = \"\"+msg.payload;\n\nvar myobj = topics[topics.length-3] + \".\" +  topics[topics.length-2] + \".\" +  topics[topics.length-1];\nvar mytopic = topics[topics.length-3] + \"/\" +  topics[topics.length-2] + \"/\" +  topics[topics.length-1];\n\n\nvar mydetails = {};\nvar topicId = 0;\n\n\n\nif (!global.get(\"mesh.topics.\"+myobj)) {\n    \n    if (msg.topic == global.get(\"node\") + \"/system/networkId\") { topicId = 1; }\n    else if (msg.topic == global.get(\"node\") + \"/system/nodeId\") {  topicId = 2;}\n    \n    else { // non-standard topics\n    \n    \n        topicId = (global.get(\"mesh.topicCount\")||100) +1;\n        global.set(\"mesh.topicCount\",topicId);\n    }    \n        \n    global.set(\"mesh.topics.\"+myobj,{\"topic\":mytopic,\"id\": topicId, \"value\":val});\n    \n    msg2={};\n    msg2.topic = \"\" + msg.topic;\n    msg2.payload = \"\" + msg.payload;\n    msg2.targetNode = msg.targetNode;\n            \n}\n    \n    \nmydetails = global.get(\"mesh.topics.\"+myobj) || {};\n\n\n\n\nmsgs = [];\n\nmsg.topic = mydetails[\"id\"] ;\n\n// topic index is represented by first 2 characters\nvar c1 = Math.floor(mydetails[\"id\"]/255)\nvar c2 = mydetails[\"id\"]%255;\n\nvar partCount = Math.ceil((\"\"+msg.payload).length/15);\n\nfor (i = 0; i < partCount; i++) { \n    \n   var pload = String.fromCharCode(0) + String.fromCharCode(c1) + String.fromCharCode(c2)  + String.fromCharCode(i+1) + String.fromCharCode(partCount) + val.substr((i*15),15);\n\n    msgs.push(pload) ;\n}\n\n// if (partCount==1) {\n\n//     msg.payload = String.fromCharCode(c1) + String.fromCharCode(c2)  + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + msg.payload;\n\n// }\n\nmsg.payload = msgs;\n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "d88e3cca.755948",
                "85423b74.514178"
            ],
            [
                "85eb65ad.908a1"
            ]
        ]
    },
    {
        "id": "141e6890.afd26f",
        "type": "link out",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "8a034bf9.606bd"
        ],
        "x": 1275,
        "y": 340,
        "wires": []
    },
    {
        "id": "f83546f8.bcd51",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "indexed 1",
        "func": "//var buff = Buffer.from(msg.payload);\n\nvar buff=[];\n\nfor (i = 0; i < msg.payload.length; i++) { \n    buff.push(msg.payload.charCodeAt(i));\n}\n\n\nvar cmd ={\n    \"objectType\": \"sendPayload\",\n    \"payloadType\": \"unacknowledged\",\n    \"nodeId\": msg.targetNode || 16,\n    \"port\": 1, \n    \"sequenceNo\":564,\n    \"payload\": buff\n}\n\n\nmsg.payload = cmd;\n//msg.payload.payload = buff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 600,
        "wires": [
            [
                "d3b21334.f320f8"
            ]
        ]
    },
    {
        "id": "8a034bf9.606bd",
        "type": "link in",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "141e6890.afd26f"
        ],
        "x": 175,
        "y": 600,
        "wires": [
            [
                "f83546f8.bcd51"
            ]
        ]
    },
    {
        "id": "1eaebcad.c50343",
        "type": "split",
        "z": "c1c0e71a.90aae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1170,
        "y": 340,
        "wires": [
            [
                "141e6890.afd26f"
            ]
        ]
    },
    {
        "id": "d88e3cca.755948",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "60c85af8.0a1b44",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "mynode/system/long",
        "payload": "This is a very long string. I hope it gets through.",
        "payloadType": "str",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "c7d33c2d.fb1f"
            ]
        ]
    },
    {
        "id": "85eb65ad.908a1",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "topic",
        "func": "// bit 0: list/device type id\n// bits 1+2: topic id\n// bit 3: part number\n// bit 4: number of parts\n\nvar topics = msg.topic.split(\"/\");\n\nif (topics.length==1) { msg.topic =  \"dat/\" + msg.topic;  }\nif (topics.length==2) { msg.topic = global.get(\"node\") + \"/\" + msg.topic;  }\ntopics = msg.topic.split(\"/\");\n\nif (topics.length<3) { return null; }\n\nvar val = \"\" + msg.payload;\n\nvar myobj = topics[topics.length-3] + \".\" +  topics[topics.length-2] + \".\" +  topics[topics.length-1];\nvar mytopic = topics[topics.length-3] + \"/\" +  topics[topics.length-2] + \"/\" +  topics[topics.length-1];\n\n\n\nvar topCount = global.get(\"mesh.topicCount\")||0;\n\nvar topicId = 0;\nif (!global.get(\"mesh.topics.\"+myobj)) {\n    \n    \n    global.set(\"mesh.topics.\"+myobj,{\"topic\":mytopic,\"id\": (topCount+1), \"value\":val});\n    global.set(\"mesh.topicCount\",topCount+1);\n}\n\n\nvar mydetails = global.get(\"mesh.topics.\"+myobj) || {};\n\n\nmsgs = [];\n\nmsg.topic = mydetails[\"id\"] ;\n\n// topic index is represented by first 2 characters\nvar c1 = Math.floor(mydetails[\"id\"]/255)\nvar c2 = mydetails[\"id\"]%255;\n\nvar partCount = Math.ceil(mytopic.length/15);\n\nfor (i = 0; i < partCount; i++) { \n    \n   var pload = String.fromCharCode(0) + String.fromCharCode(c1) + String.fromCharCode(c2)  + String.fromCharCode(i+1) + String.fromCharCode(partCount) + mytopic.substr((i*15),15);\n\n    msgs.push(pload) ;\n}\n\n// if (partCount==1) {\n\n//     msg.payload = String.fromCharCode(c1) + String.fromCharCode(c2)  + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + msg.payload;\n\n// }\n\nmsg.payload = msgs;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 400,
        "wires": [
            [
                "8f60e38a.ce7f7"
            ]
        ]
    },
    {
        "id": "8f60e38a.ce7f7",
        "type": "split",
        "z": "c1c0e71a.90aae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1170,
        "y": 400,
        "wires": [
            [
                "c7cc9807.a5ba08"
            ]
        ]
    },
    {
        "id": "1f320cff.99430b",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "topic setup 2",
        "func": "//var buff = Buffer.from(msg.payload);\n\nvar buff=[];\n\nfor (i = 0; i < msg.payload.length; i++) { \n    buff.push(msg.payload.charCodeAt(i));\n}\n\n\nvar cmd ={\n    \"objectType\": \"sendPayload\",\n    \"payloadType\": \"acknowledged\",\n    \"nodeId\": msg.targetNode || 16,\n    \"port\": 2, \n    \"payload\": buff\n}\n\n\nmsg.payload = cmd;\n//msg.payload.payload = buff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "d3b21334.f320f8"
            ]
        ]
    },
    {
        "id": "33991da9.c604e2",
        "type": "link in",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "c7cc9807.a5ba08"
        ],
        "x": 175,
        "y": 640,
        "wires": [
            [
                "1f320cff.99430b"
            ]
        ]
    },
    {
        "id": "c7cc9807.a5ba08",
        "type": "link out",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "33991da9.c604e2"
        ],
        "x": 1275,
        "y": 400,
        "wires": []
    },
    {
        "id": "85423b74.514178",
        "type": "delay",
        "z": "c1c0e71a.90aae",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "1eaebcad.c50343"
            ]
        ]
    },
    {
        "id": "759c67ed.bdf32",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "compile payload",
        "func": "\nvar stdata = \"\";\nvar topicId = 0;\nvar listId = 0;\nvar partNo = 0;\nvar partCount = 0;\n\nfor (var c in msg.payload.payload) {\n\n    if (c==1) { topicId = msg.payload.payload[c] * 255; }\n    else if (c==2) { topicId = topicId + (1*msg.payload.payload[c]); }\n    else if (c==0) { listId=(1*msg.payload.payload[c]);  }\n    else if (c==3) { partNo=(1*msg.payload.payload[c]); }\n    else if (c==4) { partCount=(1*msg.payload.payload[c]); }\n    else {\n        stdata +=String.fromCharCode(msg.payload.payload[c]); \n    }\n    //\n}\n\nmsg.topic = msg.nodeId + \"/\" + topicId\nmsg.payload = stdata;\nmsg.listId = listId;\nmsg.partNo = partNo;\nmsg.partCount = partCount;\n\n\nif (partCount>1) {\n    \n    var parts = flow.get(\"parts.N\"+ msg.nodeId + \".L\" + listId + \".T\" + topicId) || {};\n    \n    parts[partNo]=stdata;\n    \n    if (partNo == partCount) {\n        \n        msg.payload=\"\";\n        for (var p in parts) {  msg.payload += parts[p]; }\n        \n        flow.set(\"parts.N\"+ msg.nodeId + \".L\" + listId + \".T\" + topicId, {}) ;\n        \n    } else {\n        \n        flow.set(\"parts.N\"+ msg.nodeId + \".L\" + listId + \".T\" + topicId, parts) ;\n        return null;\n    }\n    \n    \n}\n\nif (topicId==2) { flow.set(\"devInfo.N\"+ msg.nodeId + \".nodeId\",msg.payload); }\nif (topicId==1) { flow.set(\"devInfo.N\"+ msg.nodeId + \".networkId\",msg.payload); }\n\nflow.set(\"devInfo.N\"+ msg.nodeId + \".L\" + listId + \".T\" +topicId, msg.payload); \n\n\nif (flow.get(\"devInfo.N\"+ msg.nodeId + \".L\" + listId + \".FT\" +topicId)) {\n    \n    var devt = flow.get(\"devInfo.N\"+ msg.nodeId + \".L\" + listId + \".FT\" +topicId);\n    \n} else { return null; }\n\nvar devInfo = flow.get(\"devInfo.N\"+ msg.nodeId) || {};\n\nif (!devInfo.nodeId) { return null; }\nif (!devInfo.networkId) { return null; }\n\nmsg.topic = devInfo.networkId + \"/\" + devInfo.nodeId + \"/\" + devt; \n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 1120,
        "wires": [
            [
                "8a990708.489c7",
                "1c2a5844.77b0b8"
            ]
        ]
    },
    {
        "id": "8a990708.489c7",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d86a18c.035ab68",
        "type": "function",
        "z": "c1c0e71a.90aae",
        "name": "save topic",
        "func": "\nvar stdata = \"\";\nvar topicId = 0;\nvar listId = 0;\nvar partNo = 0;\nvar partCount = 0;\n\nfor (var c in msg.payload.payload) {\n\n    if (c==1) { topicId = msg.payload.payload[c] * 255; }\n    else if (c==2) { topicId = topicId + (1*msg.payload.payload[c]); }\n    else if (c==0) { listId=(1*msg.payload.payload[c]);  }\n    else if (c==3) { partNo=(1*msg.payload.payload[c]); }\n    else if (c==4) { partCount=(1*msg.payload.payload[c]); }\n    else {\n        stdata +=String.fromCharCode(msg.payload.payload[c]); \n    }\n    //\n}\n\nmsg.topic = msg.nodeId + \"/\" + topicId\nmsg.payload = stdata;\nmsg.listId = listId;\nmsg.partNo = partNo;\nmsg.partCount = partCount;\n\n\nif (partCount>1) {\n    \n    var parts = flow.get(\"parts.N\"+ msg.nodeId + \".L\" + listId + \".T\" + topicId) || {};\n    \n    parts[partNo]=stdata;\n    \n    if (partNo == partCount) {\n        \n        msg.payload=\"\";\n        for (var p in parts) {  msg.payload += parts[p]; }\n        \n        flow.set(\"parts.N\"+ msg.nodeId + \".L\" + listId + \".T\" + topicId, {}) ;\n        \n    } else {\n        \n        flow.set(\"parts.N\"+ msg.nodeId + \".L\" + listId + \".T\" + topicId, parts) ;\n        return null;\n    }\n    \n    \n}\n\n//if (topicId==2) { flow.set(\"devInfo.N\"+ msg.nodeId + \".nodeId\",msg.payload); }\n//if (topicId==1) { flow.set(\"devInfo.N\"+ msg.nodeId + \".networkId\",msg.payload); }\n\nflow.set(\"devInfo.N\"+ msg.nodeId + \".L\" + listId + \".FT\" +topicId, msg.payload); \n\n//var devInfo = flow.get(\"devInfo.N\"+ msg.nodeId) || {};\n//if (devInfo.nodeId) { msg.topic = devInfo.nodeId + msg.topic.substr(msg.topic.indexOf(\"/\")); }\n//if (devInfo.networkId) { msg.topic = devInfo.networkId + \"/\" + msg.topic; }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "33f304da.6a840c",
        "type": "link in",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "c7d33c2d.fb1f",
            "7e6afa81.86dc94"
        ],
        "x": 495,
        "y": 340,
        "wires": [
            [
                "8e688a66.81cd88"
            ]
        ]
    },
    {
        "id": "c7d33c2d.fb1f",
        "type": "link out",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "33f304da.6a840c"
        ],
        "x": 535,
        "y": 160,
        "wires": []
    },
    {
        "id": "25106650.6c3d02",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "system/networkId",
        "payload": "networkId",
        "payloadType": "global",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "c7d33c2d.fb1f"
            ]
        ]
    },
    {
        "id": "96f94ce9.f89fd",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "system/nodeId",
        "payload": "node",
        "payloadType": "global",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "c7d33c2d.fb1f"
            ]
        ]
    },
    {
        "id": "1c2a5844.77b0b8",
        "type": "link out",
        "z": "c1c0e71a.90aae",
        "name": "",
        "links": [
            "22b79bdf.56f684"
        ],
        "x": 1155,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f589504f.9573b",
        "type": "debug",
        "z": "c1c0e71a.90aae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 600,
        "wires": []
    },
    {
        "id": "8e688a66.81cd88",
        "type": "change",
        "z": "c1c0e71a.90aae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "targetNode",
                "pt": "msg",
                "to": "16",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "450f3141.bdbcf8"
            ]
        ]
    },
    {
        "id": "8008c307.479458",
        "type": "change",
        "z": "c1c0e71a.90aae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "targetNode",
                "pt": "msg",
                "to": "16",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "b1974c10.ad4e68"
            ]
        ]
    },
    {
        "id": "f72c7591.d5277",
        "type": "inject",
        "z": "c1c0e71a.90aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "9f0835d1.61951"
            ]
        ]
    },
    {
        "id": "9f0835d1.61951",
        "type": "change",
        "z": "c1c0e71a.90aae",
        "name": "For demo",
        "rules": [
            {
                "t": "set",
                "p": "node",
                "pt": "global",
                "to": "RWfSGMN6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "networkId",
                "pt": "global",
                "to": "rAndD-RWfSGMN6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ec32ffa8.3f6f6",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "sudo iwlist wlan0 scan | grep ESSID | sed 's/ESSID://g;s/\"//g;s/^ *//;s/ *$//'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "scan",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "e0d66c7a.647c9"
            ],
            [],
            []
        ]
    },
    {
        "id": "e0d66c7a.647c9",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "parseOptions",
        "func": "var ssids = msg.payload.split('\\n').filter(s => !!s)\n\nssids = [...new Set(ssids)];\n\nmsg.options = ssids\nmsg.payload = null\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 67,
        "wires": [
            [
                "617d9746.cbcbd8"
            ]
        ]
    },
    {
        "id": "a44c56bf.408c08",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 220,
        "wires": [
            [
                "ec32ffa8.3f6f6",
                "80ce12b.e5edff",
                "9aa43ac5.df3728"
            ]
        ]
    },
    {
        "id": "617d9746.cbcbd8",
        "type": "ui_dropdown",
        "z": "f0a27113.452c7",
        "name": "",
        "label": "Wifi",
        "tooltip": "",
        "place": "Select a WIFI",
        "group": "4d0f060d.dee7e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 830,
        "y": 67,
        "wires": [
            [
                "fc8462e2.6bc6e"
            ]
        ]
    },
    {
        "id": "f50dd378.27c7f",
        "type": "ui_button",
        "z": "f0a27113.452c7",
        "name": "",
        "group": "4d0f060d.dee7e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Scan",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 230,
        "y": 181,
        "wires": [
            [
                "ec32ffa8.3f6f6"
            ]
        ]
    },
    {
        "id": "49307dfc.36fce4",
        "type": "ui_ui_control",
        "z": "f0a27113.452c7",
        "name": "onTab",
        "events": "all",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "ee0231ae.607de"
            ]
        ]
    },
    {
        "id": "ee0231ae.607de",
        "type": "switch",
        "z": "f0a27113.452c7",
        "name": "ifWifi",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Wifi",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 271,
        "y": 80,
        "wires": [
            [
                "ec32ffa8.3f6f6",
                "80ce12b.e5edff",
                "9aa43ac5.df3728"
            ]
        ]
    },
    {
        "id": "80ce12b.e5edff",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "ifconfig wlan0",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "getInfo",
        "x": 430,
        "y": 181,
        "wires": [
            [
                "8a86d9a3.7ccca8"
            ],
            [],
            []
        ]
    },
    {
        "id": "8a86d9a3.7ccca8",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "parseInfo",
        "func": "var ip = msg.payload.match(/inet ([0-9\\.]+)/)[1]\nvar mask = msg.payload.match(/netmask ([0-9\\.]+)/)[1]\nvar broadcast = msg.payload.match(/broadcast ([0-9\\.]+)/)[1]\n\n\nnode.send({topic: 'ip', payload: ip})\nnode.send({topic: 'mask', payload: mask})\nnode.send({topic: 'broadcast', payload: broadcast})",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 168,
        "wires": [
            [
                "446ce308.eaab1c"
            ]
        ]
    },
    {
        "id": "446ce308.eaab1c",
        "type": "switch",
        "z": "f0a27113.452c7",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ip",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mask",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "broadcast",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 810,
        "y": 181,
        "wires": [
            [
                "d1ea316d.10c3d"
            ],
            [
                "8cadebd5.bedfe8"
            ],
            [
                "3592ebde.5596b4"
            ]
        ]
    },
    {
        "id": "d1ea316d.10c3d",
        "type": "ui_text",
        "z": "f0a27113.452c7",
        "group": "a1e7431b.229d5",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "IP",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 990,
        "y": 141,
        "wires": []
    },
    {
        "id": "8cadebd5.bedfe8",
        "type": "ui_text",
        "z": "f0a27113.452c7",
        "group": "a1e7431b.229d5",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Netmask",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 1000,
        "y": 181,
        "wires": []
    },
    {
        "id": "3592ebde.5596b4",
        "type": "ui_text",
        "z": "f0a27113.452c7",
        "group": "a1e7431b.229d5",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Broadcast",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 1000,
        "y": 221,
        "wires": []
    },
    {
        "id": "4e417c79.0e9454",
        "type": "ui_form",
        "z": "f0a27113.452c7",
        "name": "",
        "label": "Update",
        "group": "4d0f060d.dee7e8",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "SSID",
                "value": "ssid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ssid": "",
            "password": ""
        },
        "payload": "",
        "submit": "UPDATE",
        "cancel": "RESET",
        "topic": "",
        "x": 1120,
        "y": 67,
        "wires": [
            [
                "562a8ec7.a7e76"
            ]
        ]
    },
    {
        "id": "fc8462e2.6bc6e",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "\nmsg.payload = {ssid: msg.payload}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 67,
        "wires": [
            [
                "4e417c79.0e9454"
            ]
        ]
    },
    {
        "id": "562a8ec7.a7e76",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "getPassphrase",
        "func": "var data = msg.payload\n\nvar command = `wpa_passphrase \"${data.ssid}\" \"${data.password}\" | sed '/#psk=\".*\"/d'`\n \nmsg.payload = command\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 67,
        "wires": [
            [
                "50f3b384.d92f4c"
            ]
        ]
    },
    {
        "id": "50f3b384.d92f4c",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1481,
        "y": 67,
        "wires": [
            [
                "201a9fb.244ff6"
            ],
            [],
            []
        ]
    },
    {
        "id": "201a9fb.244ff6",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "updateWpasupplicant",
        "func": "var template = `sudo tee /etc/wpa_supplicant/wpa_supplicant.conf <<EOF\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\ncountry=GB\n\n${msg.payload}\nEOF\\n\n`\n\nmsg.payload = template\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 60,
        "wires": [
            [
                "d288a86d.e0ba48"
            ]
        ]
    },
    {
        "id": "d288a86d.e0ba48",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "updateConf",
        "x": 1270,
        "y": 180,
        "wires": [
            [
                "ecc743df.05dd"
            ],
            [],
            []
        ]
    },
    {
        "id": "ecc743df.05dd",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "sudo wpa_cli -i wlan0 reconfigure",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "reconfigure",
        "x": 1450,
        "y": 167,
        "wires": [
            [
                "2e12d3e8.51947c"
            ],
            [],
            []
        ]
    },
    {
        "id": "2e12d3e8.51947c",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "showMessage",
        "func": "\nmsg.payload = msg.payload.trim() === 'OK' ? \"Wifi configuration updated successfully\" : \"Error while updating wifi configuration\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 154,
        "wires": [
            [
                "aa9d6712.91e718"
            ]
        ]
    },
    {
        "id": "aa9d6712.91e718",
        "type": "ui_toast",
        "z": "f0a27113.452c7",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1720,
        "y": 220,
        "wires": []
    },
    {
        "id": "d4e866c7.6c3958",
        "type": "ui_button",
        "z": "f0a27113.452c7",
        "name": "",
        "group": "a1e7431b.229d5",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "Menu",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "ec32ffa8.3f6f6",
                "80ce12b.e5edff",
                "9aa43ac5.df3728"
            ]
        ]
    },
    {
        "id": "9aa43ac5.df3728",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "iwgetid",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "getCurrentSSID",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "6cff487b.f73b08"
            ],
            [],
            []
        ]
    },
    {
        "id": "4e1b74b8.84f51c",
        "type": "ui_text",
        "z": "f0a27113.452c7",
        "group": "a1e7431b.229d5",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SSID",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "6cff487b.f73b08",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "parseInfo",
        "func": "var ssid = msg.payload.match(/ESSID:\"([^\"]+)\"/)[1]\n\n\nnode.send({topic: 'ssid', payload: ssid})\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 247,
        "wires": [
            [
                "4e1b74b8.84f51c"
            ]
        ]
    },
    {
        "id": "3bf9d2e69a5772be",
        "type": "ui_template",
        "z": "f0a27113.452c7",
        "d": true,
        "group": "a1e7431b.229d5",
        "name": "Virtual Keyboard",
        "order": 6,
        "width": "6",
        "height": "1",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button style=\"display:none;\" class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "4bfec146cfe60f8f",
        "type": "comment",
        "z": "f0a27113.452c7",
        "name": "WiFi Flow",
        "info": "https://flows.nodered.org/flow/c3c7a393b05f6383b888bdee39aa5fa5",
        "x": 220,
        "y": 380,
        "wires": []
    },
    {
        "id": "71684eb4cd5d1dd6",
        "type": "comment",
        "z": "f0a27113.452c7",
        "name": "Setup WiFi Repeater",
        "info": "https://raspberrypi.stackexchange.com/questions/89803/access-point-as-wifi-router-repeater-optional-with-bridge/89804#89804",
        "x": 250,
        "y": 440,
        "wires": []
    },
    {
        "id": "0f32252c41e0be2b",
        "type": "ui_button",
        "z": "f0a27113.452c7",
        "name": "",
        "group": "f405b29b0175ff69",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Scan",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "fb378810ca61deca"
            ]
        ]
    },
    {
        "id": "aaf7e5025b03a178",
        "type": "arp",
        "z": "f0a27113.452c7",
        "name": "ARP",
        "macs": "",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "49e19b144ab24320",
                "0c2968c1ed40a532"
            ]
        ]
    },
    {
        "id": "49e19b144ab24320",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 740,
        "wires": []
    },
    {
        "id": "28eb25ef79e0a8ae",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "desktopjson",
                "v": "desktop.desktop1",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"JSON Editor\",\"body\":\"\"}",
        "payloadType": "json",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "fb378810ca61deca"
            ]
        ]
    },
    {
        "id": "ebf040adb1653134",
        "type": "ui_table",
        "z": "f0a27113.452c7",
        "group": "f405b29b0175ff69",
        "name": "",
        "order": 1,
        "width": "12",
        "height": "6",
        "columns": [
            {
                "field": "ip",
                "title": "Ip Address",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mac",
                "title": "MAC Address",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "hostname",
                "title": "Hostname",
                "width": "17%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "iface",
                "title": "Interface",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "software",
                "title": "NR",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "networkId",
                "title": "Network",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "node",
                "title": "Node",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1810,
        "y": 780,
        "wires": [
            [
                "10a6ec5e13bc2098"
            ]
        ]
    },
    {
        "id": "8cc21653dd45cb08",
        "type": "http request",
        "z": "f0a27113.452c7",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 1110,
        "y": 860,
        "wires": [
            [
                "e7fe2e3ccdf875cd"
            ]
        ]
    },
    {
        "id": "80396b9abad16578",
        "type": "split",
        "z": "f0a27113.452c7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 820,
        "wires": [
            [
                "3c0a8a028e8a06b3",
                "919297faf1ee9b2f"
            ]
        ]
    },
    {
        "id": "3c0a8a028e8a06b3",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "\n\nvar id = msg.payload.ip.replace(/\\./g,\"_\");\n\nfor (var k in msg.payload) {\n    flow.set(\"iplist.\" + id + \".\" + k, msg.payload[k]);\n}\n\nmsg.url = \"http://\" + msg.payload.ip + \":1880\";\nmsg.info = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 860,
        "wires": [
            [
                "460ed44638eec8f4"
            ]
        ]
    },
    {
        "id": "fbdf280a3bc325cb",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 960,
        "wires": []
    },
    {
        "id": "e7fe2e3ccdf875cd",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "if (msg.payload.indexOf(\"Node-RED\")>-1) {\n    \n    var id = msg.info.ip.replace(/\\./g,\"_\");\n    flow.set(\"iplist.\" + id + \".software\" , \"NR\");\n    return msg;\n}\n\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 860,
        "wires": [
            [
                "fbdf280a3bc325cb",
                "b56ab62781dd622b",
                "01ad601a4ebe29ba"
            ]
        ]
    },
    {
        "id": "0c2968c1ed40a532",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "save",
        "func": "\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 820,
        "wires": [
            [
                "80396b9abad16578"
            ]
        ]
    },
    {
        "id": "22b2f8870ce4412b",
        "type": "trigger",
        "z": "f0a27113.452c7",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "0.9",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1330,
        "y": 780,
        "wires": [
            [
                "2f59f42f9fb5d2d6"
            ]
        ]
    },
    {
        "id": "2f59f42f9fb5d2d6",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "\nvar oot=[];\nvar iplist = flow.get(\"iplist\");\n\nfor (var k in iplist) {\n    oot.push(iplist[k]);\n}\nmsg.payload=oot;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 780,
        "wires": [
            [
                "e3c5023f86c0261a"
            ]
        ]
    },
    {
        "id": "eccc347b167ddc8e",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 680,
        "wires": [
            [
                "a40d16850ad6923f"
            ]
        ]
    },
    {
        "id": "a40d16850ad6923f",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "nmap -sn",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1060,
        "y": 680,
        "wires": [
            [
                "ddb55926b3937562"
            ],
            [],
            []
        ]
    },
    {
        "id": "1b46a984054f6acf",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 640,
        "wires": []
    },
    {
        "id": "919297faf1ee9b2f",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "\nmsg.info = msg.payload;\nmsg.payload = msg.payload.ip;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 740,
        "wires": [
            [
                "1068fdc8a59eef37"
            ]
        ]
    },
    {
        "id": "1068fdc8a59eef37",
        "type": "delay",
        "z": "f0a27113.452c7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 740,
        "wires": [
            [
                "a40d16850ad6923f"
            ]
        ]
    },
    {
        "id": "ddb55926b3937562",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "if (msg.payload.indexOf(\"report for \")>-1) {\n    \n    var host = msg.payload.split(\"report for \")[1].trim();\n    \n    if (host.indexOf(\" \")>-1) { host = host.substr(0,host.indexOf(\" \")); }\n    if (host.indexOf(\"\\n\")>-1) { host = host.split(\"\\n\")[0]; }\n    \n    \n    //Nmap scan report for HelenRaesiPhone (192.168.0.10)\n    \n    var id = msg.info.ip.replace(/\\./g,\"_\");\n    flow.set(\"iplist.\" + id + \".hostname\" , host);\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 680,
        "wires": [
            [
                "1b46a984054f6acf",
                "dd295d1c6306b675"
            ]
        ]
    },
    {
        "id": "460ed44638eec8f4",
        "type": "delay",
        "z": "f0a27113.452c7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 860,
        "wires": [
            [
                "8cc21653dd45cb08"
            ]
        ]
    },
    {
        "id": "78186f32b10a0120",
        "type": "link in",
        "z": "f0a27113.452c7",
        "name": "",
        "links": [
            "b56ab62781dd622b",
            "dd295d1c6306b675",
            "75e8f922fb6f5dd3",
            "1e968a389c949351"
        ],
        "x": 1215,
        "y": 780,
        "wires": [
            [
                "22b2f8870ce4412b"
            ]
        ]
    },
    {
        "id": "b56ab62781dd622b",
        "type": "link out",
        "z": "f0a27113.452c7",
        "name": "",
        "mode": "link",
        "links": [
            "78186f32b10a0120"
        ],
        "x": 1455,
        "y": 860,
        "wires": []
    },
    {
        "id": "dd295d1c6306b675",
        "type": "link out",
        "z": "f0a27113.452c7",
        "name": "",
        "mode": "link",
        "links": [
            "78186f32b10a0120"
        ],
        "x": 1375,
        "y": 680,
        "wires": []
    },
    {
        "id": "9ce929088a84c329",
        "type": "http request",
        "z": "f0a27113.452c7",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 1130,
        "y": 1020,
        "wires": [
            [
                "a5fe7c72aebd3a50",
                "66f3ba1e58e05c32"
            ]
        ]
    },
    {
        "id": "01ad601a4ebe29ba",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "\n\n\nmsg.url = msg.url + \"/about\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1020,
        "wires": [
            [
                "9ce929088a84c329"
            ]
        ]
    },
    {
        "id": "a5fe7c72aebd3a50",
        "type": "function",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "if (msg.payload.indexOf(\"{\")>-1) {\n    \n    var facts = JSON.parse(msg.payload);\n    var id = msg.info.ip.replace(/\\./g,\"_\");    \n        \n    for (var k in facts) {\n        flow.set(\"iplist.\" + id + \".\" + k, facts[k]);\n    }\n    \n    return msg;\n}\n\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1020,
        "wires": [
            [
                "1e968a389c949351"
            ]
        ]
    },
    {
        "id": "1e968a389c949351",
        "type": "link out",
        "z": "f0a27113.452c7",
        "name": "",
        "mode": "link",
        "links": [
            "78186f32b10a0120"
        ],
        "x": 1475,
        "y": 1020,
        "wires": []
    },
    {
        "id": "66f3ba1e58e05c32",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fb378810ca61deca",
        "type": "trigger",
        "z": "f0a27113.452c7",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 190,
        "y": 740,
        "wires": [
            [
                "06efc19aa25410af"
            ]
        ]
    },
    {
        "id": "06efc19aa25410af",
        "type": "trigger",
        "z": "f0a27113.452c7",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 180,
        "y": 820,
        "wires": [
            [
                "aaf7e5025b03a178"
            ]
        ]
    },
    {
        "id": "e3c5023f86c0261a",
        "type": "rbe",
        "z": "f0a27113.452c7",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1670,
        "y": 780,
        "wires": [
            [
                "ebf040adb1653134"
            ]
        ]
    },
    {
        "id": "d154ae08a4044006",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "sudo dhclient -v wlan0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 360,
        "wires": [
            [
                "f36908153d2b35bd"
            ],
            [
                "f36908153d2b35bd"
            ],
            []
        ]
    },
    {
        "id": "67a89ee157dec3a9",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 730,
        "y": 360,
        "wires": [
            [
                "d154ae08a4044006"
            ]
        ]
    },
    {
        "id": "f36908153d2b35bd",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 360,
        "wires": []
    },
    {
        "id": "44cc50913b920667",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "sudo ifconfig wlan0 down",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1710,
        "y": 360,
        "wires": [
            [
                "6814658b9bed5f44"
            ],
            [
                "6814658b9bed5f44"
            ],
            [
                "d8af7c2ac10d9072"
            ]
        ]
    },
    {
        "id": "7f73bbe2c21f14b5",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 1480,
        "y": 360,
        "wires": [
            [
                "44cc50913b920667"
            ]
        ]
    },
    {
        "id": "6814658b9bed5f44",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 360,
        "wires": []
    },
    {
        "id": "c08515d3a8691a14",
        "type": "exec",
        "z": "f0a27113.452c7",
        "command": "sudo ifconfig wlan0 up",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1700,
        "y": 460,
        "wires": [
            [
                "d3a2b637398e0ad6"
            ],
            [
                "d3a2b637398e0ad6"
            ],
            []
        ]
    },
    {
        "id": "5d54a793b0d8c5c9",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 1470,
        "y": 460,
        "wires": [
            [
                "c08515d3a8691a14"
            ]
        ]
    },
    {
        "id": "d3a2b637398e0ad6",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 460,
        "wires": []
    },
    {
        "id": "d8af7c2ac10d9072",
        "type": "delay",
        "z": "f0a27113.452c7",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1520,
        "y": 400,
        "wires": [
            [
                "c08515d3a8691a14"
            ]
        ]
    },
    {
        "id": "10a6ec5e13bc2098",
        "type": "debug",
        "z": "f0a27113.452c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 780,
        "wires": []
    },
    {
        "id": "dd1f12e346b81e3c",
        "type": "inject",
        "z": "f0a27113.452c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"timestamp\":1659579385007,\"value\":0.52},{\"timestamp\":1659579385036,\"value\":0.52},{\"timestamp\":1659579385065,\"value\":0.53},{\"timestamp\":1659579385094,\"value\":0.52},{\"timestamp\":1659579385123,\"value\":0.52},{\"timestamp\":1659579385152,\"value\":0.52},{\"timestamp\":1659579385182,\"value\":0.52},{\"timestamp\":1659579385211,\"value\":0.52},{\"timestamp\":1659579385240,\"value\":0.51},{\"timestamp\":1659579385268,\"value\":0.5},{\"timestamp\":1659579385298,\"value\":0.51},{\"timestamp\":1659579385327,\"value\":0.51},{\"timestamp\":1659579385356,\"value\":0.52},{\"timestamp\":1659579385385,\"value\":0.53},{\"timestamp\":1659579385414,\"value\":0.52},{\"timestamp\":1659579385443,\"value\":0.52},{\"timestamp\":1659579385472,\"value\":0.51},{\"timestamp\":1659579385501,\"value\":0.51},{\"timestamp\":1659579385531,\"value\":0.51},{\"timestamp\":1659579385559,\"value\":0.51},{\"timestamp\":1659579385589,\"value\":0.51},{\"timestamp\":1659579385622,\"value\":0.52},{\"timestamp\":1659579385661,\"value\":0.51},{\"timestamp\":1659579385700,\"value\":0.51},{\"timestamp\":1659579385730,\"value\":0.51},{\"timestamp\":1659579385808,\"value\":10.76},{\"timestamp\":1659579385838,\"value\":10.76},{\"timestamp\":1659579385867,\"value\":10.76},{\"timestamp\":1659579385896,\"value\":10.76},{\"timestamp\":1659579385925,\"value\":10.76},{\"timestamp\":1659579385955,\"value\":10.76},{\"timestamp\":1659579385986,\"value\":10.76},{\"timestamp\":1659579386013,\"value\":10.76},{\"timestamp\":1659579386042,\"value\":10.76},{\"timestamp\":1659579386071,\"value\":10.76},{\"timestamp\":1659579386100,\"value\":10.76},{\"timestamp\":1659579386333,\"value\":1.58},{\"timestamp\":1659579386362,\"value\":1.04},{\"timestamp\":1659579386392,\"value\":0.97},{\"timestamp\":1659579386426,\"value\":0.96},{\"timestamp\":1659579386464,\"value\":0.72},{\"timestamp\":1659579386503,\"value\":0.64},{\"timestamp\":1659579386535,\"value\":0.63},{\"timestamp\":1659579386565,\"value\":0.58},{\"timestamp\":1659579386595,\"value\":0.55},{\"timestamp\":1659579386624,\"value\":0.56},{\"timestamp\":1659579386654,\"value\":0.55},{\"timestamp\":1659579386683,\"value\":0.54},{\"timestamp\":1659579386713,\"value\":0.53},{\"timestamp\":1659579386742,\"value\":0.53}]",
        "payloadType": "json",
        "x": 1860,
        "y": 1100,
        "wires": [
            [
                "fd4d4eaadf0381c1"
            ]
        ]
    },
    {
        "id": "fd4d4eaadf0381c1",
        "type": "change",
        "z": "f0a27113.452c7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "readingsHistory.local.mcnode1.dat.dp1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "readings.local.mcnode1.dat.dp1.value",
                "pt": "global",
                "to": "0.53",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "7ef41dc1.ed2e0c",
        "type": "mbus-out",
        "z": "789aa767.91c36",
        "name": "",
        "client": "618faf057d845369",
        "x": 471,
        "y": 242,
        "wires": [
            [
                "cfe1fe5a.4377f"
            ]
        ]
    },
    {
        "id": "cfe1fe5a.4377f",
        "type": "debug",
        "z": "789aa767.91c36",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 690,
        "y": 242,
        "wires": []
    },
    {
        "id": "b09b5389.e16f18",
        "type": "mbus-controller",
        "z": "789aa767.91c36",
        "name": "",
        "client": "618faf057d845369",
        "x": 511,
        "y": 303,
        "wires": [
            [
                "950250cd.ba0db8",
                "ec1a5b76.fe6a68",
                "682462aa.67061c"
            ]
        ]
    },
    {
        "id": "ce0c2ab.6ef14d8",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "scan",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "scan",
        "payload": "",
        "payloadType": "str",
        "x": 122,
        "y": 72,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "950250cd.ba0db8",
        "type": "debug",
        "z": "789aa767.91c36",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 762,
        "y": 361,
        "wires": []
    },
    {
        "id": "4415ab35.a140dc",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "Read ID 1",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "getDevice",
        "payload": "{\"address\": 1}",
        "payloadType": "json",
        "x": 129,
        "y": 146,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "46f5ca76.564844",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "Get Devices",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "getDevices",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "topic": "getDevices",
        "payload": "",
        "payloadType": "str",
        "x": 145,
        "y": 220,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "ec1a5b76.fe6a68",
        "type": "ui_template",
        "z": "789aa767.91c36",
        "group": "cbd3bd44.834398",
        "name": "mbus-table",
        "order": 0,
        "width": "14",
        "height": "10",
        "format": "<table>\n  <tr>\n    <th>ID</th>\n    <th>Primary ID</th>\n    <th>Info</th>\n    <th>Data</th>\n    <th>Last Update</th>\n    <th>Status</th>\n  </tr>\n  <tr style=\"cursor:pointer;\" ng-click=\"showData(device)\" ng-repeat=\"(id, device) in devices\">\n    <td>{{ device.secondaryID }}</td>\n    <td>{{ device.primaryID }}</td>\n    <td ng-bind-html=\"getInfo(device)\"></td>\n    <td>{{ device.DataRecord.length }}</td>\n    <td>{{ device.lastUpdate }}</td>\n    <td>\n        <div class=\"online\" ng-style=\"{background: !device.error ? '#4CAF50' : '#f44336'}\">\n            <md-tooltip md-direction=\"bottom\">{{ device.error ? device.error : 'OK' }}</md-tooltip>\n        </div>\n    </td>\n  </tr>\n</table>\n\n<style>\ntable {\n    border-collapse: collapse;\n    width: 100%;\n}\n\nth, td{\n    text-align: left;\n    padding: 8px;\n    background-color: #f2f2f2;\n    color: black;\n}\n\nth {\n    background-color: #4CAF50;\n    color: white;\n}\n\n.online {\n\tbackground:#ff3333;\n\twidth:20px;\n\theight:20px;\n\tmargin:0 auto;\n\t-webkit-border-radius:50%;\n\t-moz-border-radius:50%;\n\tborder-radius:50%;\n}\n</style>\n\n<script>\n\n\n(function(scope) {\n    \n    scope.send({topic: 'getDevices'});\n    scope.devices = [];\n    \n    scope.showData = function(device){\n        scope.send({topic: 'deviceData', payload: device});\n    }\n    \n    scope.getInfo = function(device){\n        var text = '';\n        var info = device.SlaveInformation;\n        \n        for(key in info){\n            text += `<p><b>${key}</b>: ${info[key]}</p>`;\n        }\n        \n        return text;\n    }\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n                case \"getDevices\":\n                    if(data.payload && data.payload.devices)\n                        scope.devices = data.payload.devices;\n                break;\n            }\n        }\n    });\n    \n})(scope);\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 708,
        "y": 303,
        "wires": [
            [
                "c4e77f76.60f13"
            ]
        ]
    },
    {
        "id": "e4f8a44c.9991a",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "restart",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "restart",
        "payload": "",
        "payloadType": "num",
        "x": 119,
        "y": 108,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "c4e77f76.60f13",
        "type": "ui_template",
        "z": "789aa767.91c36",
        "group": "fb0048e.a5eec38",
        "name": "data-table",
        "order": 0,
        "width": "14",
        "height": "10",
        "format": "<p><b>Device ID:</b> {{ID}} </p>\n\n<br>\n<br>\n\n<table>\n  <tr>\n    <th>ID</th>\n    <th>Function</th>\n    <th>Unit</th>\n    <th>Value</th>\n    <th>Timestamp</th>\n  </tr>\n  <tr ng-repeat=\"(key, data) in deviceData\">\n    <td>{{ data.id }}</td>\n    <td>{{ data.Function }}</td>\n    <td>{{ data.Unit }}</td>\n    <td>{{ data.Value }}</td>\n    <td>{{ data.Timestamp }}</td>\n  </tr>\n</table>\n\n<style>\ntable {\n    border-collapse: collapse;\n    width: 100%;\n}\n\nth, td{\n    text-align: left;\n    padding: 8px;\n    background-color: #f2f2f2;\n    color: black;\n}\n\nth {\n    background-color: #4CAF50;\n    color: white;\n}\n\n.online {\n\tbackground:#ff3333;\n\twidth:20px;\n\theight:20px;\n\tmargin:0 auto;\n\t-webkit-border-radius:50%;\n\t-moz-border-radius:50%;\n\tborder-radius:50%;\n}\n</style>\n\n<script>\n\n\n(function(scope) {\n    \n    scope.deviceData = [];\n    scope.ID = '';\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n                case \"deviceData\":\n                    if(data.payload){\n                        scope.deviceData = data.payload.DataRecord;\n                        scope.ID = data.payload.SlaveInformation.Id;\n                    }\n                break;\n            }\n        }\n    });\n    \n})(scope);\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 872,
        "y": 303,
        "wires": [
            []
        ]
    },
    {
        "id": "41ec05d7.924b04",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "Read ID 2",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "getDevice",
        "payload": "{\"address\": 2}",
        "payloadType": "json",
        "x": 130,
        "y": 184,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "48d0b9e5.236fb8",
        "type": "ui_button",
        "z": "789aa767.91c36",
        "name": "Scan",
        "group": "de125633.ed6c5",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Scan",
        "color": "",
        "bgcolor": "",
        "icon": "location_searching",
        "payload": "",
        "payloadType": "str",
        "topic": "scan",
        "x": 97,
        "y": 306,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "1b07dce9.8a093b",
        "type": "ui_button",
        "z": "789aa767.91c36",
        "name": "Restart",
        "group": "de125633.ed6c5",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Restart",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "restart",
        "x": 107,
        "y": 343,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "cb5b5d1b.3e8b98",
        "type": "ui_button",
        "z": "789aa767.91c36",
        "name": "GetDevices",
        "group": "de125633.ed6c5",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Update Devices",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "getDevices",
        "x": 115,
        "y": 380,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "4646c610.c0a18",
        "type": "ui_button",
        "z": "789aa767.91c36",
        "name": "readAddress",
        "group": "de125633.ed6c5",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Read Device",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "deviceID",
        "payloadType": "flow",
        "topic": "getDevice",
        "x": 112,
        "y": 419,
        "wires": [
            [
                "437a749f.6ab504"
            ]
        ]
    },
    {
        "id": "6e5d9013.091c38",
        "type": "ui_text_input",
        "z": "789aa767.91c36",
        "name": "Device_ID",
        "label": "ID: ",
        "group": "de125633.ed6c5",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "3e4c4281.63d6b6"
            ]
        ]
    },
    {
        "id": "3e4c4281.63d6b6",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "storeID",
        "func": "\nflow.set('deviceID', msg.payload);\n\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 746,
        "y": 560,
        "wires": []
    },
    {
        "id": "437a749f.6ab504",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "readAddr",
        "func": "var data = {address: msg.payload}\n\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 419,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "4417fa63.93883c",
        "type": "status",
        "z": "789aa767.91c36",
        "name": "controller_status",
        "scope": [
            "b09b5389.e16f18"
        ],
        "x": 411,
        "y": 97,
        "wires": [
            [
                "5a88af3c.5d0258"
            ]
        ]
    },
    {
        "id": "2d994365.6f212c",
        "type": "status",
        "z": "789aa767.91c36",
        "name": "mbus_status",
        "scope": [
            "7ef41dc1.ed2e0c"
        ],
        "x": 404,
        "y": 142,
        "wires": [
            [
                "b886eaf0.44a528"
            ]
        ]
    },
    {
        "id": "5a88af3c.5d0258",
        "type": "ui_text",
        "z": "789aa767.91c36",
        "group": "88aaec54.303928",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "controller_status",
        "label": "Controller",
        "format": "{{msg.status.text}}",
        "layout": "row-spread",
        "x": 623,
        "y": 97,
        "wires": []
    },
    {
        "id": "b886eaf0.44a528",
        "type": "ui_text",
        "z": "789aa767.91c36",
        "group": "88aaec54.303928",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "mbus_status",
        "label": "M-Bus",
        "format": "{{msg.status.text}}",
        "layout": "row-spread",
        "x": 613,
        "y": 142,
        "wires": []
    },
    {
        "id": "3d78c691.9bd322",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "setPrimary",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "setPrimary",
        "payload": "{\"newAddr\":3,\"oldAddr\":2}",
        "payloadType": "json",
        "x": 121,
        "y": 35,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "d31c87e.42a2af8",
        "type": "ui_text_input",
        "z": "789aa767.91c36",
        "name": "Old_ID",
        "label": "Old ID",
        "group": "de125633.ed6c5",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 577,
        "y": 600,
        "wires": [
            [
                "852edb36.359ee8"
            ]
        ]
    },
    {
        "id": "852edb36.359ee8",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "storeID",
        "func": "\nflow.set('oldID', msg.payload);\n\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 744,
        "y": 600,
        "wires": []
    },
    {
        "id": "35f10be8.81eff4",
        "type": "ui_text_input",
        "z": "789aa767.91c36",
        "name": "New_ID",
        "label": "New ID",
        "group": "de125633.ed6c5",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 574,
        "y": 640,
        "wires": [
            [
                "21cfe6a.569359a"
            ]
        ]
    },
    {
        "id": "21cfe6a.569359a",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "storeID",
        "func": "\nflow.set('newID', msg.payload);\n\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 742,
        "y": 640,
        "wires": []
    },
    {
        "id": "bd997a73.d5cb18",
        "type": "ui_button",
        "z": "789aa767.91c36",
        "name": "SetPrimary",
        "group": "de125633.ed6c5",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Set Primary ID",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "setPrimary",
        "x": 111,
        "y": 460,
        "wires": [
            [
                "87d95a5a.46573"
            ]
        ]
    },
    {
        "id": "87d95a5a.46573",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "setPrimary",
        "func": "var data = {\n    oldAddr: flow.get('oldID'), \n    newAddr:flow.get('newID')\n    }\n\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 460,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "357e7aec.dcce3e",
        "type": "inject",
        "z": "789aa767.91c36",
        "name": "setDevices",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "setDevices",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "9bd33402.9e6558"
            ]
        ]
    },
    {
        "id": "9bd33402.9e6558",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "devices",
        "func": "var devices = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\"];\n\nmsg.payload = devices;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 260,
        "wires": [
            [
                "b09b5389.e16f18"
            ]
        ]
    },
    {
        "id": "682462aa.67061c",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "Meter Data Selection",
        "func": "\n\nvar oot = [];\n\n//Unit: \"Flow temperature (1e-2 deg C)\"\n\nfor (var meter in msg.payload.devices) {\n    \n    if (msg.payload.devices[meter].DataRecord[9].Unit.indexOf(\"temperature\")>0) {\n    \n        var meterid = msg.payload.devices[meter].SlaveInformation.Manufacturer + meter;\n        \n        oot.push({\n            \"payload\": msg.payload.devices[meter].SlaveInformation.Manufacturer,\n            \"topic\": \"meter/manufacturer\", \"meter\": meterid });\n            \n        \n            \n        oot.push({\n            \"payload\": msg.payload.devices[meter].SlaveInformation.Id,\n            \"topic\": \"meter/id\", \"meter\": meterid }\n            );\n        \n        \n        oot.push({\n            \"payload\": msg.payload.devices[meter].DataRecord[7].Value,\n            \"topic\": \"meter/kwh\",\n            \"title\": \"Heat meter energy\",\n            \"units\": \"kWh\", \"meter\": meterid \n            });\n         \n        \n        oot.push({\n            \"payload\": msg.payload.devices[meter].DataRecord[9].Value / 100,\n            \"topic\": \"meter/tF\",\n            \"title\": \"Heat meter flow temperature\",\n            \"units\": \"°C\" , \"meter\": meterid\n            });\n         \n        oot.push({\n            \"payload\": msg.payload.devices[meter].DataRecord[10].Value / 100,\n            \"topic\": \"meter/tR\",\n            \"title\": \"Heat meter return temperature\",\n            \"units\": \"°C\" , \"meter\": meterid \n            });\n         \n        \n        oot.push({\n            \"payload\": msg.payload.devices[meter].DataRecord[11].Value / 100,\n            \"topic\": \"meter/tDiff\",\n            \"title\": \"Heat meter temperature drop\",\n            \"units\": \"°C\"  , \"meter\": meterid\n            });     \n        \n        \n        oot.push({\n            \"payload\": msg.payload.devices[meter].DataRecord[12].Value / 10,\n            \"topic\": \"meter/kw\",\n            \"title\": \"Heat meter power\",\n            \"units\": \"kW\" , \"meter\": meterid \n            });     \n            \n    }\n        \n}   \nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 440,
        "wires": [
            [
                "e4d3eaec.811fd8"
            ]
        ]
    },
    {
        "id": "e4d3eaec.811fd8",
        "type": "split",
        "z": "789aa767.91c36",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 940,
        "y": 440,
        "wires": [
            [
                "7c7cca54.a35e54"
            ]
        ]
    },
    {
        "id": "7c7cca54.a35e54",
        "type": "function",
        "z": "789aa767.91c36",
        "name": "",
        "func": "msg=msg.payload;\n\nvar msg2={};\nmsg2.topic = msg.meter + \"/\" + msg.topic.replace(\"meter\",\"dat\");\n\nmsg2.payload = msg.payload;\n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 440,
        "wires": [
            [
                "2f7dea9a.341f4e",
                "e162d709.82b3"
            ],
            [
                "e162d709.82b3",
                "2f7dea9a.341f4e"
            ]
        ]
    },
    {
        "id": "2f7dea9a.341f4e",
        "type": "debug",
        "z": "789aa767.91c36",
        "name": "",
        "active": false,
        "console": false,
        "complete": "false",
        "x": 1270,
        "y": 460,
        "wires": []
    },
    {
        "id": "e162d709.82b3",
        "type": "link out",
        "z": "789aa767.91c36",
        "name": "",
        "mode": "link",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1215,
        "y": 420,
        "wires": []
    },
    {
        "id": "0a47237c5542cf17",
        "type": "inject",
        "z": "84006830c8bcb952",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "5ca1d8af90711e39"
            ]
        ]
    },
    {
        "id": "32ad8f061b071657",
        "type": "comment",
        "z": "84006830c8bcb952",
        "name": "TI COMMANDS",
        "info": "        -v              Display the ti command version number\n        -h              Display the list of command options or one command option details\n        -warranty       Display the warranty\n        -list:          List all ti boards connected\n                        return the # of boards and stack level for every board\n        board           Display the board status and firmware version number\n        rtcbrd          Display the RTC backup battery voltage\n        relwr:          Set relays (AC switch) On/Off\n        relrd:          Read relays  status\n        reltest:                Turn ON and OFF the relays until press a key\n        contactrd:      Read dry contact status\n                        Warning: For this measurements to be valid place the jumper in position \"1K\"\n        countrd:        Read dry contact transitions count\n                        Warning: For this measurements to be valid place the jumper in position \"1K\"\n        countrst:       Reset dry contact transitions count\n        edgerd:         Read dry contact transitions type, ret 0 - disable, 1 - rising, 2 - falling, 3 - both\n        edgewr:         Write dry contact transitions type: 0 - disable, 1 - rising, 2 - falling, 3 - both\n        dacrd:          Read DAC voltage value (0 - 10V)\n        dacwr:          Write DAC output voltage value (0..10V)\n        odrd:           Read open drain pwm value (0 - 100%)\n        odwr:           Write the open drain output pwm value (0..100%)\n        adcrd:          Read ADC input voltage value (0 - 10V)\n                        Warning: For this measurements to be valid place the jumper in position \"0-10V\"\n        r1krd:          Read resistor input  value (1k) in kiloOhms, Warning: You must palce the jumper in position \"1K\".\n                        Return 30kOhm for resistor out of range\n        r10krd:         Read resistor input  value (10k) in kiloOhms, Warning: You must palce the jumper in position \"10K                                                                                                                    \".\n                        Return 30kOhm for resistor out of range\n        rthrd:          Read thermistor input  resistance value in kiloOhms, Return 60kOhm for resistor out of range\n        pwmrd:          Read PWM input\n        adccal:         Calibrate one ADC channel, the calibration must be done in 2 points at min 5V apart\n        adccalrst:      Reset the calibration for one ADC channel\n        daccal:         Calibrate one DAC channel, the calibration must be done in 2 points at min 5V apart\n        daccalrst:      Reset calibration for one DAC channel\n        wdtr:           Reload the watchdog timer and enable the watchdog if is disabled\n        wdtpwr:         Set the watchdog period in seconds,\n                        reload command must be issue in this interval to prevent Raspberry Pi power off\n        wdtprd:         Get the watchdog period in seconds,\n                        reload command must be issue in this interval to prevent Raspberry Pi power off\n        wdtipwr:        Set the watchdog initial period in seconds,\n                        This period is loaded after power cycle, giving Raspberry time to boot\n        wdtiprd:        Get the watchdog initial period in seconds.\n                        This period is loaded after power cycle, giving Raspberry time to boot\n        wdtopwr:        Set the watchdog off period in seconds (max 48 days).\n                        This is the time that watchdog mantain Raspberry turned off\n        wdtoprd:        Get the watchdog off period in seconds (max 48 days)\n                        This is the time that watchdog mantain Raspberry turned off\n        rtcrd:          Get the internal RTC  date and time(mm/dd/yy hh:mm:ss)\ntcbrd:          Get the internal RTC backup battery voltage\n        rtcwr:          Set the internal RTC  date and time(mm/dd/yy hh:mm:ss)\n        bckbrd:         Get the backup battery voltage\n        pwrsrd:         Get the power supply status\n",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "55bf88b67f8bbb11",
        "type": "trigger",
        "z": "84006830c8bcb952",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 210,
        "y": 700,
        "wires": [
            [
                "af931b78f4c542f4"
            ]
        ]
    },
    {
        "id": "2a9fd6943280c4a6",
        "type": "function",
        "z": "84006830c8bcb952",
        "name": "",
        "func": "\nvar msg1 = {};\nmsg1.topic = \"system/firmwareHat\",\nmsg1.payload = msg.payload.split(\",\")[0].trim().split(\" \")[2];\nmsg1.title = \"IO Hat Firmware Version\";\n\nvar msg2 = {};\nmsg2.topic = \"system/tCpuHat\",\nmsg2.payload = msg.payload.split(\",\")[1].trim().split(\" \")[2];\nmsg2.units=\"°C\";\nmsg2.title = \"IO Hat CPU Temperature\";\n\nvar msg3 = {};\nmsg3.topic = \"system/vPowerHat\",\nmsg3.payload = msg.payload.split(\",\")[2].trim().split(\" \")[2];\nmsg3.units=\"volts\";\nmsg3.title = \"IO Hat Power Supply Voltage\";\n\n\nvar msg4 = {};\nmsg4.topic = \"system/vBatteryHat\",\nmsg4.payload = msg.payload.split(\",\")[3].trim().split(\" \")[1];\nmsg4.units=\"volts\";\nmsg4.title = \"IO Hat Battery Voltage\";\n\nreturn [msg1, msg2,msg3,msg4];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 720,
        "wires": [
            [
                "924d721552417b09"
            ],
            [
                "924d721552417b09"
            ],
            [
                "924d721552417b09"
            ],
            [
                "924d721552417b09"
            ]
        ]
    },
    {
        "id": "c52dea4958c2f7ea",
        "type": "link out",
        "z": "84006830c8bcb952",
        "name": "",
        "links": [
            "72fc070f.39dd8",
            "8fa4fe935443d751"
        ],
        "x": 895,
        "y": 720,
        "wires": []
    },
    {
        "id": "8fa4fe935443d751",
        "type": "link in",
        "z": "84006830c8bcb952",
        "name": "",
        "links": [
            "c52dea4958c2f7ea",
            "110e496a3bb255d1"
        ],
        "x": 335,
        "y": 80,
        "wires": [
            [
                "b6959bf4e58a1e68"
            ]
        ]
    },
    {
        "id": "af931b78f4c542f4",
        "type": "exec",
        "z": "84006830c8bcb952",
        "command": "bash /home/pi/node-hiu/sq2.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "sq2.sh",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "1b5e86a12751b53b",
                "2a9fd6943280c4a6"
            ],
            [],
            []
        ]
    },
    {
        "id": "1b5e86a12751b53b",
        "type": "debug",
        "z": "84006830c8bcb952",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 660,
        "wires": []
    },
    {
        "id": "e0fa2b3ea948c3b1",
        "type": "template",
        "z": "84006830c8bcb952",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ti board\nti wdtr",
        "output": "str",
        "x": 580,
        "y": 280,
        "wires": [
            [
                "20e34a519f842d30"
            ]
        ]
    },
    {
        "id": "219da053d1038c17",
        "type": "inject",
        "z": "84006830c8bcb952",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "e0fa2b3ea948c3b1"
            ]
        ]
    },
    {
        "id": "20e34a519f842d30",
        "type": "file",
        "z": "84006830c8bcb952",
        "name": "",
        "filename": "/home/pi/node-hiu/sq2.sh",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 840,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5ca1d8af90711e39",
        "type": "exec",
        "z": "84006830c8bcb952",
        "command": "bash /home/pi/node-hiu/sq.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "sq.sh",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "d1f59dc5791c17ae",
                "30d26cbf862b5ba8"
            ],
            [],
            [
                "6a7990ce2d387426",
                "a0afa9adc6471a24"
            ]
        ]
    },
    {
        "id": "d1f59dc5791c17ae",
        "type": "debug",
        "z": "84006830c8bcb952",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 480,
        "wires": []
    },
    {
        "id": "b6959bf4e58a1e68",
        "type": "debug",
        "z": "84006830c8bcb952",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "924d721552417b09",
        "type": "subflow:d1f3d002.63ee48",
        "z": "84006830c8bcb952",
        "name": "",
        "x": 780,
        "y": 720,
        "wires": [
            [
                "c52dea4958c2f7ea"
            ]
        ]
    },
    {
        "id": "150655e8e9a100d0",
        "type": "inject",
        "z": "84006830c8bcb952",
        "name": "PORT SETUP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "[{\"portId\":\"TH1\",\"block\":\"TH1\",\"channel\":\"1\",\"name\":\"TH1 Signal\",\"figure\":\"Input\",\"portColor\":\"#00ff00\",\"wiredTo\":\"ntcr23\",\"wiredToPort\":\"temperature\",\"signalType\":\"NTC10K\",\"topicDevice\":\"DHW\",\"topicKey\":\"tCo\",\"mapUnits\":\"kΩ to °C\",\"map\":\"[[97.006,-20],[72.911,-15],[72.911,-10],[42.317,-5],[32.651,0],[25.395,5],[19.903,10],[15.714,15],[12.493,20],[10,25],[8.056,30],[6.53,35],[5.325,40],[4.367,45],[3.601,50],[2.985,55],[2.467,60],[2.082,65],[1.752,70],[1.256,80],[0.916,90],[0.678,100],[0.51,110],[0.388,120]]\"},{\"portId\":\"D1\",\"block\":\"\",\"channel\":\"1\",\"name\":\"Digital Input D1\",\"figure\":\"Input\",\"portColor\":\"#00ffff\",\"wiredTo\":\"FS\",\"wiredToPort\":\"pulse\",\"signalType\":\"PULSE\",\"topicDevice\":\"FS\",\"topicKey\":\"pulse\",\"mapUnits\":\"pulse/s to ltr/min\",\"map\":\"[[0,0],[265,30]]\"},{\"portId\":\"D2\",\"block\":\"\",\"channel\":\"2\",\"name\":\"Digital Input D2\",\"figure\":\"Input\",\"portColor\":\"#00ffff\",\"wiredTo\":\"switch\",\"wiredToPort\":\"switch1\",\"signalType\":\"DRY\",\"topicDevice\":\"switch\",\"topicKey\":\"closed\"},{\"portId\":\"P1\",\"block\":\"\",\"channel\":\"1\",\"name\":\"PWM Input P1\",\"figure\":\"Input\",\"portColor\":\"#40aceb\",\"wiredTo\":\"pump\",\"wiredToPort\":\"speed\",\"signalType\":\"PWM\",\"topicDevice\":\"pump\",\"topicKey\":\"speed\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"},{\"portId\":\"P2\",\"block\":\"\",\"channel\":\"2\",\"name\":\"PWM Input P2\",\"figure\":\"Input\",\"portColor\":\"#40aceb\",\"wiredTo\":\"valve4\",\"wiredToPort\":\"position\",\"signalType\":\"PWM\",\"topicDevice\":\"valve4\",\"topicKey\":\"position\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"},{\"portId\":\"OD2\",\"block\":\"OD2\",\"channel\":\"2\",\"name\":\"PWM Output OD2\",\"figure\":\"Output\",\"portColor\":\"#40aceb\",\"wiredTo\":\"valve4\",\"wiredToPort\":\"setpoint\",\"signalType\":\"PWM\",\"topicDevice\":\"valve4\",\"topicKey\":\"setpoint\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"},{\"portId\":\"OD1\",\"block\":\"OD1\",\"channel\":\"1\",\"name\":\"PWM Output OD1\",\"figure\":\"Output\",\"portColor\":\"#40aceb\",\"wiredTo\":\"pump\",\"wiredToPort\":\"setpoint\",\"signalType\":\"PWM\",\"topicDevice\":\"pump\",\"topicKey\":\"setpoint\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"}]",
        "payloadType": "json",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "42d2a39c4b22929d"
            ]
        ]
    },
    {
        "id": "42d2a39c4b22929d",
        "type": "change",
        "z": "84006830c8bcb952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "portSetup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "51517ea490c2e538"
            ]
        ]
    },
    {
        "id": "51517ea490c2e538",
        "type": "function",
        "z": "84006830c8bcb952",
        "name": "",
        "func": "//[{\"portId\":\"TH8\",\"block\":\"TH8\",\"channel\":\"8\",\"name\":\"TH8 Signal\",\"figure\":\"Input\",\"portColor\":\"#00ff00\",\"wiredTo\":\"ntcr23\",\"wiredToPort\":\"temperature\",\"signalType\":\"NTC10K\",\"topicDevice\":\"DHW\",\"topicKey\":\"tCo\",\"mapUnits\":\"kΩ to °C\",\"map\":\"[[97.006,-20],[72.911,-15],[72.911,-10],[42.317,-5],[32.651,0],[25.395,5],[19.903,10],[15.714,15],[12.493,20],[10,25],[8.056,30],[6.53,35],[5.325,40],[4.367,45],[3.601,50],[2.985,55],[2.467,60],[2.082,65],[1.752,70],[1.256,80],[0.916,90],[0.678,100],[0.51,110],[0.388,120]]\"},\n//{\"portId\":\"D1\",\"block\":\"\",\"channel\":\"1\",\"name\":\"Digital Input D1\",\"figure\":\"Input\",\"portColor\":\"#00ffff\",\"wiredTo\":\"FS\",\"wiredToPort\":\"pulse\",\"signalType\":\"PULSE\",\"topicDevice\":\"FS\",\"topicKey\":\"pulse\",\"mapUnits\":\"pulse/s to ltr/min\",\"map\":\"[[0,0],[265,30]]\"},{\"portId\":\"P1\",\"block\":\"\",\"channel\":\"1\",\"name\":\"PWM Input P1\",\"figure\":\"Input\",\"portColor\":\"#40aceb\",\"wiredTo\":\"pump\",\"wiredToPort\":\"speed\",\"signalType\":\"PWM\",\"topicDevice\":\"pump\",\"topicKey\":\"speed\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"},{\"portId\":\"P2\",\"block\":\"\",\"channel\":\"2\",\"name\":\"PWM Input P2\",\"figure\":\"Input\",\"portColor\":\"#40aceb\",\"wiredTo\":\"valve4\",\"wiredToPort\":\"position\",\"signalType\":\"PWM\",\"topicDevice\":\"valve4\",\"topicKey\":\"position\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"},{\"portId\":\"OD2\",\"block\":\"OD2\",\"channel\":\"2\",\"name\":\"PWM Output OD2\",\"figure\":\"Output\",\"portColor\":\"#40aceb\",\"wiredTo\":\"valve4\",\"wiredToPort\":\"setpoint\",\"signalType\":\"PWM\",\"topicDevice\":\"valve4\",\"topicKey\":\"setpoint\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"},{\"portId\":\"OD1\",\"block\":\"OD1\",\"channel\":\"1\",\"name\":\"PWM Output OD1\",\"figure\":\"Output\",\"portColor\":\"#40aceb\",\"wiredTo\":\"pump\",\"wiredToPort\":\"setpoint\",\"signalType\":\"PWM\",\"topicDevice\":\"pump\",\"topicKey\":\"setpoint\",\"mapUnits\":\"% to %\",\"map\":\"[[0,0],[100,100]]\"}]\n\n\n// echo \"rthrd1\",$(ti rthrd 1)\n// echo \"countrd1\",$(ti countrd 1)\n// echo \"pwmrd1\",$(ti pwmrd 1)\n// echo \"pwmrd2\",$(ti pwmrd 2)\n\n\nvar oot=\"\";\nvar pL = msg.payload;\n\nfor (var p in pL) {\n    \n    \n    if (pL[p].portId.substr(0,2)==\"TH\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',rthrd' + pL[p].channel + '\",$(ti rthrd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,1)==\"D\" && pL[p].signalType.substr(0,5)==\"PULSE\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',countrd' + pL[p].channel + '\",$(ti countrd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,1)==\"D\" && pL[p].signalType.substr(0,3)==\"DRY\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',contactrd' + pL[p].channel + '\",$(ti contactrd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,1)==\"P\" && pL[p].signalType.substr(0,3)==\"PWM\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',pwmrd' + pL[p].channel + '\",$(ti pwmrd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,2)==\"IN\" && pL[p].signalType.substr(0,5)==\"NTC1K\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',r1krd' + pL[p].channel + '\",$(ti r1krd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,2)==\"IN\" && pL[p].signalType.substr(0,6)==\"NTC10K\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',r10krd' + pL[p].channel + '\",$(ti r10krd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,2)==\"IN\" && pL[p].signalType.substr(0,5)==\"0-10V\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',adcrd' + pL[p].channel + '\",$(ti adcrd ' + pL[p].channel + ')\\n';\n        \n    } else if (pL[p].portId.substr(0,2)==\"IN\" && pL[p].signalType.substr(0,3)==\"DRY\") {\n        \n        oot += 'echo \"' + pL[p].portId + ',contactrd' + pL[p].channel + '\",$(ti contactrd ' + pL[p].channel + ')\\n';\n        \n    }\n    \n    \n    \n}\n\n\nmsg.payload=oot;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 220,
        "wires": [
            [
                "4c4c1d87a5b11b51",
                "fe37ec1b5970d4a8"
            ]
        ]
    },
    {
        "id": "4c4c1d87a5b11b51",
        "type": "file",
        "z": "84006830c8bcb952",
        "name": "",
        "filename": "/home/pi/node-hiu/sq.sh",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "53313786bb4d47f5",
        "type": "function",
        "z": "84006830c8bcb952",
        "name": "",
        "func": "\n\nfunction uniq(a) {\n    var seen = {};\n    return a.filter(function(item) {\n        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n}\n\n\nvar invar = msg.payload.split(\",\");\n\nvar presult = global.get(\"portSetup\").filter(port => port.portId == invar[0]);\nif (presult.length>0) { \n    \n    var msg1 = {};\n    \n    var readin = parseFloat(invar[2].split(\" \")[0]);\n    \n    \n    \n    msg1.topic = (presult[0].topicDevice?presult[0].topicDevice + \"/\":\"\") + \"dat/\" + (presult[0].topicKey || \"value\"),\n    msg1.payload = readin;\n    msg1.points = 1000;\n    msg1.units = presult[0].mapUnits;\n    msg1.title = (presult[0].topicDevice?presult[0].topicDevice + \" \":\"\") + presult[0].wiredToPort;\n    \n    var msg2 = {};\n    msg2.topic = \"raw/\" + invar[0],\n    msg2.payload = readin;\n    msg2.title = presult[0].name || (\"Raw \" + invar[0]);\n    if (presult[0].mapUnits) { msg2.units = presult[0].mapUnits.split(\" to \")[0];  }\n    \n    var msg3 = { \"payload\":\"ok\"};  // alarm\n    msg3.topic=\"alarm/terminal\" + presult[0].portId;\n    \n    \n    if(presult[0][\"map\"]) {\n     \n        if (presult[0].mapUnits) { msg1.units = presult[0].mapUnits.split(\" to \")[1];  }\n        msg1.payload = \"\";\n        \n        var ntc = JSON.parse(presult[0][\"map\"]);\n        \n        var temp = -999;\n        for (var i = 1; i < ntc.length; i++) { \n            \n            if  (ntc[i][0]==readin) { \n                \n                temp = ntc[i][1];\n                \n                break;\n            }\n            else if  (ntc[i-1][0]==readin) { \n                \n                temp = ntc[i-1][1];\n                \n                break;\n            }\n            else if  ((ntc[i-1][0]<=readin) && (ntc[i][0]>readin)) { \n                \n                temp = ntc[i-1][1] - ((ntc[i][1] - ntc[i-1][1]) * ((readin - ntc[i-1][0]) / (ntc[i-1][0] - ntc[i][0])));\n                \n                break;\n            }\n            else if  ((ntc[i-1][0]>=readin) && (ntc[i][0]<readin)) { \n                \n                temp = ntc[i-1][1] - ((ntc[i][1] - ntc[i-1][1]) * ((readin - ntc[i-1][0]) / (ntc[i-1][0] - ntc[i][0])));\n                \n                break;\n            }\n            \n        }\n        \n        if (temp != -999) {\n            \n            msg1.payload =  temp; //parseInt(temp*100)/100; \n            \n            // if (temp <10) { msg1.payload =  parseInt(temp*100)/100; }\n            // else { msg1.payload =  parseInt(temp*10)/10; }\n            \n            if (presult[0].signalType && (presult[0].signalType.indexOf(\"NTC\")==0) && readin==60) {\n                \n                msg3.payload = \"Out of range\"\n                \n            }\n            \n            \n        } else {\n            \n            msg1 = null;\n            msg3.payload = \"Out of range\"\n        }\n    }\n    \n    \n    var readout = parseInt(parseFloat(msg1.payload)*100)/100; \n    \n    var history = context.get(invar[0]) || [];\n    \n    // if (history.length>5 && history.indexOf(msg1.payload)<0) {  history = [];  }\n    // else if (history.length>1) {\n    //     var uniqh = uniq(history);\n    //     if ((uniqh.length<4) && (history.length<10)) {  \n    //         // slow mode\n    //         msg1=null; \n            \n    //     } else {\n    //     // else if (uniqh.length>0) {   readin = history.reduce((a, b) => a + b, 0) / history.length;  }\n    //         msg1.payload = history.reduce((a, b) => a + b, 0) / history.length; \n    //         msg1.payload =  parseInt(msg1.payload*100)/100; \n    //     }\n    //     if (history.length>9) { history=[msg1.payload]; }\n         \n    // }\n    \n    if (history.indexOf(readout)>-1) {  \n        \n        msg1.payload =  parseInt((history.reduce((a, b) => a + b, 0) / history.length)*100)/100; \n        \n    } //msg1=null;\n    \n    history.push(readout);\n    if (history.length>20) { history.shift(); }\n    context.set(invar[0],history);\n    \n    \n    \n    \n    return [msg1, msg2, msg3];\n      \n}\n\nreturn null;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 540,
        "wires": [
            [
                "0753db300507570e",
                "02995fb4f8ecce8e"
            ],
            [
                "0753db300507570e"
            ],
            [
                "0753db300507570e"
            ]
        ]
    },
    {
        "id": "30d26cbf862b5ba8",
        "type": "split",
        "z": "84006830c8bcb952",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 540,
        "wires": [
            [
                "53313786bb4d47f5"
            ]
        ]
    },
    {
        "id": "110e496a3bb255d1",
        "type": "link out",
        "z": "84006830c8bcb952",
        "name": "",
        "links": [
            "72fc070f.39dd8",
            "8fa4fe935443d751"
        ],
        "x": 1015,
        "y": 540,
        "wires": []
    },
    {
        "id": "0753db300507570e",
        "type": "subflow:d1f3d002.63ee48",
        "z": "84006830c8bcb952",
        "name": "",
        "x": 900,
        "y": 540,
        "wires": [
            [
                "110e496a3bb255d1"
            ]
        ]
    },
    {
        "id": "94c90a14f49676bb",
        "type": "template",
        "z": "84006830c8bcb952",
        "name": "BOARD SETUP",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ti wdtpwr 30\nti edgewr 1 1\nti edgewr 2 1",
        "output": "str",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "86b0b78f2c01f6c1"
            ]
        ]
    },
    {
        "id": "86b0b78f2c01f6c1",
        "type": "file",
        "z": "84006830c8bcb952",
        "name": "",
        "filename": "/home/pi/node-hiu/sqsetup.sh",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 610,
        "y": 360,
        "wires": [
            [
                "b6170ab590659667"
            ]
        ]
    },
    {
        "id": "dcb4462c813399eb",
        "type": "inject",
        "z": "84006830c8bcb952",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "94c90a14f49676bb"
            ]
        ]
    },
    {
        "id": "a011d0cd8e60871b",
        "type": "exec",
        "z": "84006830c8bcb952",
        "command": "bash /home/pi/node-hiu/sqsetup.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1040,
        "y": 360,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b6170ab590659667",
        "type": "trigger",
        "z": "84006830c8bcb952",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "num",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 820,
        "y": 360,
        "wires": [
            [
                "a011d0cd8e60871b"
            ]
        ]
    },
    {
        "id": "36d723f6821a2151",
        "type": "inject",
        "z": "84006830c8bcb952",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 940,
        "wires": [
            [
                "49ad9903cc91bda7"
            ]
        ]
    },
    {
        "id": "49ad9903cc91bda7",
        "type": "function",
        "z": "84006830c8bcb952",
        "name": "",
        "func": "\nvar ana = global.get(\"ntcANA\");\n\nana.ana.reverse();\nana.temp.reverse();\n\nvar oot = [];\n\nfor (var r in ana.ana) {\n    \n    oot.push([ana.ana[r]/1000 , ana.temp[r]]);\n}\n\nmsg.payload = JSON.stringify(oot);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 940,
        "wires": [
            [
                "4f88d0ba69bdc8a4"
            ]
        ]
    },
    {
        "id": "4f88d0ba69bdc8a4",
        "type": "debug",
        "z": "84006830c8bcb952",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 940,
        "wires": []
    },
    {
        "id": "6a7990ce2d387426",
        "type": "link out",
        "z": "84006830c8bcb952",
        "name": "",
        "mode": "link",
        "links": [
            "0632f1bc7ce231b2",
            "38851676a0d913c9"
        ],
        "x": 535,
        "y": 600,
        "wires": []
    },
    {
        "id": "a0afa9adc6471a24",
        "type": "delay",
        "z": "84006830c8bcb952",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 190,
        "y": 640,
        "wires": [
            [
                "55bf88b67f8bbb11"
            ]
        ]
    },
    {
        "id": "02995fb4f8ecce8e",
        "type": "debug",
        "z": "84006830c8bcb952",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 480,
        "wires": []
    },
    {
        "id": "fe37ec1b5970d4a8",
        "type": "debug",
        "z": "84006830c8bcb952",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "6c36270af81fc46c",
        "type": "template",
        "z": "5eef512bbec6c00c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ti odwr 2 0\nti odwr 1 100",
        "output": "str",
        "x": 320,
        "y": 120,
        "wires": [
            [
                "b2e994295cd1398d"
            ]
        ]
    },
    {
        "id": "e47e8085d368995a",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "6c36270af81fc46c"
            ]
        ]
    },
    {
        "id": "b2e994295cd1398d",
        "type": "file",
        "z": "5eef512bbec6c00c",
        "name": "",
        "filename": "/home/pi/node-hiu/sq_all_on.sh",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c717f8a0094aa5bd",
        "type": "template",
        "z": "5eef512bbec6c00c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ti odwr 2 100\nti odwr 1 0",
        "output": "str",
        "x": 320,
        "y": 180,
        "wires": [
            [
                "f92dc105e70eb3fb"
            ]
        ]
    },
    {
        "id": "0562a4da791ebbbd",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "c717f8a0094aa5bd"
            ]
        ]
    },
    {
        "id": "f92dc105e70eb3fb",
        "type": "file",
        "z": "5eef512bbec6c00c",
        "name": "",
        "filename": "/home/pi/node-hiu/sq_all_off.sh",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 530,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4121c19663f1164e",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "bash /home/pi/node-hiu/sq_all_off.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "4bdb5e10c16c899a"
            ],
            [],
            []
        ]
    },
    {
        "id": "4bdb5e10c16c899a",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "94c25b7568ce6a5e",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "4121c19663f1164e"
            ]
        ]
    },
    {
        "id": "97d500fbc9c0da7d",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "bash /home/pi/node-hiu/sq_all_on.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "354ca28ec0a5d815"
            ],
            [],
            []
        ]
    },
    {
        "id": "354ca28ec0a5d815",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "cde671c10eb717c7",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "97d500fbc9c0da7d"
            ]
        ]
    },
    {
        "id": "1ee195a3fe6483eb",
        "type": "ui_button",
        "z": "5eef512bbec6c00c",
        "name": "",
        "group": "960bf2f131a4aebe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "All On",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "97d500fbc9c0da7d"
            ]
        ]
    },
    {
        "id": "3b7677740e91cce5",
        "type": "ui_button",
        "z": "5eef512bbec6c00c",
        "name": "",
        "group": "960bf2f131a4aebe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "All Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "4121c19663f1164e"
            ]
        ]
    },
    {
        "id": "befba9c426ed58f3",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti countrst 8",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0620891086d58d6a",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1020,
        "wires": [
            [
                "befba9c426ed58f3"
            ]
        ]
    },
    {
        "id": "8b6c268c196a9752",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti rs485wr 0 9600 1 0 1",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Release RS485",
        "x": 420,
        "y": 1100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9b33ebd219203484",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "8b6c268c196a9752"
            ]
        ]
    },
    {
        "id": "45aeb26391bf6dd0",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 800,
        "wires": []
    },
    {
        "id": "d57c2c85cfbb6cf1",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 800,
        "wires": [
            [
                "7ccee24d2c7f52af"
            ]
        ]
    },
    {
        "id": "7ccee24d2c7f52af",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti wdtprd",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 800,
        "wires": [
            [
                "45aeb26391bf6dd0"
            ],
            [],
            []
        ]
    },
    {
        "id": "e54ddc2827ad544e",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 940,
        "wires": []
    },
    {
        "id": "28429ca653d800ae",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 940,
        "wires": [
            [
                "85365c915677953c"
            ]
        ]
    },
    {
        "id": "85365c915677953c",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti wdtoprd",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 940,
        "wires": [
            [
                "e54ddc2827ad544e"
            ],
            [],
            []
        ]
    },
    {
        "id": "9afa9defeddd25dc",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 720,
        "wires": []
    },
    {
        "id": "5445cbd954ac0899",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 200,
        "y": 720,
        "wires": [
            [
                "654e1534305d9cab"
            ]
        ]
    },
    {
        "id": "654e1534305d9cab",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti wdtpwr 30",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 720,
        "wires": [
            [
                "9afa9defeddd25dc"
            ],
            [],
            []
        ]
    },
    {
        "id": "4c93a113c1d8d6f2",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 880,
        "wires": []
    },
    {
        "id": "f48394e54bb4bd15",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti wdtiprd",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 880,
        "wires": [
            [
                "4c93a113c1d8d6f2"
            ],
            [],
            []
        ]
    },
    {
        "id": "3f19bd3a744fb60a",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 880,
        "wires": [
            [
                "f48394e54bb4bd15"
            ]
        ]
    },
    {
        "id": "43c0c35d97a89b16",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 580,
        "wires": [
            [
                "c4774092582c3453"
            ]
        ]
    },
    {
        "id": "c4774092582c3453",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti rtcrd",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "d475a0bb44112fb5"
            ],
            [],
            []
        ]
    },
    {
        "id": "d475a0bb44112fb5",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 580,
        "wires": []
    },
    {
        "id": "20e7a936344041ac",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti odwr 1",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1180,
        "y": 300,
        "wires": [
            [
                "73a4155cd9585c77"
            ],
            [],
            []
        ]
    },
    {
        "id": "f54344fd4563477c",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 990,
        "y": 180,
        "wires": [
            [
                "20e7a936344041ac"
            ]
        ]
    },
    {
        "id": "73a4155cd9585c77",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 380,
        "wires": []
    },
    {
        "id": "cec0ba924d538fda",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 990,
        "y": 460,
        "wires": [
            [
                "20e7a936344041ac"
            ]
        ]
    },
    {
        "id": "8d17071e3fef3bac",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "str",
        "x": 990,
        "y": 240,
        "wires": [
            [
                "20e7a936344041ac"
            ]
        ]
    },
    {
        "id": "53380128c91d95fd",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti relwr 1",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1360,
        "y": 580,
        "wires": [
            [
                "28b48e15c925b75b"
            ],
            [],
            []
        ]
    },
    {
        "id": "3d8d855c2222c22d",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 1170,
        "y": 580,
        "wires": [
            [
                "53380128c91d95fd"
            ]
        ]
    },
    {
        "id": "28b48e15c925b75b",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 580,
        "wires": []
    },
    {
        "id": "b3259be3a655fe32",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 1170,
        "y": 520,
        "wires": [
            [
                "53380128c91d95fd"
            ]
        ]
    },
    {
        "id": "cc631e5ba0df074e",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti relwr 2",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1360,
        "y": 740,
        "wires": [
            [
                "82833c788a8a38f5"
            ],
            [],
            []
        ]
    },
    {
        "id": "a28d9f22b9d5ffea",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 1170,
        "y": 740,
        "wires": [
            [
                "cc631e5ba0df074e"
            ]
        ]
    },
    {
        "id": "82833c788a8a38f5",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 740,
        "wires": []
    },
    {
        "id": "1d7985bb32440167",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 1170,
        "y": 680,
        "wires": [
            [
                "cc631e5ba0df074e"
            ]
        ]
    },
    {
        "id": "03b9b577db929930",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 990,
        "y": 300,
        "wires": [
            [
                "20e7a936344041ac"
            ]
        ]
    },
    {
        "id": "29ac7b8a2b208f71",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "str",
        "x": 990,
        "y": 400,
        "wires": [
            [
                "20e7a936344041ac"
            ]
        ]
    },
    {
        "id": "b0c886fcb29a170f",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "55",
        "payloadType": "num",
        "x": 990,
        "y": 340,
        "wires": [
            [
                "20e7a936344041ac"
            ]
        ]
    },
    {
        "id": "6fba205a5876480c",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti odwr 2",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1880,
        "y": 360,
        "wires": [
            [
                "9b882e8fdf11d67c"
            ],
            [],
            []
        ]
    },
    {
        "id": "6dcf7ab124f719b7",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 1690,
        "y": 140,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "f1e656d81c8590d4",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 1690,
        "y": 560,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "2720ab89119117b2",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "str",
        "x": 1690,
        "y": 300,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "df7bde2200def451",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 1690,
        "y": 440,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "74fb74b1e7a67de9",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "str",
        "x": 1690,
        "y": 520,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "5f66323756321ccc",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "55",
        "payloadType": "num",
        "x": 1690,
        "y": 480,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "9b882e8fdf11d67c",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 300,
        "wires": []
    },
    {
        "id": "73c722ef5fec12bc",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "str",
        "x": 1690,
        "y": 260,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "76b2c07fabff05f2",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "str",
        "x": 1690,
        "y": 220,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "1a705fc93004e444",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "str",
        "x": 1690,
        "y": 180,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "54513d54eb39e3ae",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "45",
        "payloadType": "num",
        "x": 1690,
        "y": 400,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "1d727db50c467a2a",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 1690,
        "y": 360,
        "wires": [
            [
                "6fba205a5876480c"
            ]
        ]
    },
    {
        "id": "fe7c5a31d84c4467",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 220,
        "wires": []
    },
    {
        "id": "d3dbf6661af5fc09",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 1170,
        "y": 880,
        "wires": [
            [
                "7e0b322bcb64bede"
            ]
        ]
    },
    {
        "id": "d39ff6cf98f8ac35",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 1170,
        "y": 1020,
        "wires": [
            [
                "7e0b322bcb64bede"
            ]
        ]
    },
    {
        "id": "7e0b322bcb64bede",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti odwr 3",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1360,
        "y": 1060,
        "wires": [
            [
                "b0e7ef67fe909c8b"
            ],
            [],
            []
        ]
    },
    {
        "id": "b0e7ef67fe909c8b",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1a1f1edcb1c9b6d8",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 1170,
        "y": 1260,
        "wires": [
            [
                "1b8d5c070935985a"
            ]
        ]
    },
    {
        "id": "5252c8c9abee3857",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 1170,
        "y": 1340,
        "wires": [
            [
                "1b8d5c070935985a"
            ]
        ]
    },
    {
        "id": "1b8d5c070935985a",
        "type": "exec",
        "z": "5eef512bbec6c00c",
        "command": "ti odwr 4",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1360,
        "y": 1200,
        "wires": [
            [
                "cbf3f4aa8e9b72bb"
            ],
            [],
            []
        ]
    },
    {
        "id": "cbf3f4aa8e9b72bb",
        "type": "debug",
        "z": "5eef512bbec6c00c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3a976892be4cdd5a",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "str",
        "x": 1170,
        "y": 980,
        "wires": [
            [
                "7e0b322bcb64bede"
            ]
        ]
    },
    {
        "id": "32ec604d736e99c8",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "str",
        "x": 970,
        "y": 1200,
        "wires": [
            [
                "07708e5c8366a626"
            ]
        ]
    },
    {
        "id": "7e6a8bcf68f766f7",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "str",
        "x": 1170,
        "y": 920,
        "wires": [
            [
                "7e0b322bcb64bede"
            ]
        ]
    },
    {
        "id": "366b8144fe2f34b0",
        "type": "function",
        "z": "5eef512bbec6c00c",
        "name": "Red/Green Neon",
        "func": "\nvar msg1={}; msg1.payload = 0;\nvar msg2={}; msg2.payload = 0;\n\nvar node = global.get(\"node\");\nvar net = global.get(\"localNetworkId\");\n\nvar state = global.get(\"readings.\"+net+\".\"+node+\".stat.state.value\");\n\nif (state==\"ok\") {  msg1.payload = 100;  }\n    \nelse if (state==\"starting\") {  msg1.payload = 100; msg2.payload = 100; }\n    \nelse {  msg2.payload = 100;  }    \n\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1120,
        "wires": [
            [
                "b6d3558fa1fbf4dd"
            ],
            [
                "c1092df3301790c8"
            ]
        ]
    },
    {
        "id": "e2efccc626f74849",
        "type": "inject",
        "z": "5eef512bbec6c00c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 730,
        "y": 1140,
        "wires": [
            [
                "366b8144fe2f34b0"
            ]
        ]
    },
    {
        "id": "38851676a0d913c9",
        "type": "link in",
        "z": "5eef512bbec6c00c",
        "name": "",
        "links": [
            "6a7990ce2d387426"
        ],
        "x": 795,
        "y": 1080,
        "wires": [
            [
                "366b8144fe2f34b0"
            ]
        ]
    },
    {
        "id": "07708e5c8366a626",
        "type": "delay",
        "z": "5eef512bbec6c00c",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1170,
        "y": 1200,
        "wires": [
            [
                "1b8d5c070935985a"
            ]
        ]
    },
    {
        "id": "b6d3558fa1fbf4dd",
        "type": "subflow:d1f3d002.63ee48",
        "z": "5eef512bbec6c00c",
        "name": "",
        "x": 1180,
        "y": 1100,
        "wires": [
            [
                "7e0b322bcb64bede"
            ]
        ]
    },
    {
        "id": "c1092df3301790c8",
        "type": "subflow:d1f3d002.63ee48",
        "z": "5eef512bbec6c00c",
        "name": "",
        "x": 1180,
        "y": 1140,
        "wires": [
            [
                "07708e5c8366a626"
            ]
        ]
    },
    {
        "id": "61664d917559a982",
        "type": "inject",
        "z": "d74fbbb92887d522",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "37a0646d73ccea39"
            ]
        ]
    },
    {
        "id": "37a0646d73ccea39",
        "type": "exec",
        "z": "d74fbbb92887d522",
        "command": " sudo /home/pi/mlx90640-library/examples/rawrgb",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "27990d10a35332bd",
                "383d8165ed79a858"
            ],
            [],
            []
        ]
    },
    {
        "id": "27990d10a35332bd",
        "type": "debug",
        "z": "d74fbbb92887d522",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 280,
        "wires": []
    },
    {
        "id": "30224b5ab3d2f704",
        "type": "ui_heat_map",
        "z": "d74fbbb92887d522",
        "group": "a1ac88f20d07cec2",
        "order": 0,
        "width": "6",
        "height": "7",
        "name": "",
        "rows": "32",
        "columns": "24",
        "minMax": true,
        "minimumValue": 0,
        "maximumValue": "100",
        "backgroundType": "color",
        "backgroundColor": "#ffffff",
        "image": "never",
        "radius": "25",
        "opacity": "0.6",
        "blur": "0.8",
        "showValues": false,
        "gridType": "none",
        "valuesDecimals": 0,
        "showLegend": false,
        "legendType": "none",
        "legendDecimals": 0,
        "legendCount": 2,
        "x": 900,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a0cbad37a2519760",
        "type": "debug",
        "z": "d74fbbb92887d522",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 360,
        "wires": []
    },
    {
        "id": "383d8165ed79a858",
        "type": "function",
        "z": "d74fbbb92887d522",
        "name": "function 3",
        "func": "var buff = msg.payload;\n\nvar oot = [];\nvar cnt = 0;\n\nfor (let rown = 0; rown < 24; rown++) {\n    for (let coln = 0; coln < 32; coln++) {\n\n        var i = ((23-rown) * 32) + coln;\n        //var hexToDecimal = hex => parseInt(hex, 16);\n\n        var cv = (255 * 255 * msg.payload[3 * i]) + (255 * msg.payload[(3 * i) + 1]) + (1 * msg.payload[(3 * i) + 2])\n        \n        cv = parseInt(cv / 165813.75);\n        // oot.push(255 * 255 * msg.payload);\n        // oot.push(255 * msg.payload[i+1]);\n        // oot.push(msg.payload[i+2]);\n        oot.push(cv);\n\n    }\n}\n   \n\nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "a0cbad37a2519760",
                "30224b5ab3d2f704"
            ]
        ]
    },
    {
        "id": "821523b0373c0e76",
        "type": "inject",
        "z": "d74fbbb92887d522",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 660,
        "wires": [
            [
                "970404cf152128fd"
            ]
        ]
    },
    {
        "id": "970404cf152128fd",
        "type": "exec",
        "z": "d74fbbb92887d522",
        "d": true,
        "command": " sudo /home/pi/mlx90640-library1/examples/rawrgb",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "17eb51422544d33e",
                "c8cbf6769fc6ef46"
            ],
            [],
            []
        ]
    },
    {
        "id": "17eb51422544d33e",
        "type": "debug",
        "z": "d74fbbb92887d522",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "5cc828d21e4bc533",
        "type": "debug",
        "z": "d74fbbb92887d522",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 580,
        "wires": []
    },
    {
        "id": "c8cbf6769fc6ef46",
        "type": "function",
        "z": "d74fbbb92887d522",
        "name": "function 4",
        "func": "// for(int y = 0; y < 24; y++){\n//     for(int x = 0; x < 32; x++){\n//         float val = mlx90640To[32 * (23-y) + x];\n//         put_pixel_false_colour(image, x, y, val);\n//     }\n// }\n\nvar oot = [];\nvar cnt = 0;\n\nfor (let rown = 0; rown < 24; rown++) {\n    for (let coln = 0; coln < 32; coln++) {\n\n        var val = msg.payload[32 * (23 - rown) + coln];\n\n        // var i = ((23-rown) * 32) + coln;\n        // //var hexToDecimal = hex => parseInt(hex, 16);\n\n        // var cv = (255 * 255 * msg.payload[3 * i]) + (255 * msg.payload[(3 * i) + 1]) + (1 * msg.payload[(3 * i) + 2])\n        \n        // cv = parseInt(cv / 165813.75);\n        // // oot.push(255 * 255 * msg.payload);\n        // // oot.push(255 * msg.payload[i+1]);\n        // // oot.push(msg.payload[i+2]);\n        // oot.push(cv);\n        oot.push(val);\n\n    }\n}\n   \n\nmsg.payload = oot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 580,
        "wires": [
            [
                "5cc828d21e4bc533"
            ]
        ]
    },
    {
        "id": "19182344.741c9d",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "",
        "func": "//if(Buffer.from(msg.payload, 'ascii')[1]!==3) { return null; }\n\nfunction hex2bin(hex){\n    return (\"00000000\" + (parseInt(hex)).toString(2)).substr(-8);\n}\n\nfunction dec2bin(dec){\n  return (dec >>> 0).toString(2);\n}\n\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128)\n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n\nvar msg2 = { \"payload\": Buffer.from(msg.payload, 'ascii') };\n\nmsg.address = msg.payload[0];\n//msg.register = (256 * msg.payload[2]) + msg.payload[3];\nmsg.register = flow.get(\"curreg\");\n\n\nvar minfo = flow.get(\"registers.r\" + msg.register) || null;\nvar dinfo = flow.get(\"devices.\" + msg.address) || null;\n\nif (!minfo) { return null; }\nif (!dinfo) { return null; }  \n\nflow.set(\"modbusIn\",\"xxx\");\n\n\nif (minfo.datatype==\"bits\") {\n    \n    var oot = {};\n    var bits = minfo.items.split(\",\");\n    var bc=15;\n    for (var bit in bits) {\n    \n        var item = {};\n        item.payload = (256 * msg.payload[3]) + msg.payload[4];        \n        item.payload =   (\"00000000000000000\" + dec2bin(item.payload)).substr(-16);\n        item.payload =  item.payload.substr(bc,1);\n        \n        item.topic = dinfo.device + \"/\" + bits[bit].replace(\".\",\"/\");\n        \n        if (minfo[\"units\"]) { item.units = minfo[\"units\"]; }\n        item.title = (bits[bit].split(\".\")[1]?  bits[bit].split(\".\")[1]:bits[bit]) + \" [Modbus \" + msg.register + \", bit \" + bit + \"]\"; \n\n        if (minfo[\"title\"]) { item.title = minfo[\"title\"] + \", \" + item.title; }\n\n        if (minfo[\"values\"]) {\n            \n            if (minfo[\"values\"][15-bc]) {\n                if (minfo[\"values\"][15-bc][\"\" + item.payload]) { item.payload = minfo[\"values\"][15-bc][\"\" + item.payload]; }\n            }\n        }\n\n\n        \n        oot[item.topic] = item;\n        \n        bc=bc-1;\n\n    }\n    msg.payload = oot;\n    \n    return [null,msg];\n    \n    \n} \n\nelse if (minfo.datatype == \"IEEE754\") {\n\n    msg.payload = String.fromCharCode(msg.payload[3]) + String.fromCharCode(msg.payload[4]) + String.fromCharCode(msg.payload[5]) + String.fromCharCode(msg.payload[6]);\n    msg.payload = Buffer.from(msg.payload, 'ascii');\n\n    \n    let intValue;\n    // if (typeof msg.payload === \"number\") {\n    //     intValue = msg.payload;\n    // } else if (typeof msg.payload === \"string\") {\n    //     intValue = Number(msg.payload);\n    // } else if (msg.payload.length == 4) {\n        // four byte array or buffer\n        intValue = (((((msg.payload[0] << 8) + msg.payload[1]) << 8) + msg.payload[2]) << 8) + msg.payload[3];\n    // } else {\n    //     node.warn(\"Unrecognised payload type or length\");\n    // }\n\n    msg.payload = Int2Float32(intValue);\n        \n\n    msg.topic = dinfo.device + \"/\" + minfo[\"reading\"].replace(\".\", \"/\");\n\n\n\n    if (minfo[\"units\"]) { msg.units = minfo[\"units\"]; }\n    //if (minfo[\"title\"]) { msg.title = minfo[\"title\"]; }\n\n\n    if (minfo[\"title\"]) { msg.title = minfo[\"title\"] + \" [Modbus \" + msg.register + \"]\"; }\n    else { msg.title = (minfo[\"reading\"].split(\".\")[1] ? minfo[\"reading\"].split(\".\")[1] : minfo[\"reading\"]) + \" [Modbus \" + msg.register + \"]\"; }\n\n    return [msg, null];\n\n}\n\nelse {\n    \n   \n           \n    msg.payload = (256 * msg.payload[3]) + msg.payload[4];        \n    msg.payload =  msg.payload / parseFloat(minfo[\"multiplier\"] || 1);\n\n    msg.topic = dinfo.device + \"/\" + minfo[\"reading\"].replace(\".\",\"/\");\n\n\n    if (minfo[\"values\"]) {\n        \n        if (minfo[\"values\"]==\"alarmCodes\") { \n            \n            var ac = flow.get(\"alarmCodes\");\n            if (ac[\"\" + msg.payload]) { msg.payload = ac[\"\" + msg.payload]; }\n        }\n        \n        else if (minfo[\"values\"][\"\" + msg.payload]) { msg.payload = minfo[\"values\"][\"\" + msg.payload]; }\n    }\n\n    if (minfo[\"units\"]) { msg.units = minfo[\"units\"]; }\n    //if (minfo[\"title\"]) { msg.title = minfo[\"title\"]; }\n    \n    \n    if (minfo[\"title\"]) { msg.title = minfo[\"title\"] + \" [Modbus \" + msg.register + \"]\"; }\n    else  { msg.title = (minfo[\"reading\"].split(\".\")[1]?  minfo[\"reading\"].split(\".\")[1] : minfo[\"reading\"]) + \" [Modbus \" + msg.register + \"]\"; }\n\n    return [msg,null];\n    \n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 760,
        "wires": [
            [
                "dc3ca7c5.e94698",
                "86708b96.ef5ad8",
                "5e07fd48.7736c4"
            ],
            [
                "3e19cbf3.6791d4",
                "5ab178a1.1cde28",
                "86708b96.ef5ad8"
            ]
        ]
    },
    {
        "id": "dc3ca7c5.e94698",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1070,
        "y": 640,
        "wires": []
    },
    {
        "id": "2f4d21d5.a442be",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "Modbus",
        "func": "// http://www.simplymodbus.ca/FC03.htm\n//11 03 006B 0003 7687\n// 11 03 06 AE41 5652 4340 49AD\n\n// uses address 17 as default.\n\n//var offs = 0;\n//if  (msg.payload[0] === 0) { offs = 1; }\nif (!msg.payload) { msg.payload={}; }\n\nvar address = msg.payload.address || msg.address ||8;\nvar fc = msg.payload.fc || msg.fc ;\nvar register = msg.payload.register || msg.register || 1;\nflow.set(\"curreg\", register);\nflow.set(\"fc\", fc);\n\n//register = register - 1;\n\nvar rlength = msg.payload.rlength || msg.rlength || 1;\n\nvar r1 = Math.floor(register / 256);\nvar r2 = register % 256;\n\n\n\n\nvar targetv = msg.targetv; //999;\n\n\nif (fc != 3 && fc != 6) { return null; }\n\nflow.set(\"modbusIn\",\"\");\n\n//targetv = global.get(\"modbus.\"+register+\".value\") || 0;\n\n//targetv = parseInt(global.get(\"modbus.\"+register+\".multiply\") || 1) * targetv;\n\n\nfunction crc16(buffer) {\n    var crc = 0xFFFF;\n    var odd;\n\n    for (var i = 0; i < buffer.length; i++) {\n        crc = crc ^ buffer[i];\n\n        for (var j = 0; j < 8; j++) {\n            odd = crc & 0x0001;\n            crc = crc >> 1;\n            if (odd) {\n                crc = crc ^ 0xA001;\n            }\n        }\n    }\n\n    crc  = \"0000\" + crc.toString(16);\n    crc = crc.substr(-4);\n\n    return crc;\n}\n\nvar tosend = \"\";\nvar crcString =\"\";\nvar msg2={};\n \nif (fc == 3) {   // read\n\n    \n    tosend = String.fromCharCode(address) + String.fromCharCode(3);\n    tosend += String.fromCharCode(r1) + String.fromCharCode(r2);\n    tosend += String.fromCharCode(0) + String.fromCharCode(rlength);\n    \n    crcString = crc16(Buffer.from(tosend, 'ascii'));\n    tosend += String.fromCharCode(parseInt(crcString.substr(2,2),16)) + String.fromCharCode(parseInt(crcString.substr(0,2),16)) ;\n    \n    msg.payload  = Buffer.from(tosend, 'ascii');\n    \n    tosend = \"-\" + tosend;\n    \n    msg2.payload  = Buffer.from(tosend, 'ascii');\n    \n    \n    return [msg,msg2];\n\n} else if (fc == 6 ) {    // write\n\n\n    tosend = String.fromCharCode(address) + String.fromCharCode(6);\n    \n    tosend += String.fromCharCode(r1) + String.fromCharCode(r2);\n    \n    targetv = parseInt(targetv) ;\n    var hexStringValue  = \"0000\" + targetv.toString(16);\n    hexStringValue = hexStringValue.substr(-4);\n    \n    \n    tosend += String.fromCharCode(parseInt(hexStringValue.substr(0,2),16)) + String.fromCharCode(parseInt(hexStringValue.substr(2,2),16)) ;\n    \n    \n    msg.payload  = Buffer.from(tosend, 'ascii');\n    \n    crcString = crc16(msg.payload);\n   \n    tosend += String.fromCharCode(parseInt(crcString.substr(2,2),16)) + String.fromCharCode(parseInt(crcString.substr(0,2),16)) ;\n   \n       \n    msg.payload  = Buffer.from(tosend, 'ascii');\n    tosend = \"-\" + tosend;\n    msg2.payload  = Buffer.from(tosend, 'ascii');\n    \n    \n    return [msg,msg2];\n\n} \n\n\n",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "e0f88c79.9f4af",
                "7cf5ec60.b4aa74",
                "748c3615.f4aed8"
            ],
            []
        ]
    },
    {
        "id": "5175b544.b7200c",
        "type": "serial in",
        "z": "9f18bf08.c2a65",
        "name": "",
        "serial": "b8be9e6d.b7861",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "38612c3b.f919e4",
                "19182344.741c9d"
            ]
        ]
    },
    {
        "id": "748c3615.f4aed8",
        "type": "serial out",
        "z": "9f18bf08.c2a65",
        "name": "",
        "serial": "b8be9e6d.b7861",
        "x": 1210,
        "y": 380,
        "wires": []
    },
    {
        "id": "38612c3b.f919e4",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 680,
        "wires": []
    },
    {
        "id": "7cf5ec60.b4aa74",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1210,
        "y": 340,
        "wires": []
    },
    {
        "id": "6cfb0711.4da528",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "registers",
        "payloadType": "flow",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "329d854f.d78aca"
            ]
        ]
    },
    {
        "id": "329d854f.d78aca",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "",
        "func": "\nvar oot = [];\n\nfor (var r in flow.get(\"registers\")) {\n    for (var d in flow.get(\"devices\")) {\n    \n    \n        var item = {};\n        item.fc = 3;\n        item.address = flow.get(\"devices.\"+d+\".address\");\n        item.register = flow.get(\"registers.\"+r+\".register\");\n        item.rlength = 1;\n\n        oot.push(item);\n        \n    }\n    \n}\n\nmsg.payload = oot;\n\nflow.set(\"msglist\",[]);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "d3419296.35733"
            ]
        ]
    },
    {
        "id": "bef71e0f.deefb",
        "type": "split",
        "z": "9f18bf08.c2a65",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "17020088.5d3acf"
            ]
        ]
    },
    {
        "id": "2a6e4f4c.deb5d",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "ed2532f3.8b2eb",
        "type": "link out",
        "z": "9f18bf08.c2a65",
        "name": "",
        "links": [
            "72fc070f.39dd8"
        ],
        "x": 1495,
        "y": 680,
        "wires": []
    },
    {
        "id": "3e19cbf3.6791d4",
        "type": "split",
        "z": "9f18bf08.c2a65",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 840,
        "wires": [
            [
                "72c274fa.6b8f9c"
            ]
        ]
    },
    {
        "id": "349371d0.2b2f3e",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1370,
        "y": 840,
        "wires": []
    },
    {
        "id": "5ab178a1.1cde28",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1070,
        "y": 800,
        "wires": []
    },
    {
        "id": "203b17cc.280718",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1510,
        "y": 780,
        "wires": []
    },
    {
        "id": "14e7567b.06d12a",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "34 - set PIR delay to 60s",
        "func": "\nmsg.fc = 6;\nmsg.address = 1;\nmsg.register = 34;\nmsg.rlength = 1;\n\nflow.set(\"multiply\", 1);\nflow.set(\"rtopic\", \"test\");\n\n\nmsg.targetv = 60;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 560,
        "wires": [
            [
                "33ad8fe7.e6b4"
            ]
        ]
    },
    {
        "id": "78197e95.d9a76",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "14e7567b.06d12a"
            ]
        ]
    },
    {
        "id": "10d76ef9.420971",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "Read Key Registers",
        "func": "\n\nvar oot = [];\n\n    for (var d in flow.get(\"devices\")) {\n    \n    \n        var item = {};\n        item.fc = 3;\n        item.address = flow.get(\"devices.\"+d+\".address\");\n        item.register = 11;\n        item.rlength = 1;\n\n        oot.push(item);\n        \n        \n        \n        item = {};\n        item.fc = 3;\n        item.address = flow.get(\"devices.\"+d+\".address\");\n        item.register = 12;\n        item.rlength = 1;\n\n        oot.push(item);\n        \n   \n        item = {};\n        item.fc = 3;\n        item.address = flow.get(\"devices.\"+d+\".address\");\n        item.register = 8;\n        item.rlength = 1;\n\n        oot.push(item);\n        \n        \n    }\n    \n\n\nmsg.payload = oot;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 320,
        "wires": [
            [
                "bef71e0f.deefb"
            ]
        ]
    },
    {
        "id": "446f5a59.fe8d44",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "10d76ef9.420971"
            ]
        ]
    },
    {
        "id": "17020088.5d3acf",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "SHIFT",
        "func": "\nvar msglist=flow.get(\"msglist\") || [];\n\n//if (msglist.length> 100) { msglist = []; }\n    \nif (msg.payload == \"next\") { \n    \n    if (!msglist[0]) { return null; }\n    \n    if (flow.get(\"modbusIn\")===\"\") { return null; }\n    \n    msg = msglist[0];\n    msglist.shift();\n    flow.set(\"msglist\",msglist);\n    return msg;\n}\n\nelse {   \n    \n    msglist.push(msg); \n    flow.set(\"msglist\",msglist);\n    return null;\n    \n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 380,
        "wires": [
            [
                "2f4d21d5.a442be"
            ]
        ]
    },
    {
        "id": "5a484812.f02ea8",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "next",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "next",
        "payloadType": "str",
        "x": 610,
        "y": 400,
        "wires": [
            [
                "17020088.5d3acf"
            ]
        ]
    },
    {
        "id": "86708b96.ef5ad8",
        "type": "link out",
        "z": "9f18bf08.c2a65",
        "name": "",
        "links": [
            "c4e46a82.1c9e7",
            "7518a87f.5d7068"
        ],
        "x": 1015,
        "y": 760,
        "wires": []
    },
    {
        "id": "e0f88c79.9f4af",
        "type": "trigger",
        "z": "9f18bf08.c2a65",
        "name": "",
        "op1": "reading",
        "op2": "done",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1200,
        "y": 460,
        "wires": [
            [
                "aa894598.5858c8"
            ]
        ]
    },
    {
        "id": "aa894598.5858c8",
        "type": "change",
        "z": "9f18bf08.c2a65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "modbusIn",
                "pt": "flow",
                "to": "xxx",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "7518a87f.5d7068",
        "type": "link in",
        "z": "9f18bf08.c2a65",
        "name": "",
        "links": [
            "86708b96.ef5ad8"
        ],
        "x": 415,
        "y": 440,
        "wires": [
            [
                "658bad8c214b886f"
            ]
        ]
    },
    {
        "id": "e857ae6f.a401",
        "type": "change",
        "z": "9f18bf08.c2a65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "next",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 440,
        "wires": [
            [
                "17020088.5d3acf"
            ]
        ]
    },
    {
        "id": "c8c036ab.563c08",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "e0f88c79.9f4af"
            ]
        ]
    },
    {
        "id": "85deb34b.0c993",
        "type": "link in",
        "z": "9f18bf08.c2a65",
        "name": "",
        "links": [
            "c330631c.9a504",
            "2db0089.690c2f8",
            "be5ca099.80857",
            "5dbf074d.dd7078",
            "315cd92.2bca026"
        ],
        "x": 635,
        "y": 360,
        "wires": [
            [
                "17020088.5d3acf"
            ]
        ]
    },
    {
        "id": "c330631c.9a504",
        "type": "link out",
        "z": "9f18bf08.c2a65",
        "name": "",
        "links": [
            "85deb34b.0c993",
            "479e65f4.abc6cc"
        ],
        "x": 815,
        "y": 560,
        "wires": []
    },
    {
        "id": "72c274fa.6b8f9c",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "",
        "func": "msg= msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 840,
        "wires": [
            [
                "349371d0.2b2f3e",
                "e14c6575.623d68"
            ]
        ]
    },
    {
        "id": "e14c6575.623d68",
        "type": "subflow:b2d492ed.c4def",
        "z": "9f18bf08.c2a65",
        "name": "",
        "x": 1280,
        "y": 760,
        "wires": [
            [
                "ed2532f3.8b2eb",
                "203b17cc.280718"
            ]
        ]
    },
    {
        "id": "33ad8fe7.e6b4",
        "type": "change",
        "z": "9f18bf08.c2a65",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "msglist",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 560,
        "wires": [
            [
                "c330631c.9a504"
            ]
        ]
    },
    {
        "id": "2e03727d.2ee90e",
        "type": "delay",
        "z": "9f18bf08.c2a65",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 240,
        "wires": [
            [
                "17020088.5d3acf"
            ]
        ]
    },
    {
        "id": "d3419296.35733",
        "type": "split",
        "z": "9f18bf08.c2a65",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "2e03727d.2ee90e",
                "2a6e4f4c.deb5d",
                "17020088.5d3acf"
            ]
        ]
    },
    {
        "id": "655578e3.f19378",
        "type": "change",
        "z": "9f18bf08.c2a65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "points",
                "pt": "msg",
                "to": "5000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 720,
        "wires": [
            [
                "ed2532f3.8b2eb"
            ]
        ]
    },
    {
        "id": "5e07fd48.7736c4",
        "type": "switch",
        "z": "9f18bf08.c2a65",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "AlarmCode",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "WarningCode",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Position",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1050,
        "y": 700,
        "wires": [
            [
                "68ad79cd.24fde8",
                "ed2532f3.8b2eb"
            ],
            [
                "ed2532f3.8b2eb"
            ],
            [
                "655578e3.f19378"
            ],
            [
                "e14c6575.623d68"
            ]
        ]
    },
    {
        "id": "6933c8e2.e56078",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "REGISTERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "[{\"register\":\"8\",\"reading\":\"dat.co2\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"units\":\"ppm\"},{\"register\":\"11\",\"reading\":\"dat.humidity\",\"multiplier\":\"10\",\"datatype\":\"int16\",\"units\":\"%\"},{\"register\":\"12\",\"reading\":\"dat.temperature\",\"multiplier\":\"100\",\"datatype\":\"int16\",\"units\":\"°C\"},{\"register\":\"15\",\"reading\":\"dat.pirStatus\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"values\":{\"65534\":0,\"65535\":1}},{\"register\":\"28\",\"reading\":\"dat.setpoint\",\"multiplier\":\"10\",\"datatype\":\"int16\",\"units\":\"%\"}]",
        "payloadType": "json",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "78fd59e2e12cef4c"
            ]
        ]
    },
    {
        "id": "95c42acc.304aa8",
        "type": "split",
        "z": "9f18bf08.c2a65",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "29e989ab.124226"
            ]
        ]
    },
    {
        "id": "29e989ab.124226",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "Store Registers",
        "func": "\nvar rin = msg.payload;\nif (rin.register<1) { return null; } \n\n\nvar v = global.get(\"readings.\" + rin.reading + \".value\") || 0\nrin[\"value\"] = v;\n\n\n\nflow.set(\"registers.r\" + rin.register, rin);\n\nmsg.payload = flow.get(\"registers\") ;\n    \nreturn msg;\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6d5c01a3.769db",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "DEVICES",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "[{\"address\":\"1\",\"device\":\"sontay1\"}]",
        "payloadType": "json",
        "x": 1080,
        "y": 60,
        "wires": [
            [
                "d0c0d129.1a35f"
            ]
        ]
    },
    {
        "id": "d0c0d129.1a35f",
        "type": "split",
        "z": "9f18bf08.c2a65",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1210,
        "y": 60,
        "wires": [
            [
                "47f84ff5.818ab"
            ]
        ]
    },
    {
        "id": "47f84ff5.818ab",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "Store Devices",
        "func": "\nvar rin = msg.payload;\nif (rin.address<1) { return null; } \n\n\nflow.set(\"devices.\" + rin.address, rin);\n\n\n    \nreturn msg;\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b7ec2cb5.c3f62",
        "type": "link in",
        "z": "9f18bf08.c2a65",
        "name": "",
        "links": [
            "1f335ee0.7b9a41",
            "b09805d5.754898"
        ],
        "x": 195,
        "y": 500,
        "wires": [
            [
                "728528de.3f5da8"
            ]
        ]
    },
    {
        "id": "68ad79cd.24fde8",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "",
        "func": "msg.topic = msg.topic.replace(\"/stat/\",\"/alarm/\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 660,
        "wires": [
            [
                "ed2532f3.8b2eb"
            ]
        ]
    },
    {
        "id": "728528de.3f5da8",
        "type": "delay",
        "z": "9f18bf08.c2a65",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 500,
        "wires": [
            [
                "33ad8fe7.e6b4"
            ]
        ]
    },
    {
        "id": "894638fd51217481",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "REGISTERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "[{\"register\":\"1\",\"reading\":\"dat.setpoint\",\"multiplier\":\"100\",\"datatype\":\"int16\"},{\"register\":\"2\",\"reading\":\"dat.overrideControl\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"values\":{\"0\":\"none\",\"1\":\"open\",\"2\":\"close\",\"3\":\"min\",\"4\":\"mid\",\"5\":\"max\"}},{\"register\":\"3\",\"reading\":\"dat.command\",\"multiplier\":\"1\",\"datatype\":\"int16\"},{\"register\":\"4\",\"reading\":\"dat.actuatorType\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"values\":{\"0\":\"Actuator Not Connected\",\"1\":\"Air / Water\",\"2\":\"VAV / EPIV\",\"3\":\"Fire\",\"4\":\"Energy Valve\",\"5\":\"6way EPIV\"}},{\"register\":\"5\",\"reading\":\"dat.relativePosition\",\"multiplier\":\"100\",\"datatype\":\"int16\",\"units\":\"%\"},{\"register\":\"6\",\"reading\":\"dat.absolutePosition\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"units\":\"mm\"},{\"register\":\"6\",\"reading\":\"dat.sensorValue1\",\"multiplier\":\"1\",\"datatype\":\"int16\"},{\"register\":\"13\",\"reading\":\"dat.setpointAnalogue\",\"multiplier\":\"100\",\"datatype\":\"int16\",\"units\":\"%\"},{\"register\":\"100\",\"reading\":\"settings.busTermination\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"values\":{\"0\":\"inactive\",\"1\":\"active\"}},{\"register\":\"101\",\"reading\":\"stat.seriesNumberPart1\",\"multiplier\":\"1\",\"datatype\":\"int16\"},{\"register\":\"102\",\"reading\":\"stat.seriesNumberPart2\",\"multiplier\":\"1\",\"datatype\":\"int16\"},{\"register\":\"103\",\"reading\":\"stat.seriesNumberPart3\",\"multiplier\":\"1\",\"datatype\":\"int16\"},{\"register\":\"104\",\"reading\":\"stat.firmwareVirsion\",\"multiplier\":\"1\",\"datatype\":\"int16\"},{\"register\":\"106\",\"reading\":\"settings.min\",\"multiplier\":\"100\",\"datatype\":\"int16\",\"units\":\"%\"},{\"register\":\"107\",\"reading\":\"settings.max\",\"multiplier\":\"100\",\"datatype\":\"int16\",\"units\":\"%\"},{\"register\":\"108\",\"reading\":\"settings.sensorType1\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"values\":{\"0\":\"None\",\"1\":\"Active / Hybrid\",\"2\":\"Passive_1K\",\"3\":\"Passive_20K\",\"4\":\"Switch\",\"5\":\"PT1000_C\",\"6\":\"NI1000_C\",\"7\":\"NTC10K_C\",\"8\":\"PT1000_F\",\"9\":\"NI1000_F\",\"10\":\"NTC10K_F\"}},{\"register\":\"109\",\"reading\":\"settings.busFailPosition\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"values\":{\"0\":\"None / Last setpoint\",\"1\":\"Fast close\",\"2\":\"Fast open\",\"3\":\"Mid position\"}},{\"register\":\"110\",\"reading\":\"settings.watchdogTimeout\",\"multiplier\":\"1\",\"datatype\":\"int16\",\"units\":\"s\"}]",
        "payloadType": "json",
        "x": 1090,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "78fd59e2e12cef4c",
        "type": "change",
        "z": "9f18bf08.c2a65",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "registers",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "95c42acc.304aa8"
            ]
        ]
    },
    {
        "id": "cbdf3326192b5a0d",
        "type": "inject",
        "z": "9f18bf08.c2a65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "9ee29769dd2282a1"
            ]
        ]
    },
    {
        "id": "9ee29769dd2282a1",
        "type": "http request",
        "z": "9f18bf08.c2a65",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://raw.githubusercontent.com/heatweb/plumbing-controller/main/json/modbus/sontay.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "8e311c66ded75932",
                "c9960938c816bc8e"
            ]
        ]
    },
    {
        "id": "7e5b54e9693e7d91",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "8e311c66ded75932",
        "type": "function",
        "z": "9f18bf08.c2a65",
        "name": "sontay1",
        "func": "\nfunction checkMatch(device) {\n  return device.id == \"sontay1\";\n}\n\nmsg.payload = msg.payload.filter(checkMatch);\n\nif (msg.payload[0]) { msg.payload = msg.payload[0].registers }\n\nelse { return null; }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "7e5b54e9693e7d91",
                "78fd59e2e12cef4c"
            ]
        ]
    },
    {
        "id": "c9960938c816bc8e",
        "type": "debug",
        "z": "9f18bf08.c2a65",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 40,
        "wires": []
    },
    {
        "id": "658bad8c214b886f",
        "type": "delay",
        "z": "9f18bf08.c2a65",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 440,
        "wires": [
            [
                "e857ae6f.a401"
            ]
        ]
    }
]