{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "DS_AIVEN-INFLUXDB-INFLUX-26966CEE",
      "label": "aiven-influxdb-influx-26966cee",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "canvas",
      "name": "Canvas",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.0.3"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "ryantxu-ajax-panel",
      "name": "AJAX",
      "version": "0.1.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 40,
      "panels": [],
      "title": "Summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#b7b7b7",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dpH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "blue",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 0.4
                    },
                    {
                      "color": "transparent",
                      "value": 0.5
                    },
                    {
                      "color": "green",
                      "value": 0.501
                    },
                    {
                      "color": "red",
                      "value": 2.4
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "id": 53,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'dpH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Primary DP",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Central heating pump on": 1,
              "Room thermostat demand": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#b7b7b7",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xCH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#c2c2c2",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "tH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "blue",
                      "value": null
                    },
                    {
                      "color": "#2afaf4",
                      "value": 50
                    },
                    {
                      "color": "green",
                      "value": 60
                    },
                    {
                      "color": "orange",
                      "value": 70
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 2,
        "y": 1
      },
      "id": 54,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Primary Temp",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Central heating pump on": 1,
              "Room thermostat demand": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xDHW"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 4,
        "y": 1
      },
      "id": 45,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t1.timestamp AS time, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'fC' OR t1.varkey = 'xDHW' OR t1.varkey = 'fHDHW') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "DHW Flow",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "DHW Primary flow rate": 2,
              "DHW flow rate": 0,
              "Hot water valve steps": 1
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "DHW Output Temperature"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Primary Return Temperature DHW"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "DHW Return Temperature"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "DHW Flow Rate"
            },
            "properties": [
              {
                "id": "unit",
                "value": "flowlpm"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 25
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 49,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "alias": "DHW Output Temperature",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_tCo"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Primary Return Temperature DHW",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_tHoDHW"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "DHW Return Temperature",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_tDHWReturn"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "DHW Flow Rate",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": true,
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_fC"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "DHW Temperatures",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "transparent",
            "mode": "fixed"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#b7b7b7",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xCH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#c2c2c2",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 4,
        "x": 0,
        "y": 4
      },
      "id": 42,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "titleSize": 14,
          "valueSize": 16
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.vargroup = 'settings') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "DHW Settings",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Central heating pump time-out": true,
              "Central heating setpoint temperature": true,
              "Differential pressure calculation mode": false,
              "Error counter": true,
              "HTG pump time-out ": true,
              "HTG setpoint temperature": true,
              "Hot water setpoint temperature": false,
              "Keep-warm mode": false,
              "Keep-warm temperature": false,
              "Keep-warm time-out": false,
              "Legionella cycle enabled": false,
              "Magic spell": true,
              "Network return limit enabled": true,
              "Network return limit temperature": true,
              "Power-up counter": true,
              "Pump protection enabled": true,
              "Warm-up boost flow rate": false,
              "Weather compensation curve": true,
              "Weather compensation displacement": true
            },
            "indexByName": {
              "DHW Setpoint temperature": 0,
              "DP calculation mode": 13,
              "Error counter": 8,
              "HTG pump time-out ": 15,
              "HTG setpoint temperature": 10,
              "Keep-warm mode": 6,
              "Keep-warm temperature": 1,
              "Keep-warm time-out": 5,
              "Legionella cycle enabled": 7,
              "Magic spell": 11,
              "Network return limit enabled": 9,
              "Network return limit temperature": 4,
              "Power-up counter": 12,
              "Pump protection enabled": 14,
              "Warm-up boost flow rate": 16,
              "Weather compensation curve": 3,
              "Weather compensation displacement": 2
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "continuous-BlYlRd"
          },
          "mappings": [],
          "max": 80,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 4,
        "y": 5
      },
      "id": 55,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH \r\ndhw1 AS (SELECT t1.node, t1.device, t1.vargroup, t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tCo') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey\r\n),\r\ndhw2 AS (SELECT d1.*, t3.value::numeric AS flowRate,\r\n       CASE WHEN t3.value::numeric=0 THEN 'white'\r\n            ELSE 'green'\r\n       END\r\n     FROM dhw1 d1 \r\n  INNER JOIN readings t3 ON d1.node = t3.node AND d1.device = t3.device AND d1.vargroup = t3.vargroup AND t3.varkey = 'fC'\r\n)\r\nSELECT * FROM dhw2;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH \r\ndhw1 AS (SELECT t1.node, t1.device, t1.vargroup, t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tHoDHW') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey\r\n),\r\ndhw2 AS (SELECT d1.*, t3.value::numeric AS flowRate,\r\n       CASE WHEN t3.value::numeric<6 THEN 'white'\r\n            ELSE 'green'\r\n       END\r\n     FROM dhw1 d1 \r\n  INNER JOIN readings t3 ON d1.node = t3.node AND d1.device = t3.device AND d1.vargroup = t3.vargroup AND t3.varkey = 'xDHW'\r\n)\r\nSELECT * FROM dhw2;",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tDHWReturn') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey",
          "refId": "C",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "DHW Temperatures",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              },
              {
                "fieldName": "case",
                "handlerKey": "color"
              }
            ]
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 80,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "lasttCo"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "blue",
                      "value": null
                    },
                    {
                      "color": "#57e3eb",
                      "value": 45
                    },
                    {
                      "color": "green",
                      "value": 52
                    },
                    {
                      "color": "yellow",
                      "value": 58
                    },
                    {
                      "color": "red",
                      "value": 63
                    },
                    {
                      "color": "orange",
                      "value": 65
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "lastvCavr"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "lastvCrun"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 4,
        "y": 9
      },
      "id": 51,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "titleSize": 14
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'lasttCo' OR t1.varkey = 'lastvCrun' OR t1.varkey = 'lastvCavr') AND t1.node = '$node' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Last Tap Delivery",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 26,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "flowlpm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 52,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "alias": "DHW Flow Rate",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"fC\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_fC"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "transparent",
            "mode": "fixed"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#b7b7b7",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xCH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#c2c2c2",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 0,
        "y": 13
      },
      "id": 41,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "titleSize": 14,
          "valueSize": 16
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.vargroup = 'settings') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CH Settings",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Central heating pump time-out": false,
              "DHW Setpoint temperature": true,
              "DP calculation mode": true,
              "Differential pressure calculation mode": true,
              "Error counter": true,
              "Hot water setpoint temperature": true,
              "Keep-warm mode": true,
              "Keep-warm temperature": true,
              "Keep-warm time-out": true,
              "Legionella cycle enabled": true,
              "Magic spell": true,
              "Power-up counter": true,
              "Warm-up boost flow rate": true,
              "Weather compensation curve": true,
              "Weather compensation displacement": true
            },
            "indexByName": {
              "DHW Setpoint temperature": 15,
              "DP calculation mode": 12,
              "Error counter": 8,
              "HTG pump time-out ": 14,
              "HTG setpoint temperature": 0,
              "Keep-warm mode": 7,
              "Keep-warm temperature": 5,
              "Keep-warm time-out": 6,
              "Legionella cycle enabled": 4,
              "Magic spell": 10,
              "Network return limit enabled": 9,
              "Network return limit temperature": 3,
              "Power-up counter": 11,
              "Pump protection enabled": 13,
              "Warm-up boost flow rate": 16,
              "Weather compensation curve": 2,
              "Weather compensation displacement": 1
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#b7b7b7",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xCH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#c2c2c2",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 2,
        "x": 4,
        "y": 13
      },
      "id": 43,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'stat' OR t1.varkey = 'pump') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CH Demand",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Central heating pump on": 1,
              "Room thermostat demand": 0
            },
            "renameByName": {
              "HTG pump on": "Pump",
              "Room thermostat demand": "Demand"
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xCH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 6,
        "y": 13
      },
      "id": 47,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'fHCH' OR t1.varkey = 'xCH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CH Flow",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Central heating valve steps": 0,
              "Network flow rate for central heating": 1
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "CH Output Temperature"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "HIU Central Heating Out"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Primary Return Temperature CH"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Primary Return Central Heating"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Pump"
            },
            "properties": [
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 25
              },
              {
                "id": "max",
                "value": 10
              },
              {
                "id": "custom.axisPlacement",
                "value": "hidden"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "id": 50,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "alias": "CH Output Temperature",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_tCHo"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "node::tag",
              "operator": "=~",
              "value": "/^$node$/"
            }
          ]
        },
        {
          "alias": "Primary Return Temperature CH",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_tHoCH"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Pump",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "/$node/",
          "orderByTime": "ASC",
          "policy": "default_retention_policy",
          "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dat_pump"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Central Heating Temperatures",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "continuous-BlYlRd"
          },
          "mappings": [],
          "max": 80,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 6,
        "y": 17
      },
      "id": 59,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH \r\ndhw1 AS (SELECT t1.node, t1.device, t1.vargroup, t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tCHo') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey\r\n),\r\ndhw2 AS (SELECT d1.*, t3.value::numeric AS flowRate,\r\n       CASE WHEN t3.value::numeric=0 THEN 'white'\r\n            ELSE 'green'\r\n       END\r\n     FROM dhw1 d1 \r\n  INNER JOIN readings t3 ON d1.node = t3.node AND d1.device = t3.device AND d1.vargroup = t3.vargroup AND t3.varkey = 'pump'\r\n)\r\nSELECT * FROM dhw2;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH \r\ndhw1 AS (SELECT t1.node, t1.device, t1.vargroup, t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tHoCH') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey\r\n),\r\ndhw2 AS (SELECT d1.*, t3.value::numeric AS flowRate,\r\n       CASE WHEN d1.value::numeric>55 THEN 'red'\r\n            WHEN d1.value::numeric>50 THEN 'yellow'\r\n            WHEN t3.value::numeric>5 THEN 'green'            \r\n            ELSE 'white'\r\n       END\r\n     FROM dhw1 d1 \r\n  INNER JOIN readings t3 ON d1.node = t3.node AND d1.device = t3.device AND d1.vargroup = t3.vargroup AND t3.varkey = 'xCH'\r\n)\r\nSELECT * FROM dhw2;",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CH Temperatures",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              },
              {
                "fieldName": "case",
                "handlerKey": "color"
              }
            ]
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 272,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#b7b7b7",
                "value": null
              },
              {
                "color": "green",
                "value": 0.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "xCH"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#c2c2c2",
                      "value": null
                    },
                    {
                      "color": "green",
                      "value": 6
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 4,
        "y": 18
      },
      "id": 44,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'pCH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "CH Pressure",
      "transformations": [
        {
          "id": "rowsToFields",
          "options": {
            "mappings": [
              {
                "fieldName": "varkey",
                "handlerKey": "field.name"
              },
              {
                "fieldName": "value",
                "handlerKey": "field.value"
              },
              {
                "fieldName": "units",
                "handlerKey": "unit"
              },
              {
                "fieldName": "title",
                "handlerKey": "displayName"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Central heating pump on": 1,
              "Room thermostat demand": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "stat"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 37,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#d0e3ff"
                  },
                  {
                    "color": "blue",
                    "value": 10
                  },
                  {
                    "color": "#57bef2",
                    "value": 20
                  },
                  {
                    "color": "#6ED0E0",
                    "value": 30
                  },
                  {
                    "color": "#52ffa0",
                    "value": 40
                  },
                  {
                    "color": "super-light-green",
                    "value": 45
                  },
                  {
                    "color": "light-green",
                    "value": 55
                  },
                  {
                    "color": "yellow",
                    "value": 60
                  },
                  {
                    "color": "orange",
                    "value": 65
                  },
                  {
                    "color": "red",
                    "value": 70
                  },
                  {
                    "color": "super-light-red",
                    "value": 90
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "fC"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#bfbfbf"
                        },
                        {
                          "color": "green",
                          "value": 1
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "xDHW"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#cecece"
                        },
                        {
                          "color": "super-light-green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#bcbcbc"
                        },
                        {
                          "color": "super-light-green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "red"
                        },
                        {
                          "color": "yellow",
                          "value": 1
                        },
                        {
                          "color": "super-light-green",
                          "value": 1.2
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "dpH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-red"
                        },
                        {
                          "color": "light-blue",
                          "value": 0.23
                        },
                        {
                          "color": "light-yellow",
                          "value": 0.5
                        },
                        {
                          "color": "green",
                          "value": 0.501
                        },
                        {
                          "color": "super-light-green",
                          "value": 0.7
                        },
                        {
                          "color": "super-light-red",
                          "value": 2.5
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "stat"
                },
                "properties": [
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "color": "#c1c1c1",
                            "index": 1,
                            "text": "OFF"
                          },
                          "1": {
                            "color": "light-green",
                            "index": 0,
                            "text": "ON"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "fC"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#cecece"
                        },
                        {
                          "color": "#a1b89e",
                          "value": 0.1
                        },
                        {
                          "color": "light-green",
                          "value": 1
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tH"
                },
                "properties": [
                  {
                    "id": "min",
                    "value": 30
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pump"
                },
                "properties": [
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "color": "transparent",
                            "index": 1,
                            "text": "OFF"
                          },
                          "1": {
                            "color": "super-light-green",
                            "icon": "",
                            "index": 0,
                            "text": "ON"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 17,
            "w": 17,
            "x": 0,
            "y": 22
          },
          "id": 36,
          "options": {
            "inlineEditing": false,
            "root": {
              "background": {
                "color": {
                  "fixed": "#ffffff"
                },
                "image": {
                  "field": "pump",
                  "mode": "field"
                }
              },
              "border": {
                "color": {
                  "fixed": "dark-green"
                },
                "width": 0
              },
              "constraint": {
                "horizontal": "left",
                "vertical": "top"
              },
              "elements": [
                {
                  "background": {
                    "color": {
                      "fixed": "transparent"
                    },
                    "image": {
                      "fixed": "https://heatweb.b-cdn.net/dashboarding/twinplatehiubare.png"
                    },
                    "size": "contain"
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "valign": "middle"
                  },
                  "connections": [],
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 1",
                  "placement": {
                    "height": 657,
                    "left": 49.5,
                    "top": 4,
                    "width": 1145
                  },
                  "type": "rectangle"
                },
                {
                  "background": {
                    "color": {
                      "field": "fC",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "fC",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 2",
                  "placement": {
                    "height": 36,
                    "left": -260.5,
                    "top": 81.5,
                    "width": 119
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "xDHW",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "field": "xDHW",
                      "fixed": "dark-green"
                    },
                    "width": 2
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "xDHW",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 3",
                  "placement": {
                    "height": 36,
                    "left": 133,
                    "top": 129,
                    "width": 135
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "xCH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "field": "xCH",
                      "fixed": "dark-green"
                    },
                    "width": 2
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "xCH",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 4",
                  "placement": {
                    "height": 36,
                    "left": 139.5,
                    "top": -112.5,
                    "width": 135
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "pCH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    },
                    "width": 1
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 18,
                    "text": {
                      "field": "pCH",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 5",
                  "placement": {
                    "height": 40,
                    "left": -264,
                    "top": -12.5,
                    "width": 92
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "dpH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    },
                    "width": 1
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 18,
                    "text": {
                      "field": "dpH",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 6",
                  "placement": {
                    "height": 40,
                    "left": 418,
                    "top": 131,
                    "width": 115
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "stat",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "#000000"
                    },
                    "width": 1
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 7",
                  "placement": {
                    "height": 30,
                    "left": -423,
                    "top": -213.5,
                    "width": 46
                  },
                  "type": "rectangle"
                },
                {
                  "background": {
                    "color": {
                      "field": "tCo",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 8",
                  "placement": {
                    "height": 10,
                    "left": -265.5,
                    "top": 181,
                    "width": 369
                  },
                  "type": "rectangle"
                },
                {
                  "background": {
                    "color": {
                      "field": "tH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 9",
                  "placement": {
                    "height": 9,
                    "left": 270,
                    "top": 182,
                    "width": 550
                  },
                  "type": "rectangle"
                },
                {
                  "background": {
                    "color": {
                      "field": "tCo",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "field": "fC",
                      "fixed": "dark-green"
                    },
                    "width": 2
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "tCo",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 10",
                  "placement": {
                    "height": 36,
                    "left": -559.5,
                    "top": 177.5,
                    "width": 119
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "tCHo",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "field": "pump",
                      "fixed": "dark-green"
                    },
                    "width": 2
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "tCHo",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 11",
                  "placement": {
                    "height": 36,
                    "left": -559.5,
                    "top": -61.5,
                    "width": 119
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "tH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "tH",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 12",
                  "placement": {
                    "height": 36,
                    "left": 518,
                    "top": 224,
                    "width": 119
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "tHo",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "tHo",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 13",
                  "placement": {
                    "height": 36,
                    "left": 524,
                    "top": 35,
                    "width": 119
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "tH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 14",
                  "placement": {
                    "height": 10,
                    "left": 115.5,
                    "top": -60.5,
                    "width": 235
                  },
                  "type": "rectangle"
                },
                {
                  "background": {
                    "color": {
                      "field": "tH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "fixed": "dark-green"
                    }
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 15",
                  "placement": {
                    "height": 235,
                    "left": 243,
                    "top": 64,
                    "width": 11
                  },
                  "type": "rectangle"
                },
                {
                  "background": {
                    "color": {
                      "field": "tHoDHW",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "field": "xDHW",
                      "fixed": "dark-green"
                    },
                    "width": 2
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "tHoDHW",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 16",
                  "placement": {
                    "height": 36,
                    "left": 135.5,
                    "top": 30.5,
                    "width": 119
                  },
                  "type": "metric-value"
                },
                {
                  "background": {
                    "color": {
                      "field": "tHoCH",
                      "fixed": "#D9D9D9"
                    }
                  },
                  "border": {
                    "color": {
                      "field": "pump",
                      "fixed": "dark-green"
                    },
                    "width": 2
                  },
                  "config": {
                    "align": "center",
                    "color": {
                      "fixed": "#000000"
                    },
                    "size": 20,
                    "text": {
                      "field": "tHoCH",
                      "fixed": "",
                      "mode": "field"
                    },
                    "valign": "middle"
                  },
                  "constraint": {
                    "horizontal": "center",
                    "vertical": "center"
                  },
                  "name": "Element 17",
                  "placement": {
                    "height": 36,
                    "left": 140.5,
                    "top": -211.5,
                    "width": 119
                  },
                  "type": "metric-value"
                }
              ],
              "name": "Element 1714516338944",
              "placement": {
                "height": 100,
                "left": 0,
                "top": 0,
                "width": 100
              },
              "type": "frame"
            },
            "showAdvancedTypes": false
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE t1.node = '$node'AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "$HIU",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            }
          ],
          "type": "canvas"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#fffdfd"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 3,
            "w": 7,
            "x": 17,
            "y": 22
          },
          "id": 30,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "text": {
              "valueSize": 28
            },
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'Serial') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "HIU Serial Number",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "Central heating pump on": 1,
                  "Room thermostat demand": 0
                },
                "renameByName": {}
              }
            }
          ],
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#fffdfd"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 3,
            "w": 7,
            "x": 17,
            "y": 25
          },
          "id": 32,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "text": {
              "valueSize": 28
            },
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'upTime') AND t1.node = '$node'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Up Time",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "Central heating pump on": 1,
                  "Room thermostat demand": 0
                },
                "renameByName": {}
              }
            }
          ],
          "transparent": true,
          "type": "stat"
        }
      ],
      "title": "Graphics",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 23,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#e5e5e5",
                "mode": "fixed"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#b7b7b7"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 4,
            "x": 0,
            "y": 23
          },
          "id": 38,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "text": {
              "titleSize": 14,
              "valueSize": 16
            },
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.vargroup = 'settings') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "CH Settings",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Central heating pump time-out": false,
                  "DHW Setpoint temperature": true,
                  "DP calculation mode": true,
                  "Differential pressure calculation mode": true,
                  "Error counter": true,
                  "Hot water setpoint temperature": true,
                  "Keep-warm mode": true,
                  "Keep-warm temperature": true,
                  "Keep-warm time-out": true,
                  "Legionella cycle enabled": true,
                  "Magic spell": true,
                  "Power-up counter": true,
                  "Warm-up boost flow rate": true,
                  "Weather compensation curve": true,
                  "Weather compensation displacement": true
                },
                "indexByName": {
                  "DHW Setpoint temperature": 15,
                  "DP calculation mode": 12,
                  "Error counter": 8,
                  "HTG pump time-out ": 14,
                  "HTG setpoint temperature": 0,
                  "Keep-warm mode": 7,
                  "Keep-warm temperature": 5,
                  "Keep-warm time-out": 6,
                  "Legionella cycle enabled": 4,
                  "Magic spell": 10,
                  "Network return limit enabled": 9,
                  "Network return limit temperature": 3,
                  "Power-up counter": 11,
                  "Pump protection enabled": 13,
                  "Warm-up boost flow rate": 16,
                  "Weather compensation curve": 2,
                  "Weather compensation displacement": 1
                },
                "renameByName": {}
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#b7b7b7"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 2,
            "x": 4,
            "y": 23
          },
          "id": 27,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'stat' OR t1.varkey = 'pump') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "CH Demand",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "Central heating pump on": 1,
                  "Room thermostat demand": 0
                },
                "renameByName": {
                  "HTG pump on": "Pump",
                  "Room thermostat demand": "Demand"
                }
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#b7b7b7"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 4,
            "w": 6,
            "x": 6,
            "y": 23
          },
          "id": 26,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'fHCH' OR t1.varkey = 'xCH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "CH Flow",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "Central heating valve steps": 0,
                  "Network flow rate for central heating": 1
                },
                "renameByName": {}
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#e5e5e5",
                "mode": "fixed"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#b7b7b7"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 4,
            "x": 12,
            "y": 23
          },
          "id": 39,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "text": {
              "titleSize": 14,
              "valueSize": 16
            },
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.vargroup = 'settings') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "DHW Settings",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Central heating pump time-out": true,
                  "Central heating setpoint temperature": true,
                  "Differential pressure calculation mode": false,
                  "Error counter": true,
                  "HTG pump time-out ": true,
                  "HTG setpoint temperature": true,
                  "Hot water setpoint temperature": false,
                  "Keep-warm mode": false,
                  "Keep-warm temperature": false,
                  "Keep-warm time-out": false,
                  "Legionella cycle enabled": false,
                  "Magic spell": true,
                  "Network return limit enabled": true,
                  "Network return limit temperature": true,
                  "Power-up counter": true,
                  "Pump protection enabled": true,
                  "Warm-up boost flow rate": false,
                  "Weather compensation curve": true,
                  "Weather compensation displacement": true
                },
                "indexByName": {
                  "DHW Setpoint temperature": 0,
                  "DP calculation mode": 13,
                  "Error counter": 8,
                  "HTG pump time-out ": 15,
                  "HTG setpoint temperature": 10,
                  "Keep-warm mode": 6,
                  "Keep-warm temperature": 1,
                  "Keep-warm time-out": 5,
                  "Legionella cycle enabled": 7,
                  "Magic spell": 11,
                  "Network return limit enabled": 9,
                  "Network return limit temperature": 4,
                  "Power-up counter": 12,
                  "Pump protection enabled": 14,
                  "Warm-up boost flow rate": 16,
                  "Weather compensation curve": 3,
                  "Weather compensation displacement": 2
                },
                "renameByName": {}
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#b7b7b7"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xDHW"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 4,
            "w": 8,
            "x": 16,
            "y": 23
          },
          "id": 33,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t1.timestamp AS time, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'fC' OR t1.varkey = 'xDHW' OR t1.varkey = 'fHDHW') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "DHW Flow",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "DHW Primary flow rate": 2,
                  "DHW flow rate": 0,
                  "Hot water valve steps": 1
                },
                "renameByName": {}
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "continuous-BlYlRd"
              },
              "mappings": [],
              "max": 80,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 6,
            "x": 6,
            "y": 27
          },
          "id": 25,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tCHo' OR t1.varkey = 'tHoCH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "CH Temperatures",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {}
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "continuous-BlYlRd"
              },
              "mappings": [],
              "max": 80,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 8,
            "x": 16,
            "y": 27
          },
          "id": 15,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tCo' OR t1.varkey = 'tHoDHW' OR t1.varkey = 'tDHWReturn') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "DHW Temperatures",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 272,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#b7b7b7"
                  },
                  {
                    "color": "green",
                    "value": 0.1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "xCH"
                },
                "properties": [
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "#c2c2c2"
                        },
                        {
                          "color": "green",
                          "value": 6
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 4,
            "y": 28
          },
          "id": 29,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'pCH') AND t1.node = '$node' AND t1.device = '$HIU'\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "CH Pressure",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "Central heating pump on": 1,
                  "Room thermostat demand": 0
                },
                "renameByName": {}
              }
            }
          ],
          "type": "stat"
        }
      ],
      "title": "Current Values",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 7,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "CH Output Temperature"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "HIU Central Heating Out"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Primary Return Temperature CH"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Primary Return Central Heating"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 24
          },
          "id": 11,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "CH Output Temperature",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_tCHo"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "node::tag",
                  "operator": "=~",
                  "value": "/^$node$/"
                }
              ]
            },
            {
              "alias": "Primary Return Temperature CH",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_tHoCH"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Central Heating Temperatures",
          "transformations": [],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "DHW Output Temperature"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Primary Return Temperature DHW"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "DHW Return Temperature"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 24
          },
          "id": 28,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "DHW Output Temperature",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_tCo"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Primary Return Temperature DHW",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_tHoDHW"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "DHW Return Temperature",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"tCHo\" or r[\"varkey\"] == \"tHoCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_tDHWReturn"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "DHW Temperatures",
          "transformations": [],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "thresholds"
              },
              "custom": {
                "fillOpacity": 70,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#00000000"
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 32
          },
          "id": 14,
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "never",
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Stat",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "previous"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"stat\" or r[\"varkey\"] == \"pump\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_stat"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Pump",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "previous"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"stat\" or r[\"varkey\"] == \"pump\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_pump"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Demand",
          "transformations": [
            {
              "id": "joinByField",
              "options": {}
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "Time": 0,
                  "dat_pump {device=\"fulhamrs1-3016031af27a0c25-pump\", name=\"eon_fulhamrs1_3016031af27a0c25\", network=\"eon\", node=\"fulhamrs1\", vargroup=\"dat\", varkey=\"pump\"}": 2,
                  "dat_stat {device=\"fulhamrs1-3016031af27a0c25-stat\", name=\"eon_fulhamrs1_3016031af27a0c25\", network=\"eon\", node=\"fulhamrs1\", vargroup=\"dat\", varkey=\"stat\"}": 1
                },
                "renameByName": {
                  "dat_pump {device=\"fulhamrs1-3016031af27a0c25-pump\", name=\"eon_fulhamrs1_3016031af27a0c25\", network=\"eon\", node=\"fulhamrs1\", vargroup=\"dat\", varkey=\"pump\"}": "Pump",
                  "dat_pump {device=\"fulhamrs2-3017031af27a0c25-pump\", name=\"eon_fulhamrs2_3017031af27a0c25\", network=\"eon\", node=\"fulhamrs2\", vargroup=\"dat\", varkey=\"pump\"}": "Pump",
                  "dat_stat {device=\"fulhamrs1-3016031af27a0c25-stat\", name=\"eon_fulhamrs1_3016031af27a0c25\", network=\"eon\", node=\"fulhamrs1\", vargroup=\"dat\", varkey=\"stat\"}": "Stat",
                  "dat_stat {device=\"fulhamrs2-3017031af27a0c25-stat\", name=\"eon_fulhamrs2_3017031af27a0c25\", network=\"eon\", node=\"fulhamrs2\", vargroup=\"dat\", varkey=\"stat\"}": "Stat"
                }
              }
            }
          ],
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 26,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "flowlpm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 32
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "DHW Flow Rate",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"fC\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_fC"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Tap Flow Rate",
          "transformations": [],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 15,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "/ 270"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "eon_fulhamrs2_3017031af27a0c25 dat_tCo {device=\"fulhamrs2-3017031af27a0c25-tCo\", network=\"eon\", node=\"fulhamrs2\", vargroup=\"dat\", varkey=\"tCo\"}"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "HIU DHW Out"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "eon_fulhamrs2_dhw dat_tDHWReturn {device=\"fulhamrs2-dhw-tDHWReturn\", network=\"eon\", node=\"fulhamrs2\", vargroup=\"dat\", varkey=\"tDHWReturn\"}"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "DHW Secondary Return"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 0,
            "y": 37
          },
          "id": 13,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"xCH\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_xCH"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "CH Stepper Valve Position",
          "transformations": [],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 15,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "/ 270"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "eon_fulhamrs2_3017031af27a0c25 dat_tCo {device=\"fulhamrs2-3017031af27a0c25-tCo\", network=\"eon\", node=\"fulhamrs2\", vargroup=\"dat\", varkey=\"tCo\"}"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "HIU DHW Out"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "eon_fulhamrs2_dhw dat_tDHWReturn {device=\"fulhamrs2-dhw-tDHWReturn\", network=\"eon\", node=\"fulhamrs2\", vargroup=\"dat\", varkey=\"tDHWReturn\"}"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "DHW Secondary Return"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 37
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_AIVEN-INFLUXDB-INFLUX-26966CEE}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/$node/",
              "orderByTime": "ASC",
              "policy": "default_retention_policy",
              "query": "import \"strings\"\r\nfrom(bucket: \"$bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"varkey\"] == \"xDHW\")\r\n  |> filter(\r\n          fn: (r) => if \"$node\" != \"*\" then\r\n                        r[\"node\"] == \"$node\"\r\n                    else\r\n                        r._measurement != \"\",\r\n      )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({r with device: strings.joinStr(arr: [r[\"node\"], r[\"device\"], r[\"varkey\"]], v: \"-\")}))\r\n  |> yield(name: \"last\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "dat_xDHW"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "DHW Stepper Valve Position",
          "transformations": [],
          "type": "timeseries"
        }
      ],
      "title": "Operation",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 9,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "title"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 333
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "varkey"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 211
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "value"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 340
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 25
          },
          "id": 20,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "varkey"
              }
            ]
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE t1.vargroup = 'system' AND t1.node = '$node' AND (t1.device = '$HIU' OR t1.device = '$node')",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "varkey",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  },
                  {
                    "parameters": [
                      {
                        "name": "value",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50,
                "whereJsonTree": {
                  "children1": [
                    {
                      "id": "aa8bb8a9-89ab-4cde-b012-318f2f4634e7",
                      "properties": {
                        "field": "vargroup",
                        "operator": "equal",
                        "value": [
                          "dat"
                        ],
                        "valueSrc": [
                          "value"
                        ],
                        "valueType": [
                          "text"
                        ]
                      },
                      "type": "rule"
                    }
                  ],
                  "id": "bb9a98ba-89ab-4cde-b012-318f2ec08180",
                  "type": "group"
                },
                "whereString": "vargroup = 'dat'"
              },
              "table": "readings"
            }
          ],
          "title": "System Data",
          "transformations": [
            {
              "disabled": true,
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  }
                ]
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "title"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 333
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "varkey"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 206
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "value"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 124
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 25
          },
          "id": 18,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "varkey"
              }
            ]
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE t1.vargroup = 'settings' AND t1.node = '$node' AND t1.device = '$HIU'",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "varkey",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  },
                  {
                    "parameters": [
                      {
                        "name": "value",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50,
                "whereJsonTree": {
                  "children1": [
                    {
                      "id": "aa8bb8a9-89ab-4cde-b012-318f2f4634e7",
                      "properties": {
                        "field": "vargroup",
                        "operator": "equal",
                        "value": [
                          "dat"
                        ],
                        "valueSrc": [
                          "value"
                        ],
                        "valueType": [
                          "text"
                        ]
                      },
                      "type": "rule"
                    }
                  ],
                  "id": "bb9a98ba-89ab-4cde-b012-318f2ec08180",
                  "type": "group"
                },
                "whereString": "vargroup = 'dat'"
              },
              "table": "readings"
            }
          ],
          "title": "Settings",
          "transformations": [
            {
              "disabled": true,
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  }
                ]
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "System Information",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 21,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "title"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 466
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "varkey"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 79
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "value"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 118
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 22
          },
          "id": 17,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE t1.vargroup = 'dat' AND t1.node = '$node' AND (t1.device = '$HIU' OR t1.device = '$node')",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "varkey",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  },
                  {
                    "parameters": [
                      {
                        "name": "value",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50,
                "whereJsonTree": {
                  "children1": [
                    {
                      "id": "aa8bb8a9-89ab-4cde-b012-318f2f4634e7",
                      "properties": {
                        "field": "vargroup",
                        "operator": "equal",
                        "value": [
                          "dat"
                        ],
                        "valueSrc": [
                          "value"
                        ],
                        "valueType": [
                          "text"
                        ]
                      },
                      "type": "rule"
                    }
                  ],
                  "id": "bb9a98ba-89ab-4cde-b012-318f2ec08180",
                  "type": "group"
                },
                "whereString": "vargroup = 'dat'"
              },
              "table": "readings"
            }
          ],
          "title": "General Data",
          "transformations": [
            {
              "disabled": true,
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  }
                ]
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "title"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 527
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "varkey"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 140
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "value"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 192
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 22
          },
          "id": 19,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE t1.vargroup = 'stat' AND t1.node = '$node' AND (t1.device = '$HIU' OR t1.device = '$node')",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "varkey",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  },
                  {
                    "parameters": [
                      {
                        "name": "value",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50,
                "whereJsonTree": {
                  "children1": [
                    {
                      "id": "aa8bb8a9-89ab-4cde-b012-318f2f4634e7",
                      "properties": {
                        "field": "vargroup",
                        "operator": "equal",
                        "value": [
                          "dat"
                        ],
                        "valueSrc": [
                          "value"
                        ],
                        "valueType": [
                          "text"
                        ]
                      },
                      "type": "rule"
                    }
                  ],
                  "id": "bb9a98ba-89ab-4cde-b012-318f2ec08180",
                  "type": "group"
                },
                "whereString": "vargroup = 'dat'"
              },
              "table": "readings"
            }
          ],
          "title": "Stastistics",
          "transformations": [
            {
              "disabled": true,
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  }
                ]
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "Operational Data",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 35,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "gridPos": {
            "h": 20,
            "w": 24,
            "x": 0,
            "y": 33
          },
          "header_js": "{}",
          "id": 34,
          "method": "iframe",
          "mode": "html",
          "params_js": "",
          "request": "http",
          "responseType": "text",
          "showErrors": true,
          "showTime": false,
          "showTimeFormat": "LTS",
          "showTimeValue": "request",
          "skipSameURL": true,
          "templateResponse": true,
          "type": "ryantxu-ajax-panel",
          "url": "https://flamco.aalberts-hfc.com/media/files/documentation/bro_tech_hiu_A2RXE.pdf",
          "withCredentials": false
        }
      ],
      "title": "Documentation",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 57,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "continuous-BlYlRd"
              },
              "mappings": [],
              "max": 80,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 8,
            "x": 0,
            "y": 28
          },
          "id": 46,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tCo' OR t1.varkey = 'tHoDHW' OR t1.varkey = 'tDHWReturn') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "DHW Temperatures",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  }
                ]
              }
            }
          ],
          "type": "stat"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "continuous-BlYlRd"
              },
              "mappings": [],
              "max": 80,
              "min": 20,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 8,
            "x": 8,
            "y": 28
          },
          "id": 58,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH \r\ndhw1 AS (SELECT t1.node, t1.device, t1.vargroup, t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tCo') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey\r\n),\r\ndhw2 AS (SELECT d1.*, t3.value::numeric AS flowRate,\r\n       CASE WHEN t3.value::numeric=0 THEN 'white'\r\n            ELSE 'green'\r\n       END\r\n     FROM dhw1 d1 \r\n  INNER JOIN readings t3 ON d1.node = t3.node AND d1.device = t3.device AND d1.vargroup = t3.vargroup AND t3.varkey = 'fC'\r\n)\r\nSELECT * FROM dhw2;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            },
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "hide": false,
              "rawQuery": true,
              "rawSql": "WITH \r\ndhw1 AS (SELECT t1.node, t1.device, t1.vargroup, t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tHoDHW') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey\r\n),\r\ndhw2 AS (SELECT d1.*, t3.value::numeric AS flowRate,\r\n       CASE WHEN t3.value::numeric<6 THEN 'white'\r\n            ELSE 'green'\r\n       END\r\n     FROM dhw1 d1 \r\n  INNER JOIN readings t3 ON d1.node = t3.node AND d1.device = t3.device AND d1.vargroup = t3.vargroup AND t3.varkey = 'xDHW'\r\n)\r\nSELECT * FROM dhw2;",
              "refId": "B",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            },
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_POSTGRESQL}"
              },
              "editorMode": "code",
              "format": "table",
              "hide": false,
              "rawQuery": true,
              "rawSql": "SELECT t1.varkey, t2.title, t1.value::numeric, t2.units FROM readings t1\r\n  INNER JOIN fields t2 ON t1.varkey = t2.varkey AND t1.vargroup = t2.vargroup\r\n  WHERE (t1.varkey = 'tDHWReturn') AND t1.node = '$node' AND t1.vargroup = 'dat' AND (t1.device = '$HIU' OR t1.device = 'dhw')\r\n  ORDER BY t1.varkey",
              "refId": "C",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "DHW Temperatures",
          "transformations": [
            {
              "id": "rowsToFields",
              "options": {
                "mappings": [
                  {
                    "fieldName": "varkey",
                    "handlerKey": "field.name"
                  },
                  {
                    "fieldName": "value",
                    "handlerKey": "field.value"
                  },
                  {
                    "fieldName": "units",
                    "handlerKey": "unit"
                  },
                  {
                    "fieldName": "title",
                    "handlerKey": "displayName"
                  },
                  {
                    "fieldName": "case",
                    "handlerKey": "color"
                  }
                ]
              }
            }
          ],
          "type": "stat"
        }
      ],
      "title": "Experimental",
      "type": "row"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "fulhamrs1",
          "value": "fulhamrs1"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "node",
        "options": [
          {
            "selected": true,
            "text": "fulhamrs1",
            "value": "fulhamrs1"
          },
          {
            "selected": false,
            "text": "fulhamrs2",
            "value": "fulhamrs2"
          }
        ],
        "query": "fulhamrs1,fulhamrs2",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "SELECT value FROM readings WHERE node='$node' AND varkey='Serial'",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "HIU",
        "options": [],
        "query": "SELECT value FROM readings WHERE node='$node' AND varkey='Serial'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "SELECT value FROM readings WHERE node='$node' AND varkey='upTime'",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "upTime",
        "options": [],
        "query": "SELECT value FROM readings WHERE node='$node' AND varkey='upTime'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "HIU Data",
  "uid": "GbYq2JKVzs",
  "version": 81,
  "weekStart": ""
}